var oA=Object.defineProperty;var aA=(s,t,e)=>t in s?oA(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var te=(s,t,e)=>(aA(s,typeof t!="symbol"?t+"":t,e),e);function lA(s,t){for(var e=0;e<t.length;e++){const n=t[e];if(typeof n!="string"&&!Array.isArray(n)){for(const i in n)if(i!=="default"&&!(i in s)){const r=Object.getOwnPropertyDescriptor(n,i);r&&Object.defineProperty(s,i,r.get?r:{enumerable:!0,get:()=>n[i]})}}}return Object.freeze(Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();function en(){}function fS(s){return s()}function uy(){return Object.create(null)}function Ur(s){s.forEach(fS)}function pS(s){return typeof s=="function"}function gi(s,t){return s!=s?t==t:s!==t||s&&typeof s=="object"||typeof s=="function"}function cA(s){return Object.keys(s).length===0}function Bt(s,t){s.appendChild(t)}function Ht(s,t,e){s.insertBefore(t,e||null)}function Gt(s){s.parentNode.removeChild(s)}function mS(s,t){for(let e=0;e<s.length;e+=1)s[e]&&s[e].d(t)}function jt(s){return document.createElement(s)}function Ke(s){return document.createTextNode(s)}function he(){return Ke(" ")}function Gx(){return Ke("")}function Yn(s,t,e,n){return s.addEventListener(t,e,n),()=>s.removeEventListener(t,e,n)}function wt(s,t,e){e==null?s.removeAttribute(t):s.getAttribute(t)!==e&&s.setAttribute(t,e)}function Lr(s){return s===""?null:+s}function uA(s){return Array.from(s.childNodes)}function ui(s,t){t=""+t,s.wholeText!==t&&(s.data=t)}function Qs(s,t){s.value=t==null?"":t}function Fl(s,t,e,n){e===null?s.style.removeProperty(t):s.style.setProperty(t,e,n?"important":"")}function hy(s,t){return new s(t)}let tu;function Xc(s){tu=s}function hA(){if(!tu)throw new Error("Function called outside component initialization");return tu}function dA(s){hA().$$.on_mount.push(s)}const Pc=[],Og=[],Wd=[],dy=[],fA=Promise.resolve();let zg=!1;function pA(){zg||(zg=!0,fA.then(gS))}function Bg(s){Wd.push(s)}const km=new Set;let Kh=0;function gS(){const s=tu;do{for(;Kh<Pc.length;){const t=Pc[Kh];Kh++,Xc(t),mA(t.$$)}for(Xc(null),Pc.length=0,Kh=0;Og.length;)Og.pop()();for(let t=0;t<Wd.length;t+=1){const e=Wd[t];km.has(e)||(km.add(e),e())}Wd.length=0}while(Pc.length);for(;dy.length;)dy.pop()();zg=!1,km.clear(),Xc(s)}function mA(s){if(s.fragment!==null){s.update(),Ur(s.before_update);const t=s.dirty;s.dirty=[-1],s.fragment&&s.fragment.p(s.ctx,t),s.after_update.forEach(Bg)}}const Gd=new Set;let Yo;function xS(){Yo={r:0,c:[],p:Yo}}function vS(){Yo.r||Ur(Yo.c),Yo=Yo.p}function Os(s,t){s&&s.i&&(Gd.delete(s),s.i(t))}function hi(s,t,e,n){if(s&&s.o){if(Gd.has(s))return;Gd.add(s),Yo.c.push(()=>{Gd.delete(s),n&&(e&&s.d(1),n())}),s.o(t)}else n&&n()}function lr(s){s&&s.c()}function Fi(s,t,e,n){const{fragment:i,after_update:r}=s.$$;i&&i.m(t,e),n||Bg(()=>{const o=s.$$.on_mount.map(fS).filter(pS);s.$$.on_destroy?s.$$.on_destroy.push(...o):Ur(o),s.$$.on_mount=[]}),r.forEach(Bg)}function Li(s,t){const e=s.$$;e.fragment!==null&&(Ur(e.on_destroy),e.fragment&&e.fragment.d(t),e.on_destroy=e.fragment=null,e.ctx=[])}function gA(s,t){s.$$.dirty[0]===-1&&(Pc.push(s),pA(),s.$$.dirty.fill(0)),s.$$.dirty[t/31|0]|=1<<t%31}function gr(s,t,e,n,i,r,o,a=[-1]){const l=tu;Xc(s);const c=s.$$={fragment:null,ctx:[],props:r,update:en,not_equal:i,bound:uy(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(l?l.$$.context:[])),callbacks:uy(),dirty:a,skip_bound:!1,root:t.target||l.$$.root};o&&o(c.root);let u=!1;if(c.ctx=e?e(s,t.props||{},(h,d,...f)=>{const p=f.length?f[0]:d;return c.ctx&&i(c.ctx[h],c.ctx[h]=p)&&(!c.skip_bound&&c.bound[h]&&c.bound[h](p),u&&gA(s,h)),d}):[],c.update(),u=!0,Ur(c.before_update),c.fragment=n?n(c.ctx):!1,t.target){if(t.hydrate){const h=uA(t.target);c.fragment&&c.fragment.l(h),h.forEach(Gt)}else c.fragment&&c.fragment.c();t.intro&&Os(s.$$.fragment),Fi(s,t.target,t.anchor,t.customElement),gS()}Xc(l)}class xr{$destroy(){Li(this,1),this.$destroy=en}$on(t,e){if(!pS(e))return en;const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const i=n.indexOf(e);i!==-1&&n.splice(i,1)}}$set(t){this.$$set&&!cA(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Hx="146",ja={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ka={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},xA=0,fy=1,vA=2,bS=1,yS=2,Oc=3,Ll=0,di=1,si=2,io=0,El=1,py=2,my=3,gy=4,bA=5,xl=100,yA=101,wA=102,xy=103,vy=104,_A=200,SA=201,CA=202,IA=203,wS=204,_S=205,TA=206,EA=207,MA=208,kA=209,AA=210,NA=0,RA=1,$A=2,Ug=3,DA=4,FA=5,LA=6,PA=7,Df=0,OA=1,zA=2,Pr=0,BA=1,UA=2,VA=3,WA=4,GA=5,SS=300,Pl=301,Ol=302,Vg=303,Wg=304,Ff=306,Gg=1e3,Ni=1001,Hg=1002,ws=1003,by=1004,yy=1005,ti=1006,HA=1007,Lf=1008,ha=1009,qA=1010,XA=1011,CS=1012,jA=1013,Zo=1014,Jo=1015,eu=1016,KA=1017,YA=1018,Ml=1020,ZA=1021,JA=1022,Ri=1023,QA=1024,tN=1025,ra=1026,zl=1027,eN=1028,nN=1029,sN=1030,iN=1031,rN=1033,Am=33776,Nm=33777,Rm=33778,$m=33779,wy=35840,_y=35841,Sy=35842,Cy=35843,oN=36196,Iy=37492,Ty=37496,Ey=37808,My=37809,ky=37810,Ay=37811,Ny=37812,Ry=37813,$y=37814,Dy=37815,Fy=37816,Ly=37817,Py=37818,Oy=37819,zy=37820,By=37821,Uy=36492,da=3e3,ln=3001,aN=3200,lN=3201,Pf=0,cN=1,Nr="srgb",Qo="srgb-linear",Dm=7680,uN=519,Vy=35044,Wy="300 es",qg=1035;class Na{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,t);t.target=null}}}const ns=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Fm=Math.PI/180,Gy=180/Math.PI;function oc(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(ns[s&255]+ns[s>>8&255]+ns[s>>16&255]+ns[s>>24&255]+"-"+ns[t&255]+ns[t>>8&255]+"-"+ns[t>>16&15|64]+ns[t>>24&255]+"-"+ns[e&63|128]+ns[e>>8&255]+"-"+ns[e>>16&255]+ns[e>>24&255]+ns[n&255]+ns[n>>8&255]+ns[n>>16&255]+ns[n>>24&255]).toLowerCase()}function ss(s,t,e){return Math.max(t,Math.min(e,s))}function hN(s,t){return(s%t+t)%t}function Lm(s,t,e){return(1-e)*s+e*t}function Hy(s){return(s&s-1)===0&&s!==0}function Xg(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Yh(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function $s(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}class $t{constructor(t=0,e=0){$t.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ii{constructor(){ii.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,n,i,r,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=r,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],g=i[0],m=i[3],x=i[6],v=i[1],y=i[4],b=i[7],w=i[2],S=i[5],C=i[8];return r[0]=o*g+a*v+l*w,r[3]=o*m+a*y+l*S,r[6]=o*x+a*b+l*C,r[1]=c*g+u*v+h*w,r[4]=c*m+u*y+h*S,r[7]=c*x+u*b+h*C,r[2]=d*g+f*v+p*w,r[5]=d*m+f*y+p*S,r[8]=d*x+f*b+p*C,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*r*u+n*a*l+i*r*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=u*o-a*c,d=a*l-u*r,f=c*r-o*l,p=e*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return t[0]=h*g,t[1]=(i*c-u*n)*g,t[2]=(a*n-i*o)*g,t[3]=d*g,t[4]=(u*e-i*l)*g,t[5]=(i*r-a*e)*g,t[6]=f*g,t[7]=(n*l-c*e)*g,t[8]=(o*e-n*r)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=e*r+n*l,i[3]=e*o+n*c,i[6]=e*a+n*u,i[1]=-n*r+e*l,i[4]=-n*o+e*c,i[7]=-n*a+e*u,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}function IS(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function Qd(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function oa(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Hd(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const Pm={[Nr]:{[Qo]:oa},[Qo]:{[Nr]:Hd}},_i={legacyMode:!0,get workingColorSpace(){return Qo},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,t,e){if(this.legacyMode||t===e||!t||!e)return s;if(Pm[t]&&Pm[t][e]!==void 0){const n=Pm[t][e];return s.r=n(s.r),s.g=n(s.g),s.b=n(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)}},TS={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Mn={r:0,g:0,b:0},Si={h:0,s:0,l:0},Zh={h:0,s:0,l:0};function Om(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}function Jh(s,t){return t.r=s.r,t.g=s.g,t.b=s.b,t}class Le{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Nr){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,_i.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Qo){return this.r=t,this.g=e,this.b=n,_i.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Qo){if(t=hN(t,1),e=ss(e,0,1),n=ss(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=Om(o,r,t+1/3),this.g=Om(o,r,t),this.b=Om(o,r,t-1/3)}return _i.toWorkingColorSpace(this,i),this}setStyle(t,e=Nr){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,_i.toWorkingColorSpace(this,e),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,_i.toWorkingColorSpace(this,e),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,u=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,u,e)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,_i.toWorkingColorSpace(this,e),this;if(o===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,_i.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=Nr){const n=TS[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=oa(t.r),this.g=oa(t.g),this.b=oa(t.b),this}copyLinearToSRGB(t){return this.r=Hd(t.r),this.g=Hd(t.g),this.b=Hd(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Nr){return _i.fromWorkingColorSpace(Jh(this,Mn),t),ss(Mn.r*255,0,255)<<16^ss(Mn.g*255,0,255)<<8^ss(Mn.b*255,0,255)<<0}getHexString(t=Nr){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Qo){_i.fromWorkingColorSpace(Jh(this,Mn),e);const n=Mn.r,i=Mn.g,r=Mn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-r)/h+(i<r?6:0);break;case i:l=(r-n)/h+2;break;case r:l=(n-i)/h+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=Qo){return _i.fromWorkingColorSpace(Jh(this,Mn),e),t.r=Mn.r,t.g=Mn.g,t.b=Mn.b,t}getStyle(t=Nr){return _i.fromWorkingColorSpace(Jh(this,Mn),t),t!==Nr?`color(${t} ${Mn.r} ${Mn.g} ${Mn.b})`:`rgb(${Mn.r*255|0},${Mn.g*255|0},${Mn.b*255|0})`}offsetHSL(t,e,n){return this.getHSL(Si),Si.h+=t,Si.s+=e,Si.l+=n,this.setHSL(Si.h,Si.s,Si.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Si),t.getHSL(Zh);const n=Lm(Si.h,Zh.h,e),i=Lm(Si.s,Zh.s,e),r=Lm(Si.l,Zh.l,e);return this.setHSL(n,i,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Le.NAMES=TS;let Ya;class ES{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Ya===void 0&&(Ya=Qd("canvas")),Ya.width=t.width,Ya.height=t.height;const n=Ya.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Ya}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Qd("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=oa(r[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(oa(e[n]/255)*255):e[n]=oa(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class MS{constructor(t=null){this.isSource=!0,this.uuid=oc(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(zm(i[o].image)):r.push(zm(i[o]))}else r=zm(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function zm(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ES.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let dN=0;class Bi extends Na{constructor(t=Bi.DEFAULT_IMAGE,e=Bi.DEFAULT_MAPPING,n=Ni,i=Ni,r=ti,o=Lf,a=Ri,l=ha,c=1,u=da){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:dN++}),this.uuid=oc(),this.name="",this.source=new MS(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new $t(0,0),this.repeat=new $t(1,1),this.center=new $t(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ii,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==SS)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Gg:t.x=t.x-Math.floor(t.x);break;case Ni:t.x=t.x<0?0:1;break;case Hg:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Gg:t.y=t.y-Math.floor(t.y);break;case Ni:t.y=t.y<0?0:1;break;case Hg:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Bi.DEFAULT_IMAGE=null;Bi.DEFAULT_MAPPING=SS;class Vn{constructor(t=0,e=0,n=0,i=1){Vn.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const l=t.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],g=l[2],m=l[6],x=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-g)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+g)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+x-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const y=(c+1)/2,b=(f+1)/2,w=(x+1)/2,S=(u+d)/4,C=(h+g)/4,_=(p+m)/4;return y>b&&y>w?y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(y),i=S/n,r=C/n):b>w?b<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(b),n=S/i,r=_/i):w<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),n=C/r,i=_/r),this.set(n,i,r,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-g)*(h-g)+(d-u)*(d-u));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-g)/v,this.z=(d-u)/v,this.w=Math.acos((c+f+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class fa extends Na{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Vn(0,0,t,e),this.scissorTest=!1,this.viewport=new Vn(0,0,t,e);const i={width:t,height:e,depth:1};this.texture=new Bi(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:ti,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new MS(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class kS extends Bi{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ws,this.minFilter=ws,this.wrapR=Ni,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class fN extends Bi{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=ws,this.minFilter=ws,this.wrapR=Ni,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class pa{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],g=r[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=g;return}if(h!==g||l!==d||c!==f||u!==p){let m=1-a;const x=l*d+c*f+u*p+h*g,v=x>=0?1:-1,y=1-x*x;if(y>Number.EPSILON){const w=Math.sqrt(y),S=Math.atan2(w,x*v);m=Math.sin(m*S)/w,a=Math.sin(a*S)/w}const b=a*v;if(l=l*m+d*b,c=c*m+f*b,u=u*m+p*b,h=h*m+g*b,m===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return t[e]=a*p+u*h+l*f-c*d,t[e+1]=l*p+u*d+c*h-a*f,t[e+2]=c*p+u*f+a*d-l*h,t[e+3]=u*p-a*h-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,r=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(r/2),d=l(n/2),f=l(i/2),p=l(r/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],h=e[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ss(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-r*l,this._y=i*u+o*l+r*a-n*c,this._z=r*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-r*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-e)*u)/c,d=Math.sin(e*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class K{constructor(t=0,e=0,n=0){K.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(qy.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(qy.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,u=l*n+a*e-r*i,h=l*i+r*n-o*e,d=-r*e-o*n-a*i;return this.x=c*l+d*-r+u*-a-h*-o,this.y=u*l+d*-o+h*-r-c*-a,this.z=h*l+d*-a+c*-o-u*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Bm.copy(this).projectOnVector(t),this.sub(Bm)}reflect(t){return this.sub(Bm.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ss(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Bm=new K,qy=new pa;class bu{constructor(t=new K(1/0,1/0,1/0),e=new K(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.length;l<c;l+=3){const u=t[l],h=t[l+1],d=t[l+2];u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromBufferAttribute(t){let e=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,a=-1/0;for(let l=0,c=t.count;l<c;l++){const u=t.getX(l),h=t.getY(l),d=t.getZ(l);u<e&&(e=u),h<n&&(n=h),d<i&&(i=d),u>r&&(r=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(e,n,i),this.max.set(r,o,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Fo.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0)if(e&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let o=0,a=r.count;o<a;o++)Fo.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(Fo)}else n.boundingBox===null&&n.computeBoundingBox(),Um.copy(n.boundingBox),Um.applyMatrix4(t.matrixWorld),this.union(Um);const i=t.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Fo),Fo.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Tc),Qh.subVectors(this.max,Tc),Za.subVectors(t.a,Tc),Ja.subVectors(t.b,Tc),Qa.subVectors(t.c,Tc),Xr.subVectors(Ja,Za),jr.subVectors(Qa,Ja),Lo.subVectors(Za,Qa);let e=[0,-Xr.z,Xr.y,0,-jr.z,jr.y,0,-Lo.z,Lo.y,Xr.z,0,-Xr.x,jr.z,0,-jr.x,Lo.z,0,-Lo.x,-Xr.y,Xr.x,0,-jr.y,jr.x,0,-Lo.y,Lo.x,0];return!Vm(e,Za,Ja,Qa,Qh)||(e=[1,0,0,0,1,0,0,0,1],!Vm(e,Za,Ja,Qa,Qh))?!1:(td.crossVectors(Xr,jr),e=[td.x,td.y,td.z],Vm(e,Za,Ja,Qa,Qh))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Fo.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(Fo).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(yr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),yr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),yr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),yr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),yr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),yr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),yr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),yr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(yr),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const yr=[new K,new K,new K,new K,new K,new K,new K,new K],Fo=new K,Um=new bu,Za=new K,Ja=new K,Qa=new K,Xr=new K,jr=new K,Lo=new K,Tc=new K,Qh=new K,td=new K,Po=new K;function Vm(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Po.fromArray(s,r);const a=i.x*Math.abs(Po.x)+i.y*Math.abs(Po.y)+i.z*Math.abs(Po.z),l=t.dot(Po),c=e.dot(Po),u=n.dot(Po);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const pN=new bu,Ec=new K,Wm=new K;class Of{constructor(t=new K,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):pN.setFromPoints(t).getCenter(n);let i=0;for(let r=0,o=t.length;r<o;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ec.subVectors(t,this.center);const e=Ec.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Ec,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Wm.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ec.copy(t.center).add(Wm)),this.expandByPoint(Ec.copy(t.center).sub(Wm))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const wr=new K,Gm=new K,ed=new K,Kr=new K,Hm=new K,nd=new K,qm=new K;class qx{constructor(t=new K,e=new K(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,wr)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=wr.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(wr.copy(this.direction).multiplyScalar(e).add(this.origin),wr.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){Gm.copy(t).add(e).multiplyScalar(.5),ed.copy(e).sub(t).normalize(),Kr.copy(this.origin).sub(Gm);const r=t.distanceTo(e)*.5,o=-this.direction.dot(ed),a=Kr.dot(this.direction),l=-Kr.dot(ed),c=Kr.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=r*u,h>=0)if(d>=-p)if(d<=p){const g=1/u;h*=g,d*=g,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-r,-l),r),f=d*(d+2*l)+c):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-l),r),f=-h*h+d*(d+2*l)+c);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(ed).multiplyScalar(d).add(Gm),f}intersectSphere(t,e){wr.subVectors(t.center,this.origin);const n=wr.dot(this.direction),i=wr.dot(wr)-n*n,r=t.radius*t.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(t.min.x-d.x)*c,i=(t.max.x-d.x)*c):(n=(t.max.x-d.x)*c,i=(t.min.x-d.x)*c),u>=0?(r=(t.min.y-d.y)*u,o=(t.max.y-d.y)*u):(r=(t.max.y-d.y)*u,o=(t.min.y-d.y)*u),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),h>=0?(a=(t.min.z-d.z)*h,l=(t.max.z-d.z)*h):(a=(t.max.z-d.z)*h,l=(t.min.z-d.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,wr)!==null}intersectTriangle(t,e,n,i,r){Hm.subVectors(e,t),nd.subVectors(n,t),qm.crossVectors(Hm,nd);let o=this.direction.dot(qm),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Kr.subVectors(this.origin,t);const l=a*this.direction.dot(nd.crossVectors(Kr,nd));if(l<0)return null;const c=a*this.direction.dot(Hm.cross(Kr));if(c<0||l+c>o)return null;const u=-a*Kr.dot(qm);return u<0?null:this.at(u/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class xn{constructor(){xn.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m){const x=this.elements;return x[0]=t,x[4]=e,x[8]=n,x[12]=i,x[1]=r,x[5]=o,x[9]=a,x[13]=l,x[2]=c,x[6]=u,x[10]=h,x[14]=d,x[3]=f,x[7]=p,x[11]=g,x[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new xn().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/tl.setFromMatrixColumn(t,0).length(),r=1/tl.setFromMatrixColumn(t,1).length(),o=1/tl.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(t.order==="XYZ"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=f+p*c,e[5]=d-g*c,e[9]=-a*l,e[2]=g-d*c,e[6]=p+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d+g*a,e[4]=p*a-f,e[8]=o*c,e[1]=o*h,e[5]=o*u,e[9]=-a,e[2]=f*a-p,e[6]=g+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*u,f=l*h,p=c*u,g=c*h;e[0]=d-g*a,e[4]=-o*h,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*u,e[9]=g-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*u,f=o*h,p=a*u,g=a*h;e[0]=l*u,e[4]=p*c-f,e[8]=d*c+g,e[1]=l*h,e[5]=g*c+d,e[9]=f*c-p,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=g-d*h,e[8]=p*h+f,e[1]=h,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=f*h+p,e[10]=d-g*h}else if(t.order==="XZY"){const d=o*l,f=o*c,p=a*l,g=a*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=d*h+g,e[5]=o*u,e[9]=f*h-p,e[2]=p*h-f,e[6]=a*u,e[10]=g*h+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(mN,t,gN)}lookAt(t,e,n){const i=this.elements;return Ds.subVectors(t,e),Ds.lengthSq()===0&&(Ds.z=1),Ds.normalize(),Yr.crossVectors(n,Ds),Yr.lengthSq()===0&&(Math.abs(n.z)===1?Ds.x+=1e-4:Ds.z+=1e-4,Ds.normalize(),Yr.crossVectors(n,Ds)),Yr.normalize(),sd.crossVectors(Ds,Yr),i[0]=Yr.x,i[4]=sd.x,i[8]=Ds.x,i[1]=Yr.y,i[5]=sd.y,i[9]=Ds.y,i[2]=Yr.z,i[6]=sd.z,i[10]=Ds.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],g=n[6],m=n[10],x=n[14],v=n[3],y=n[7],b=n[11],w=n[15],S=i[0],C=i[4],_=i[8],I=i[12],T=i[1],N=i[5],P=i[9],E=i[13],M=i[2],A=i[6],R=i[10],V=i[14],L=i[3],$=i[7],U=i[11],H=i[15];return r[0]=o*S+a*T+l*M+c*L,r[4]=o*C+a*N+l*A+c*$,r[8]=o*_+a*P+l*R+c*U,r[12]=o*I+a*E+l*V+c*H,r[1]=u*S+h*T+d*M+f*L,r[5]=u*C+h*N+d*A+f*$,r[9]=u*_+h*P+d*R+f*U,r[13]=u*I+h*E+d*V+f*H,r[2]=p*S+g*T+m*M+x*L,r[6]=p*C+g*N+m*A+x*$,r[10]=p*_+g*P+m*R+x*U,r[14]=p*I+g*E+m*V+x*H,r[3]=v*S+y*T+b*M+w*L,r[7]=v*C+y*N+b*A+w*$,r[11]=v*_+y*P+b*R+w*U,r[15]=v*I+y*E+b*V+w*H,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],h=t[6],d=t[10],f=t[14],p=t[3],g=t[7],m=t[11],x=t[15];return p*(+r*l*h-i*c*h-r*a*d+n*c*d+i*a*f-n*l*f)+g*(+e*l*f-e*c*d+r*o*d-i*o*f+i*c*u-r*l*u)+m*(+e*c*h-e*a*f-r*o*h+n*o*f+r*a*u-n*c*u)+x*(-i*a*u-e*l*h+e*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],g=t[13],m=t[14],x=t[15],v=h*m*c-g*d*c+g*l*f-a*m*f-h*l*x+a*d*x,y=p*d*c-u*m*c-p*l*f+o*m*f+u*l*x-o*d*x,b=u*g*c-p*h*c+p*a*f-o*g*f-u*a*x+o*h*x,w=p*h*l-u*g*l-p*a*d+o*g*d+u*a*m-o*h*m,S=e*v+n*y+i*b+r*w;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/S;return t[0]=v*C,t[1]=(g*d*r-h*m*r-g*i*f+n*m*f+h*i*x-n*d*x)*C,t[2]=(a*m*r-g*l*r+g*i*c-n*m*c-a*i*x+n*l*x)*C,t[3]=(h*l*r-a*d*r-h*i*c+n*d*c+a*i*f-n*l*f)*C,t[4]=y*C,t[5]=(u*m*r-p*d*r+p*i*f-e*m*f-u*i*x+e*d*x)*C,t[6]=(p*l*r-o*m*r-p*i*c+e*m*c+o*i*x-e*l*x)*C,t[7]=(o*d*r-u*l*r+u*i*c-e*d*c-o*i*f+e*l*f)*C,t[8]=b*C,t[9]=(p*h*r-u*g*r-p*n*f+e*g*f+u*n*x-e*h*x)*C,t[10]=(o*g*r-p*a*r+p*n*c-e*g*c-o*n*x+e*a*x)*C,t[11]=(u*a*r-o*h*r-u*n*c+e*h*c+o*n*f-e*a*f)*C,t[12]=w*C,t[13]=(u*g*i-p*h*i+p*n*d-e*g*d-u*n*m+e*h*m)*C,t[14]=(p*a*i-o*g*i-p*n*l+e*g*l+o*n*m-e*a*m)*C,t[15]=(o*h*i-u*a*i+u*n*l-e*h*l-o*n*d+e*a*d)*C,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,u=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,u=o+o,h=a+a,d=r*c,f=r*u,p=r*h,g=o*u,m=o*h,x=a*h,v=l*c,y=l*u,b=l*h,w=n.x,S=n.y,C=n.z;return i[0]=(1-(g+x))*w,i[1]=(f+b)*w,i[2]=(p-y)*w,i[3]=0,i[4]=(f-b)*S,i[5]=(1-(d+x))*S,i[6]=(m+v)*S,i[7]=0,i[8]=(p+y)*C,i[9]=(m-v)*C,i[10]=(1-(d+g))*C,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=tl.set(i[0],i[1],i[2]).length();const o=tl.set(i[4],i[5],i[6]).length(),a=tl.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Ci.copy(this);const c=1/r,u=1/o,h=1/a;return Ci.elements[0]*=c,Ci.elements[1]*=c,Ci.elements[2]*=c,Ci.elements[4]*=u,Ci.elements[5]*=u,Ci.elements[6]*=u,Ci.elements[8]*=h,Ci.elements[9]*=h,Ci.elements[10]*=h,e.setFromRotationMatrix(Ci),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o){const a=this.elements,l=2*r/(e-t),c=2*r/(n-i),u=(e+t)/(e-t),h=(n+i)/(n-i),d=-(o+r)/(o-r),f=-2*o*r/(o-r);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,n,i,r,o){const a=this.elements,l=1/(e-t),c=1/(n-i),u=1/(o-r),h=(e+t)*l,d=(n+i)*c,f=(o+r)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const tl=new K,Ci=new xn,mN=new K(0,0,0),gN=new K(1,1,1),Yr=new K,sd=new K,Ds=new K,Xy=new xn,jy=new pa;class yu{constructor(t=0,e=0,n=0,i=yu.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(ss(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ss(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(ss(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-ss(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ss(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-ss(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Xy.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Xy,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return jy.setFromEuler(this),this.setFromQuaternion(jy,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}yu.DefaultOrder="XYZ";yu.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Xx{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let xN=0;const Ky=new K,el=new pa,_r=new xn,id=new K,Mc=new K,vN=new K,bN=new pa,Yy=new K(1,0,0),Zy=new K(0,1,0),Jy=new K(0,0,1),yN={type:"added"},Qy={type:"removed"};class Wn extends Na{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:xN++}),this.uuid=oc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Wn.DefaultUp.clone();const t=new K,e=new yu,n=new pa,i=new K(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new xn},normalMatrix:{value:new ii}}),this.matrix=new xn,this.matrixWorld=new xn,this.matrixAutoUpdate=Wn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Wn.DefaultMatrixWorldAutoUpdate,this.layers=new Xx,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return el.setFromAxisAngle(t,e),this.quaternion.multiply(el),this}rotateOnWorldAxis(t,e){return el.setFromAxisAngle(t,e),this.quaternion.premultiply(el),this}rotateX(t){return this.rotateOnAxis(Yy,t)}rotateY(t){return this.rotateOnAxis(Zy,t)}rotateZ(t){return this.rotateOnAxis(Jy,t)}translateOnAxis(t,e){return Ky.copy(t).applyQuaternion(this.quaternion),this.position.add(Ky.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Yy,t)}translateY(t){return this.translateOnAxis(Zy,t)}translateZ(t){return this.translateOnAxis(Jy,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(_r.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?id.copy(t):id.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Mc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_r.lookAt(Mc,id,this.up):_r.lookAt(id,Mc,this.up),this.quaternion.setFromRotationMatrix(_r),i&&(_r.extractRotation(i.matrixWorld),el.setFromRotationMatrix(_r),this.quaternion.premultiply(el.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(yN)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Qy)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Qy)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),_r.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),_r.multiply(t.parent.matrixWorld)),t.applyMatrix4(_r),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Mc,t,vN),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Mc,bN,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const a=i[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];r(t.shapes,h)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),h=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Wn.DefaultUp=new K(0,1,0);Wn.DefaultMatrixAutoUpdate=!0;Wn.DefaultMatrixWorldAutoUpdate=!0;const Ii=new K,Sr=new K,Xm=new K,Cr=new K,nl=new K,sl=new K,tw=new K,jm=new K,Km=new K,Ym=new K;class $r{constructor(t=new K,e=new K,n=new K){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Ii.subVectors(t,e),i.cross(Ii);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Ii.subVectors(i,e),Sr.subVectors(n,e),Xm.subVectors(t,e);const o=Ii.dot(Ii),a=Ii.dot(Sr),l=Ii.dot(Xm),c=Sr.dot(Sr),u=Sr.dot(Xm),h=o*c-a*a;if(h===0)return r.set(-2,-1,-1);const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return r.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Cr),Cr.x>=0&&Cr.y>=0&&Cr.x+Cr.y<=1}static getUV(t,e,n,i,r,o,a,l){return this.getBarycoord(t,e,n,i,Cr),l.set(0,0),l.addScaledVector(r,Cr.x),l.addScaledVector(o,Cr.y),l.addScaledVector(a,Cr.z),l}static isFrontFacing(t,e,n,i){return Ii.subVectors(n,e),Sr.subVectors(t,e),Ii.cross(Sr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ii.subVectors(this.c,this.b),Sr.subVectors(this.a,this.b),Ii.cross(Sr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return $r.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return $r.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return $r.getUV(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return $r.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return $r.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;nl.subVectors(i,n),sl.subVectors(r,n),jm.subVectors(t,n);const l=nl.dot(jm),c=sl.dot(jm);if(l<=0&&c<=0)return e.copy(n);Km.subVectors(t,i);const u=nl.dot(Km),h=sl.dot(Km);if(u>=0&&h<=u)return e.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(nl,o);Ym.subVectors(t,r);const f=nl.dot(Ym),p=sl.dot(Ym);if(p>=0&&f<=p)return e.copy(r);const g=f*c-l*p;if(g<=0&&c>=0&&p<=0)return a=c/(c-p),e.copy(n).addScaledVector(sl,a);const m=u*p-f*h;if(m<=0&&h-u>=0&&f-p>=0)return tw.subVectors(r,i),a=(h-u)/(h-u+(f-p)),e.copy(i).addScaledVector(tw,a);const x=1/(m+g+d);return o=g*x,a=d*x,e.copy(n).addScaledVector(nl,o).addScaledVector(sl,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let wN=0;class vo extends Na{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:wN++}),this.uuid=oc(),this.name="",this.type="Material",this.blending=El,this.side=Ll,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=wS,this.blendDst=_S,this.blendEquation=xl,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ug,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=uN,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Dm,this.stencilZFail=Dm,this.stencilZPass=Dm,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==El&&(n.blending=this.blending),this.side!==Ll&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(e){const r=i(t.textures),o=i(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Ra extends vo{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Df,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const wn=new K,rd=new $t;class cr{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=Vy,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)rd.fromBufferAttribute(this,e),rd.applyMatrix3(t),this.setXY(e,rd.x,rd.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.applyMatrix3(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.applyMatrix4(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.applyNormalMatrix(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.transformDirection(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Yh(e,this.array)),e}setX(t,e){return this.normalized&&(e=$s(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Yh(e,this.array)),e}setY(t,e){return this.normalized&&(e=$s(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Yh(e,this.array)),e}setZ(t,e){return this.normalized&&(e=$s(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Yh(e,this.array)),e}setW(t,e){return this.normalized&&(e=$s(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=$s(e,this.array),n=$s(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=$s(e,this.array),n=$s(n,this.array),i=$s(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=$s(e,this.array),n=$s(n,this.array),i=$s(i,this.array),r=$s(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Vy&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class AS extends cr{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class NS extends cr{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class vn extends cr{constructor(t,e,n){super(new Float32Array(t),e,n)}}let _N=0;const Xs=new xn,Zm=new Wn,il=new K,Fs=new bu,kc=new bu,Bn=new K;class Us extends Na{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:_N++}),this.uuid=oc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(IS(t)?NS:AS)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new ii().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Xs.makeRotationFromQuaternion(t),this.applyMatrix4(Xs),this}rotateX(t){return Xs.makeRotationX(t),this.applyMatrix4(Xs),this}rotateY(t){return Xs.makeRotationY(t),this.applyMatrix4(Xs),this}rotateZ(t){return Xs.makeRotationZ(t),this.applyMatrix4(Xs),this}translate(t,e,n){return Xs.makeTranslation(t,e,n),this.applyMatrix4(Xs),this}scale(t,e,n){return Xs.makeScale(t,e,n),this.applyMatrix4(Xs),this}lookAt(t){return Zm.lookAt(t),Zm.updateMatrix(),this.applyMatrix4(Zm.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(il).negate(),this.translate(il.x,il.y,il.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new vn(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new bu);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new K(-1/0,-1/0,-1/0),new K(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Fs.setFromBufferAttribute(r),this.morphTargetsRelative?(Bn.addVectors(this.boundingBox.min,Fs.min),this.boundingBox.expandByPoint(Bn),Bn.addVectors(this.boundingBox.max,Fs.max),this.boundingBox.expandByPoint(Bn)):(this.boundingBox.expandByPoint(Fs.min),this.boundingBox.expandByPoint(Fs.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Of);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new K,1/0);return}if(t){const n=this.boundingSphere.center;if(Fs.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];kc.setFromBufferAttribute(a),this.morphTargetsRelative?(Bn.addVectors(Fs.min,kc.min),Fs.expandByPoint(Bn),Bn.addVectors(Fs.max,kc.max),Fs.expandByPoint(Bn)):(Fs.expandByPoint(kc.min),Fs.expandByPoint(kc.max))}Fs.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Bn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Bn));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Bn.fromBufferAttribute(a,c),l&&(il.fromBufferAttribute(t,c),Bn.add(il)),i=Math.max(i,n.distanceToSquared(Bn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,r=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new cr(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let T=0;T<a;T++)c[T]=new K,u[T]=new K;const h=new K,d=new K,f=new K,p=new $t,g=new $t,m=new $t,x=new K,v=new K;function y(T,N,P){h.fromArray(i,T*3),d.fromArray(i,N*3),f.fromArray(i,P*3),p.fromArray(o,T*2),g.fromArray(o,N*2),m.fromArray(o,P*2),d.sub(h),f.sub(h),g.sub(p),m.sub(p);const E=1/(g.x*m.y-m.x*g.y);!isFinite(E)||(x.copy(d).multiplyScalar(m.y).addScaledVector(f,-g.y).multiplyScalar(E),v.copy(f).multiplyScalar(g.x).addScaledVector(d,-m.x).multiplyScalar(E),c[T].add(x),c[N].add(x),c[P].add(x),u[T].add(v),u[N].add(v),u[P].add(v))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let T=0,N=b.length;T<N;++T){const P=b[T],E=P.start,M=P.count;for(let A=E,R=E+M;A<R;A+=3)y(n[A+0],n[A+1],n[A+2])}const w=new K,S=new K,C=new K,_=new K;function I(T){C.fromArray(r,T*3),_.copy(C);const N=c[T];w.copy(N),w.sub(C.multiplyScalar(C.dot(N))).normalize(),S.crossVectors(_,N);const E=S.dot(u[T])<0?-1:1;l[T*4]=w.x,l[T*4+1]=w.y,l[T*4+2]=w.z,l[T*4+3]=E}for(let T=0,N=b.length;T<N;++T){const P=b[T],E=P.start,M=P.count;for(let A=E,R=E+M;A<R;A+=3)I(n[A+0]),I(n[A+1]),I(n[A+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new cr(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new K,r=new K,o=new K,a=new K,l=new K,c=new K,u=new K,h=new K;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),g=t.getX(d+1),m=t.getX(d+2);i.fromBufferAttribute(e,p),r.fromBufferAttribute(e,g),o.fromBufferAttribute(e,m),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Bn.fromBufferAttribute(t,e),Bn.normalize(),t.setXYZ(e,Bn.x,Bn.y,Bn.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let g=0,m=l.length;g<m;g++){a.isInterleavedBufferAttribute?f=l[g]*a.data.stride+a.offset:f=l[g]*u;for(let x=0;x<u;x++)d[p++]=c[f++]}return new cr(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Us,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=t(d,n);l.push(f)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(t.data))}u.length>0&&(i[l]=u,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const r=t.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const ew=new xn,rl=new qx,Jm=new Of,Zr=new K,Jr=new K,Qr=new K,Qm=new K,tg=new K,eg=new K,od=new K,ad=new K,ld=new K,cd=new $t,ud=new $t,hd=new $t,ng=new K,dd=new K;class rn extends Wn{constructor(t=new Us,e=new Ra){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Jm.copy(n.boundingSphere),Jm.applyMatrix4(r),t.ray.intersectsSphere(Jm)===!1)||(ew.copy(r).invert(),rl.copy(t.ray).applyMatrix4(ew),n.boundingBox!==null&&rl.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,d=n.attributes.uv2,f=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],v=i[x.materialIndex],y=Math.max(x.start,p.start),b=Math.min(a.count,Math.min(x.start+x.count,p.start+p.count));for(let w=y,S=b;w<S;w+=3){const C=a.getX(w),_=a.getX(w+1),I=a.getX(w+2);o=fd(this,v,t,rl,l,c,u,h,d,C,_,I),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(a.count,p.start+p.count);for(let x=g,v=m;x<v;x+=3){const y=a.getX(x),b=a.getX(x+1),w=a.getX(x+2);o=fd(this,i,t,rl,l,c,u,h,d,y,b,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let g=0,m=f.length;g<m;g++){const x=f[g],v=i[x.materialIndex],y=Math.max(x.start,p.start),b=Math.min(l.count,Math.min(x.start+x.count,p.start+p.count));for(let w=y,S=b;w<S;w+=3){const C=w,_=w+1,I=w+2;o=fd(this,v,t,rl,l,c,u,h,d,C,_,I),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=x.materialIndex,e.push(o))}}else{const g=Math.max(0,p.start),m=Math.min(l.count,p.start+p.count);for(let x=g,v=m;x<v;x+=3){const y=x,b=x+1,w=x+2;o=fd(this,i,t,rl,l,c,u,h,d,y,b,w),o&&(o.faceIndex=Math.floor(x/3),e.push(o))}}}}function SN(s,t,e,n,i,r,o,a){let l;if(t.side===di?l=n.intersectTriangle(o,r,i,!0,a):l=n.intersectTriangle(i,r,o,t.side!==si,a),l===null)return null;dd.copy(a),dd.applyMatrix4(s.matrixWorld);const c=e.ray.origin.distanceTo(dd);return c<e.near||c>e.far?null:{distance:c,point:dd.clone(),object:s}}function fd(s,t,e,n,i,r,o,a,l,c,u,h){Zr.fromBufferAttribute(i,c),Jr.fromBufferAttribute(i,u),Qr.fromBufferAttribute(i,h);const d=s.morphTargetInfluences;if(r&&d){od.set(0,0,0),ad.set(0,0,0),ld.set(0,0,0);for(let p=0,g=r.length;p<g;p++){const m=d[p],x=r[p];m!==0&&(Qm.fromBufferAttribute(x,c),tg.fromBufferAttribute(x,u),eg.fromBufferAttribute(x,h),o?(od.addScaledVector(Qm,m),ad.addScaledVector(tg,m),ld.addScaledVector(eg,m)):(od.addScaledVector(Qm.sub(Zr),m),ad.addScaledVector(tg.sub(Jr),m),ld.addScaledVector(eg.sub(Qr),m)))}Zr.add(od),Jr.add(ad),Qr.add(ld)}s.isSkinnedMesh&&(s.boneTransform(c,Zr),s.boneTransform(u,Jr),s.boneTransform(h,Qr));const f=SN(s,t,e,n,Zr,Jr,Qr,ng);if(f){a&&(cd.fromBufferAttribute(a,c),ud.fromBufferAttribute(a,u),hd.fromBufferAttribute(a,h),f.uv=$r.getUV(ng,Zr,Jr,Qr,cd,ud,hd,new $t)),l&&(cd.fromBufferAttribute(l,c),ud.fromBufferAttribute(l,u),hd.fromBufferAttribute(l,h),f.uv2=$r.getUV(ng,Zr,Jr,Qr,cd,ud,hd,new $t));const p={a:c,b:u,c:h,normal:new K,materialIndex:0};$r.getNormal(Zr,Jr,Qr,p.normal),f.face=p}return f}class bo extends Us{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,e,t,o,r,0),p("z","y","x",1,-1,n,e,-t,o,r,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new vn(c,3)),this.setAttribute("normal",new vn(u,3)),this.setAttribute("uv",new vn(h,2));function p(g,m,x,v,y,b,w,S,C,_,I){const T=b/C,N=w/_,P=b/2,E=w/2,M=S/2,A=C+1,R=_+1;let V=0,L=0;const $=new K;for(let U=0;U<R;U++){const H=U*N-E;for(let W=0;W<A;W++){const Z=W*T-P;$[g]=Z*v,$[m]=H*y,$[x]=M,c.push($.x,$.y,$.z),$[g]=0,$[m]=0,$[x]=S>0?1:-1,u.push($.x,$.y,$.z),h.push(W/C),h.push(1-U/_),V+=1}}for(let U=0;U<_;U++)for(let H=0;H<C;H++){const W=d+H+A*U,Z=d+H+A*(U+1),it=d+(H+1)+A*(U+1),lt=d+(H+1)+A*U;l.push(W,Z,lt),l.push(Z,it,lt),L+=6}a.addGroup(f,L,I),f+=L,d+=V}}static fromJSON(t){return new bo(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Bl(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function hs(s){const t={};for(let e=0;e<s.length;e++){const n=Bl(s[e]);for(const i in n)t[i]=n[i]}return t}function CN(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}const IN={clone:Bl,merge:hs};var TN=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,EN=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ma extends vo{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=TN,this.fragmentShader=EN,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Bl(t.uniforms),this.uniformsGroups=CN(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class RS extends Wn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new xn,this.projectionMatrix=new xn,this.projectionMatrixInverse=new xn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class ei extends RS{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Gy*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Fm*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Gy*2*Math.atan(Math.tan(Fm*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Fm*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const ol=90,al=1;class MN extends Wn{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new ei(ol,al,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new K(1,0,0)),this.add(i);const r=new ei(ol,al,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new K(-1,0,0)),this.add(r);const o=new ei(ol,al,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new K(0,1,0)),this.add(o);const a=new ei(ol,al,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new K(0,-1,0)),this.add(a);const l=new ei(ol,al,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new K(0,0,1)),this.add(l);const c=new ei(ol,al,t,e);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new K(0,0,-1)),this.add(c)}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,o,a,l,c]=this.children,u=t.getRenderTarget(),h=t.toneMapping,d=t.xr.enabled;t.toneMapping=Pr,t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(u),t.toneMapping=h,t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class $S extends Bi{constructor(t,e,n,i,r,o,a,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:Pl,super(t,e,n,i,r,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class kN extends fa{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new $S(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:ti}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new bo(5,5,5),r=new ma({name:"CubemapFromEquirect",uniforms:Bl(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:di,blending:io});r.uniforms.tEquirect.value=e;const o=new rn(i,r),a=e.minFilter;return e.minFilter===Lf&&(e.minFilter=ti),new MN(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}}const sg=new K,AN=new K,NN=new ii;class Vo{constructor(t=new K(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=sg.subVectors(n,e).cross(AN.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const n=t.delta(sg),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(n).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||NN.getNormalMatrix(t),i=this.coplanarPoint(sg).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ll=new Of,pd=new K;class jx{constructor(t=new Vo,e=new Vo,n=new Vo,i=new Vo,r=new Vo,o=new Vo){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],f=n[9],p=n[10],g=n[11],m=n[12],x=n[13],v=n[14],y=n[15];return e[0].setComponents(a-i,h-l,g-d,y-m).normalize(),e[1].setComponents(a+i,h+l,g+d,y+m).normalize(),e[2].setComponents(a+r,h+c,g+f,y+x).normalize(),e[3].setComponents(a-r,h-c,g-f,y-x).normalize(),e[4].setComponents(a-o,h-u,g-p,y-v).normalize(),e[5].setComponents(a+o,h+u,g+p,y+v).normalize(),this}intersectsObject(t){const e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),ll.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(ll)}intersectsSprite(t){return ll.center.set(0,0,0),ll.radius=.7071067811865476,ll.applyMatrix4(t.matrixWorld),this.intersectsSphere(ll)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(pd.x=i.normal.x>0?t.max.x:t.min.x,pd.y=i.normal.y>0?t.max.y:t.min.y,pd.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(pd)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function DS(){let s=null,t=!1,e=null,n=null;function i(r,o){e(r,o),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function RN(s,t){const e=t.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,d=c.usage,f=s.createBuffer();s.bindBuffer(u,f),s.bufferData(u,h,d),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:f,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,u,h){const d=u.array,f=u.updateRange;s.bindBuffer(h,c),f.count===-1?s.bufferSubData(h,0,d):(e?s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):s.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(s.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(r(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class zf extends Us{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=t/a,d=e/l,f=[],p=[],g=[],m=[];for(let x=0;x<u;x++){const v=x*d-o;for(let y=0;y<c;y++){const b=y*h-r;p.push(b,-v,0),g.push(0,0,1),m.push(y/a),m.push(1-x/l)}}for(let x=0;x<l;x++)for(let v=0;v<a;v++){const y=v+c*x,b=v+c*(x+1),w=v+1+c*(x+1),S=v+1+c*x;f.push(y,b,S),f.push(b,w,S)}this.setIndex(f),this.setAttribute("position",new vn(p,3)),this.setAttribute("normal",new vn(g,3)),this.setAttribute("uv",new vn(m,2))}static fromJSON(t){return new zf(t.width,t.height,t.widthSegments,t.heightSegments)}}var $N=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,DN=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,FN=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,LN=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,PN=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,ON=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,zN="vec3 transformed = vec3( position );",BN=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,UN=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,VN=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,WN=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,GN=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,HN=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,qN=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,XN=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,jN=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,KN=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,YN=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,ZN=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,JN=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,QN=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,tR=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,eR=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,nR=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,sR=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,iR=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,rR="gl_FragColor = linearToOutputTexel( gl_FragColor );",oR=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,aR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,lR=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,cR=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,uR=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,hR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,dR=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fR=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,pR=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,mR=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gR=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,xR=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,vR=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,bR=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,yR=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,wR=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,_R=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,SR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,CR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,IR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,TR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,ER=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,MR=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,kR=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,AR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,NR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,RR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,$R=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,DR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,FR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,LR=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,PR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,OR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,zR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,BR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,UR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,VR=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,WR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,GR=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,HR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,qR=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,XR=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,jR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,KR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,YR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,ZR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,JR=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,QR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,t$=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,e$=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,n$=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,s$=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,i$=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,r$=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,o$=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,a$=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,l$=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,c$=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,u$=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,h$=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,d$=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,f$=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,p$=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,m$=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,g$=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,x$=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,v$=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,b$=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,y$=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,w$=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,_$=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,S$=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,C$=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,I$=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,T$=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,E$=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,M$=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,k$=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,A$=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const N$=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,R$=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,$$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,D$=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,F$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,L$=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,P$=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,O$=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,z$=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,B$=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,U$=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,V$=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,W$=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,G$=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,H$=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,q$=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,X$=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,j$=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,K$=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Y$=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Z$=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,J$=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Q$=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tD=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eD=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,nD=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sD=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,iD=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rD=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,oD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,aD=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lD=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,cD=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,uD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,xe={alphamap_fragment:$N,alphamap_pars_fragment:DN,alphatest_fragment:FN,alphatest_pars_fragment:LN,aomap_fragment:PN,aomap_pars_fragment:ON,begin_vertex:zN,beginnormal_vertex:BN,bsdfs:UN,iridescence_fragment:VN,bumpmap_pars_fragment:WN,clipping_planes_fragment:GN,clipping_planes_pars_fragment:HN,clipping_planes_pars_vertex:qN,clipping_planes_vertex:XN,color_fragment:jN,color_pars_fragment:KN,color_pars_vertex:YN,color_vertex:ZN,common:JN,cube_uv_reflection_fragment:QN,defaultnormal_vertex:tR,displacementmap_pars_vertex:eR,displacementmap_vertex:nR,emissivemap_fragment:sR,emissivemap_pars_fragment:iR,encodings_fragment:rR,encodings_pars_fragment:oR,envmap_fragment:aR,envmap_common_pars_fragment:lR,envmap_pars_fragment:cR,envmap_pars_vertex:uR,envmap_physical_pars_fragment:_R,envmap_vertex:hR,fog_vertex:dR,fog_pars_vertex:fR,fog_fragment:pR,fog_pars_fragment:mR,gradientmap_pars_fragment:gR,lightmap_fragment:xR,lightmap_pars_fragment:vR,lights_lambert_fragment:bR,lights_lambert_pars_fragment:yR,lights_pars_begin:wR,lights_toon_fragment:SR,lights_toon_pars_fragment:CR,lights_phong_fragment:IR,lights_phong_pars_fragment:TR,lights_physical_fragment:ER,lights_physical_pars_fragment:MR,lights_fragment_begin:kR,lights_fragment_maps:AR,lights_fragment_end:NR,logdepthbuf_fragment:RR,logdepthbuf_pars_fragment:$R,logdepthbuf_pars_vertex:DR,logdepthbuf_vertex:FR,map_fragment:LR,map_pars_fragment:PR,map_particle_fragment:OR,map_particle_pars_fragment:zR,metalnessmap_fragment:BR,metalnessmap_pars_fragment:UR,morphcolor_vertex:VR,morphnormal_vertex:WR,morphtarget_pars_vertex:GR,morphtarget_vertex:HR,normal_fragment_begin:qR,normal_fragment_maps:XR,normal_pars_fragment:jR,normal_pars_vertex:KR,normal_vertex:YR,normalmap_pars_fragment:ZR,clearcoat_normal_fragment_begin:JR,clearcoat_normal_fragment_maps:QR,clearcoat_pars_fragment:t$,iridescence_pars_fragment:e$,output_fragment:n$,packing:s$,premultiplied_alpha_fragment:i$,project_vertex:r$,dithering_fragment:o$,dithering_pars_fragment:a$,roughnessmap_fragment:l$,roughnessmap_pars_fragment:c$,shadowmap_pars_fragment:u$,shadowmap_pars_vertex:h$,shadowmap_vertex:d$,shadowmask_pars_fragment:f$,skinbase_vertex:p$,skinning_pars_vertex:m$,skinning_vertex:g$,skinnormal_vertex:x$,specularmap_fragment:v$,specularmap_pars_fragment:b$,tonemapping_fragment:y$,tonemapping_pars_fragment:w$,transmission_fragment:_$,transmission_pars_fragment:S$,uv_pars_fragment:C$,uv_pars_vertex:I$,uv_vertex:T$,uv2_pars_fragment:E$,uv2_pars_vertex:M$,uv2_vertex:k$,worldpos_vertex:A$,background_vert:N$,background_frag:R$,backgroundCube_vert:$$,backgroundCube_frag:D$,cube_vert:F$,cube_frag:L$,depth_vert:P$,depth_frag:O$,distanceRGBA_vert:z$,distanceRGBA_frag:B$,equirect_vert:U$,equirect_frag:V$,linedashed_vert:W$,linedashed_frag:G$,meshbasic_vert:H$,meshbasic_frag:q$,meshlambert_vert:X$,meshlambert_frag:j$,meshmatcap_vert:K$,meshmatcap_frag:Y$,meshnormal_vert:Z$,meshnormal_frag:J$,meshphong_vert:Q$,meshphong_frag:tD,meshphysical_vert:eD,meshphysical_frag:nD,meshtoon_vert:sD,meshtoon_frag:iD,points_vert:rD,points_frag:oD,shadow_vert:aD,shadow_frag:lD,sprite_vert:cD,sprite_frag:uD},kt={common:{diffuse:{value:new Le(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new ii},uv2Transform:{value:new ii},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new $t(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ii}},sprite:{diffuse:{value:new Le(16777215)},opacity:{value:1},center:{value:new $t(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ii}}},sr={basic:{uniforms:hs([kt.common,kt.specularmap,kt.envmap,kt.aomap,kt.lightmap,kt.fog]),vertexShader:xe.meshbasic_vert,fragmentShader:xe.meshbasic_frag},lambert:{uniforms:hs([kt.common,kt.specularmap,kt.envmap,kt.aomap,kt.lightmap,kt.emissivemap,kt.bumpmap,kt.normalmap,kt.displacementmap,kt.fog,kt.lights,{emissive:{value:new Le(0)}}]),vertexShader:xe.meshlambert_vert,fragmentShader:xe.meshlambert_frag},phong:{uniforms:hs([kt.common,kt.specularmap,kt.envmap,kt.aomap,kt.lightmap,kt.emissivemap,kt.bumpmap,kt.normalmap,kt.displacementmap,kt.fog,kt.lights,{emissive:{value:new Le(0)},specular:{value:new Le(1118481)},shininess:{value:30}}]),vertexShader:xe.meshphong_vert,fragmentShader:xe.meshphong_frag},standard:{uniforms:hs([kt.common,kt.envmap,kt.aomap,kt.lightmap,kt.emissivemap,kt.bumpmap,kt.normalmap,kt.displacementmap,kt.roughnessmap,kt.metalnessmap,kt.fog,kt.lights,{emissive:{value:new Le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:xe.meshphysical_vert,fragmentShader:xe.meshphysical_frag},toon:{uniforms:hs([kt.common,kt.aomap,kt.lightmap,kt.emissivemap,kt.bumpmap,kt.normalmap,kt.displacementmap,kt.gradientmap,kt.fog,kt.lights,{emissive:{value:new Le(0)}}]),vertexShader:xe.meshtoon_vert,fragmentShader:xe.meshtoon_frag},matcap:{uniforms:hs([kt.common,kt.bumpmap,kt.normalmap,kt.displacementmap,kt.fog,{matcap:{value:null}}]),vertexShader:xe.meshmatcap_vert,fragmentShader:xe.meshmatcap_frag},points:{uniforms:hs([kt.points,kt.fog]),vertexShader:xe.points_vert,fragmentShader:xe.points_frag},dashed:{uniforms:hs([kt.common,kt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:xe.linedashed_vert,fragmentShader:xe.linedashed_frag},depth:{uniforms:hs([kt.common,kt.displacementmap]),vertexShader:xe.depth_vert,fragmentShader:xe.depth_frag},normal:{uniforms:hs([kt.common,kt.bumpmap,kt.normalmap,kt.displacementmap,{opacity:{value:1}}]),vertexShader:xe.meshnormal_vert,fragmentShader:xe.meshnormal_frag},sprite:{uniforms:hs([kt.sprite,kt.fog]),vertexShader:xe.sprite_vert,fragmentShader:xe.sprite_frag},background:{uniforms:{uvTransform:{value:new ii},t2D:{value:null}},vertexShader:xe.background_vert,fragmentShader:xe.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:xe.backgroundCube_vert,fragmentShader:xe.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:xe.cube_vert,fragmentShader:xe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:xe.equirect_vert,fragmentShader:xe.equirect_frag},distanceRGBA:{uniforms:hs([kt.common,kt.displacementmap,{referencePosition:{value:new K},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:xe.distanceRGBA_vert,fragmentShader:xe.distanceRGBA_frag},shadow:{uniforms:hs([kt.lights,kt.fog,{color:{value:new Le(0)},opacity:{value:1}}]),vertexShader:xe.shadow_vert,fragmentShader:xe.shadow_frag}};sr.physical={uniforms:hs([sr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new $t(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Le(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new $t},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Le(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Le(1,1,1)},specularColorMap:{value:null}}]),vertexShader:xe.meshphysical_vert,fragmentShader:xe.meshphysical_frag};function hD(s,t,e,n,i,r,o){const a=new Le(0);let l=r===!0?0:1,c,u,h=null,d=0,f=null;function p(m,x){let v=!1,y=x.isScene===!0?x.background:null;y&&y.isTexture&&(y=(x.backgroundBlurriness>0?e:t).get(y));const b=s.xr,w=b.getSession&&b.getSession();w&&w.environmentBlendMode==="additive"&&(y=null),y===null?g(a,l):y&&y.isColor&&(g(y,1),v=!0),(s.autoClear||v)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),y&&(y.isCubeTexture||y.mapping===Ff)?(u===void 0&&(u=new rn(new bo(1,1,1),new ma({name:"BackgroundCubeMaterial",uniforms:Bl(sr.backgroundCube.uniforms),vertexShader:sr.backgroundCube.vertexShader,fragmentShader:sr.backgroundCube.fragmentShader,side:di,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(S,C,_){this.matrixWorld.copyPosition(_.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,(h!==y||d!==y.version||f!==s.toneMapping)&&(u.material.needsUpdate=!0,h=y,d=y.version,f=s.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):y&&y.isTexture&&(c===void 0&&(c=new rn(new zf(2,2),new ma({name:"BackgroundMaterial",uniforms:Bl(sr.background.uniforms),vertexShader:sr.background.vertexShader,fragmentShader:sr.background.fragmentShader,side:Ll,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=y,y.matrixAutoUpdate===!0&&y.updateMatrix(),c.material.uniforms.uvTransform.value.copy(y.matrix),(h!==y||d!==y.version||f!==s.toneMapping)&&(c.material.needsUpdate=!0,h=y,d=y.version,f=s.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function g(m,x){n.buffers.color.setClear(m.r,m.g,m.b,x,o)}return{getClearColor:function(){return a},setClearColor:function(m,x=1){a.set(m),l=x,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,g(a,l)},render:p}}function dD(s,t,e,n){const i=s.getParameter(34921),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=m(null);let c=l,u=!1;function h(M,A,R,V,L){let $=!1;if(o){const U=g(V,R,A);c!==U&&(c=U,f(c.object)),$=x(M,V,R,L),$&&v(M,V,R,L)}else{const U=A.wireframe===!0;(c.geometry!==V.id||c.program!==R.id||c.wireframe!==U)&&(c.geometry=V.id,c.program=R.id,c.wireframe=U,$=!0)}L!==null&&e.update(L,34963),($||u)&&(u=!1,_(M,A,R,V),L!==null&&s.bindBuffer(34963,e.get(L).buffer))}function d(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function f(M){return n.isWebGL2?s.bindVertexArray(M):r.bindVertexArrayOES(M)}function p(M){return n.isWebGL2?s.deleteVertexArray(M):r.deleteVertexArrayOES(M)}function g(M,A,R){const V=R.wireframe===!0;let L=a[M.id];L===void 0&&(L={},a[M.id]=L);let $=L[A.id];$===void 0&&($={},L[A.id]=$);let U=$[V];return U===void 0&&(U=m(d()),$[V]=U),U}function m(M){const A=[],R=[],V=[];for(let L=0;L<i;L++)A[L]=0,R[L]=0,V[L]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:A,enabledAttributes:R,attributeDivisors:V,object:M,attributes:{},index:null}}function x(M,A,R,V){const L=c.attributes,$=A.attributes;let U=0;const H=R.getAttributes();for(const W in H)if(H[W].location>=0){const it=L[W];let lt=$[W];if(lt===void 0&&(W==="instanceMatrix"&&M.instanceMatrix&&(lt=M.instanceMatrix),W==="instanceColor"&&M.instanceColor&&(lt=M.instanceColor)),it===void 0||it.attribute!==lt||lt&&it.data!==lt.data)return!0;U++}return c.attributesNum!==U||c.index!==V}function v(M,A,R,V){const L={},$=A.attributes;let U=0;const H=R.getAttributes();for(const W in H)if(H[W].location>=0){let it=$[W];it===void 0&&(W==="instanceMatrix"&&M.instanceMatrix&&(it=M.instanceMatrix),W==="instanceColor"&&M.instanceColor&&(it=M.instanceColor));const lt={};lt.attribute=it,it&&it.data&&(lt.data=it.data),L[W]=lt,U++}c.attributes=L,c.attributesNum=U,c.index=V}function y(){const M=c.newAttributes;for(let A=0,R=M.length;A<R;A++)M[A]=0}function b(M){w(M,0)}function w(M,A){const R=c.newAttributes,V=c.enabledAttributes,L=c.attributeDivisors;R[M]=1,V[M]===0&&(s.enableVertexAttribArray(M),V[M]=1),L[M]!==A&&((n.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](M,A),L[M]=A)}function S(){const M=c.newAttributes,A=c.enabledAttributes;for(let R=0,V=A.length;R<V;R++)A[R]!==M[R]&&(s.disableVertexAttribArray(R),A[R]=0)}function C(M,A,R,V,L,$){n.isWebGL2===!0&&(R===5124||R===5125)?s.vertexAttribIPointer(M,A,R,L,$):s.vertexAttribPointer(M,A,R,V,L,$)}function _(M,A,R,V){if(n.isWebGL2===!1&&(M.isInstancedMesh||V.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;y();const L=V.attributes,$=R.getAttributes(),U=A.defaultAttributeValues;for(const H in $){const W=$[H];if(W.location>=0){let Z=L[H];if(Z===void 0&&(H==="instanceMatrix"&&M.instanceMatrix&&(Z=M.instanceMatrix),H==="instanceColor"&&M.instanceColor&&(Z=M.instanceColor)),Z!==void 0){const it=Z.normalized,lt=Z.itemSize,J=e.get(Z);if(J===void 0)continue;const vt=J.buffer,mt=J.type,xt=J.bytesPerElement;if(Z.isInterleavedBufferAttribute){const dt=Z.data,rt=dt.stride,yt=Z.offset;if(dt.isInstancedInterleavedBuffer){for(let Tt=0;Tt<W.locationSize;Tt++)w(W.location+Tt,dt.meshPerAttribute);M.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=dt.meshPerAttribute*dt.count)}else for(let Tt=0;Tt<W.locationSize;Tt++)b(W.location+Tt);s.bindBuffer(34962,vt);for(let Tt=0;Tt<W.locationSize;Tt++)C(W.location+Tt,lt/W.locationSize,mt,it,rt*xt,(yt+lt/W.locationSize*Tt)*xt)}else{if(Z.isInstancedBufferAttribute){for(let dt=0;dt<W.locationSize;dt++)w(W.location+dt,Z.meshPerAttribute);M.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=Z.meshPerAttribute*Z.count)}else for(let dt=0;dt<W.locationSize;dt++)b(W.location+dt);s.bindBuffer(34962,vt);for(let dt=0;dt<W.locationSize;dt++)C(W.location+dt,lt/W.locationSize,mt,it,lt*xt,lt/W.locationSize*dt*xt)}}else if(U!==void 0){const it=U[H];if(it!==void 0)switch(it.length){case 2:s.vertexAttrib2fv(W.location,it);break;case 3:s.vertexAttrib3fv(W.location,it);break;case 4:s.vertexAttrib4fv(W.location,it);break;default:s.vertexAttrib1fv(W.location,it)}}}}S()}function I(){P();for(const M in a){const A=a[M];for(const R in A){const V=A[R];for(const L in V)p(V[L].object),delete V[L];delete A[R]}delete a[M]}}function T(M){if(a[M.id]===void 0)return;const A=a[M.id];for(const R in A){const V=A[R];for(const L in V)p(V[L].object),delete V[L];delete A[R]}delete a[M.id]}function N(M){for(const A in a){const R=a[A];if(R[M.id]===void 0)continue;const V=R[M.id];for(const L in V)p(V[L].object),delete V[L];delete R[M.id]}}function P(){E(),u=!0,c!==l&&(c=l,f(c.object))}function E(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:P,resetDefaultState:E,dispose:I,releaseStatesOfGeometry:T,releaseStatesOfProgram:N,initAttributes:y,enableAttribute:b,disableUnusedAttributes:S}}function fD(s,t,e,n){const i=n.isWebGL2;let r;function o(c){r=c}function a(c,u){s.drawArrays(r,c,u),e.update(u,r,1)}function l(c,u,h){if(h===0)return;let d,f;if(i)d=s,f="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[f](r,c,u,h),e.update(u,r,h)}this.setMode=o,this.render=a,this.renderInstances=l}function pD(s,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const C=t.get("EXT_texture_filter_anisotropic");n=s.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(C){if(C==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";C="mediump"}return C==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&s instanceof WebGL2ComputeRenderingContext;let a=e.precision!==void 0?e.precision:"highp";const l=r(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,h=s.getParameter(34930),d=s.getParameter(35660),f=s.getParameter(3379),p=s.getParameter(34076),g=s.getParameter(34921),m=s.getParameter(36347),x=s.getParameter(36348),v=s.getParameter(36349),y=d>0,b=o||t.has("OES_texture_float"),w=y&&b,S=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:m,maxVaryings:x,maxFragmentUniforms:v,vertexTextures:y,floatFragmentTextures:b,floatVertexTextures:w,maxSamples:S}}function mD(s){const t=this;let e=null,n=0,i=!1,r=!1;const o=new Vo,a=new ii,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,f){const p=h.length!==0||d||n!==0||i;return i=d,e=u(h,f,0),n=h.length,p},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,d,f){const p=h.clippingPlanes,g=h.clipIntersection,m=h.clipShadows,x=s.get(h);if(!i||p===null||p.length===0||r&&!m)r?u(null):c();else{const v=r?0:n,y=v*4;let b=x.clippingState||null;l.value=b,b=u(p,d,y,f);for(let w=0;w!==y;++w)b[w]=e[w];x.clippingState=b,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=v}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(h,d,f,p){const g=h!==null?h.length:0;let m=null;if(g!==0){if(m=l.value,p!==!0||m===null){const x=f+g*4,v=d.matrixWorldInverse;a.getNormalMatrix(v),(m===null||m.length<x)&&(m=new Float32Array(x));for(let y=0,b=f;y!==g;++y,b+=4)o.copy(h[y]).applyMatrix4(v,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,m}}function gD(s){let t=new WeakMap;function e(o,a){return a===Vg?o.mapping=Pl:a===Wg&&(o.mapping=Ol),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Vg||a===Wg)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new kN(l.height/2);return c.fromEquirectangularTexture(s,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class FS extends RS{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const _l=4,nw=[.125,.215,.35,.446,.526,.582],Ho=20,ig=new FS,sw=new Le;let rg=null;const Wo=(1+Math.sqrt(5))/2,cl=1/Wo,iw=[new K(1,1,1),new K(-1,1,1),new K(1,1,-1),new K(-1,1,-1),new K(0,Wo,cl),new K(0,Wo,-cl),new K(cl,0,Wo),new K(-cl,0,Wo),new K(Wo,cl,0),new K(-Wo,cl,0)];class rw{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){rg=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=lw(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=aw(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(rg),t.scissorTest=!1,md(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Pl||t.mapping===Ol?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),rg=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:ti,minFilter:ti,generateMipmaps:!1,type:eu,format:Ri,encoding:da,depthBuffer:!1},i=ow(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ow(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=xD(r)),this._blurMaterial=vD(r,t,e)}return i}_compileMaterial(t){const e=new rn(this._lodPlanes[0],t);this._renderer.compile(e,ig)}_sceneToCubeUV(t,e,n,i){const a=new ei(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,d=u.toneMapping;u.getClearColor(sw),u.toneMapping=Pr,u.autoClear=!1;const f=new Ra({name:"PMREM.Background",side:di,depthWrite:!1,depthTest:!1}),p=new rn(new bo,f);let g=!1;const m=t.background;m?m.isColor&&(f.color.copy(m),t.background=null,g=!0):(f.color.copy(sw),g=!0);for(let x=0;x<6;x++){const v=x%3;v===0?(a.up.set(0,l[x],0),a.lookAt(c[x],0,0)):v===1?(a.up.set(0,0,l[x]),a.lookAt(0,c[x],0)):(a.up.set(0,l[x],0),a.lookAt(0,0,c[x]));const y=this._cubeSize;md(i,v*y,x>2?y:0,y,y),u.setRenderTarget(i),g&&u.render(p,a),u.render(t,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=d,u.autoClear=h,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Pl||t.mapping===Ol;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=lw()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=aw());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new rn(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const l=this._cubeSize;md(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,ig)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=iw[(i-1)%iw.length];this._blur(t,i-1,i,r,o)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new rn(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Ho-1),g=r/p,m=isFinite(r)?1+Math.floor(u*g):Ho;m>Ho&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Ho}`);const x=[];let v=0;for(let C=0;C<Ho;++C){const _=C/g,I=Math.exp(-_*_/2);x.push(I),C===0?v+=I:C<m&&(v+=2*I)}for(let C=0;C<x.length;C++)x[C]=x[C]/v;d.envMap.value=t.texture,d.samples.value=m,d.weights.value=x,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-n;const b=this._sizeLods[i],w=3*b*(i>y-_l?i-y+_l:0),S=4*(this._cubeSize-b);md(e,w,S,3*b,2*b),l.setRenderTarget(e),l.render(h,ig)}}function xD(s){const t=[],e=[],n=[];let i=s;const r=s-_l+1+nw.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>s-_l?l=nw[o-s+_l-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,g=3,m=2,x=1,v=new Float32Array(g*p*f),y=new Float32Array(m*p*f),b=new Float32Array(x*p*f);for(let S=0;S<f;S++){const C=S%3*2/3-1,_=S>2?0:-1,I=[C,_,0,C+2/3,_,0,C+2/3,_+1,0,C,_,0,C+2/3,_+1,0,C,_+1,0];v.set(I,g*p*S),y.set(d,m*p*S);const T=[S,S,S,S,S,S];b.set(T,x*p*S)}const w=new Us;w.setAttribute("position",new cr(v,g)),w.setAttribute("uv",new cr(y,m)),w.setAttribute("faceIndex",new cr(b,x)),t.push(w),i>_l&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function ow(s,t,e){const n=new fa(s,t,e);return n.texture.mapping=Ff,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function md(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function vD(s,t,e){const n=new Float32Array(Ho),i=new K(0,1,0);return new ma({name:"SphericalGaussianBlur",defines:{n:Ho,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Kx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:io,depthTest:!1,depthWrite:!1})}function aw(){return new ma({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Kx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:io,depthTest:!1,depthWrite:!1})}function lw(){return new ma({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Kx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:io,depthTest:!1,depthWrite:!1})}function Kx(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function bD(s){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Vg||l===Wg,u=l===Pl||l===Ol;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=t.get(a);return e===null&&(e=new rw(s)),h=c?e.fromEquirectangular(a,h):e.fromCubemap(a,h),t.set(a,h),h.texture}else{if(t.has(a))return t.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){e===null&&(e=new rw(s));const d=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function r(a){const l=a.target;l.removeEventListener("dispose",r);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function yD(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function wD(s,t,e,n){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&t.remove(d.index);for(const p in d.attributes)t.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(t.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function l(h){const d=h.attributes;for(const p in d)t.update(d[p],34962);const f=h.morphAttributes;for(const p in f){const g=f[p];for(let m=0,x=g.length;m<x;m++)t.update(g[m],34962)}}function c(h){const d=[],f=h.index,p=h.attributes.position;let g=0;if(f!==null){const v=f.array;g=f.version;for(let y=0,b=v.length;y<b;y+=3){const w=v[y+0],S=v[y+1],C=v[y+2];d.push(w,S,S,C,C,w)}}else{const v=p.array;g=p.version;for(let y=0,b=v.length/3-1;y<b;y+=3){const w=y+0,S=y+1,C=y+2;d.push(w,S,S,C,C,w)}}const m=new(IS(d)?NS:AS)(d,1);m.version=g;const x=r.get(h);x&&t.remove(x),r.set(h,m)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return r.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function _D(s,t,e,n){const i=n.isWebGL2;let r;function o(d){r=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,f){s.drawElements(r,f,a,d*l),e.update(f,r,1)}function h(d,f,p){if(p===0)return;let g,m;if(i)g=s,m="drawElementsInstanced";else if(g=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[m](r,f,a,d*l,p),e.update(f,r,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function SD(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case 4:e.triangles+=a*(r/3);break;case 1:e.lines+=a*(r/2);break;case 3:e.lines+=a*(r-1);break;case 2:e.lines+=a*r;break;case 0:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function CD(s,t){return s[0]-t[0]}function ID(s,t){return Math.abs(t[1])-Math.abs(s[1])}function TD(s,t,e){const n={},i=new Float32Array(8),r=new WeakMap,o=new Vn,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,d){const f=c.morphTargetInfluences;if(t.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=g!==void 0?g.length:0;let x=r.get(u);if(x===void 0||x.count!==m){let R=function(){M.dispose(),r.delete(u),u.removeEventListener("dispose",R)};var p=R;x!==void 0&&x.texture.dispose();const b=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,S=u.morphAttributes.color!==void 0,C=u.morphAttributes.position||[],_=u.morphAttributes.normal||[],I=u.morphAttributes.color||[];let T=0;b===!0&&(T=1),w===!0&&(T=2),S===!0&&(T=3);let N=u.attributes.position.count*T,P=1;N>t.maxTextureSize&&(P=Math.ceil(N/t.maxTextureSize),N=t.maxTextureSize);const E=new Float32Array(N*P*4*m),M=new kS(E,N,P,m);M.type=Jo,M.needsUpdate=!0;const A=T*4;for(let V=0;V<m;V++){const L=C[V],$=_[V],U=I[V],H=N*P*4*V;for(let W=0;W<L.count;W++){const Z=W*A;b===!0&&(o.fromBufferAttribute(L,W),E[H+Z+0]=o.x,E[H+Z+1]=o.y,E[H+Z+2]=o.z,E[H+Z+3]=0),w===!0&&(o.fromBufferAttribute($,W),E[H+Z+4]=o.x,E[H+Z+5]=o.y,E[H+Z+6]=o.z,E[H+Z+7]=0),S===!0&&(o.fromBufferAttribute(U,W),E[H+Z+8]=o.x,E[H+Z+9]=o.y,E[H+Z+10]=o.z,E[H+Z+11]=U.itemSize===4?o.w:1)}}x={count:m,texture:M,size:new $t(N,P)},r.set(u,x),u.addEventListener("dispose",R)}let v=0;for(let b=0;b<f.length;b++)v+=f[b];const y=u.morphTargetsRelative?1:1-v;d.getUniforms().setValue(s,"morphTargetBaseInfluence",y),d.getUniforms().setValue(s,"morphTargetInfluences",f),d.getUniforms().setValue(s,"morphTargetsTexture",x.texture,e),d.getUniforms().setValue(s,"morphTargetsTextureSize",x.size)}else{const g=f===void 0?0:f.length;let m=n[u.id];if(m===void 0||m.length!==g){m=[];for(let w=0;w<g;w++)m[w]=[w,0];n[u.id]=m}for(let w=0;w<g;w++){const S=m[w];S[0]=w,S[1]=f[w]}m.sort(ID);for(let w=0;w<8;w++)w<g&&m[w][1]?(a[w][0]=m[w][0],a[w][1]=m[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort(CD);const x=u.morphAttributes.position,v=u.morphAttributes.normal;let y=0;for(let w=0;w<8;w++){const S=a[w],C=S[0],_=S[1];C!==Number.MAX_SAFE_INTEGER&&_?(x&&u.getAttribute("morphTarget"+w)!==x[C]&&u.setAttribute("morphTarget"+w,x[C]),v&&u.getAttribute("morphNormal"+w)!==v[C]&&u.setAttribute("morphNormal"+w,v[C]),i[w]=_,y+=_):(x&&u.hasAttribute("morphTarget"+w)===!0&&u.deleteAttribute("morphTarget"+w),v&&u.hasAttribute("morphNormal"+w)===!0&&u.deleteAttribute("morphNormal"+w),i[w]=0)}const b=u.morphTargetsRelative?1:1-y;d.getUniforms().setValue(s,"morphTargetBaseInfluence",b),d.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function ED(s,t,e,n){let i=new WeakMap;function r(l){const c=n.render.frame,u=l.geometry,h=t.get(l,u);return i.get(h)!==c&&(t.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),e.update(l.instanceMatrix,34962),l.instanceColor!==null&&e.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:r,dispose:o}}const LS=new Bi,PS=new kS,OS=new fN,zS=new $S,cw=[],uw=[],hw=new Float32Array(16),dw=new Float32Array(9),fw=new Float32Array(4);function ac(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=cw[i];if(r===void 0&&(r=new Float32Array(i),cw[i]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,s[o].toArray(r,a)}return r}function Fn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Ln(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function Bf(s,t){let e=uw[t];e===void 0&&(e=new Int32Array(t),uw[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function MD(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function kD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fn(e,t))return;s.uniform2fv(this.addr,t),Ln(e,t)}}function AD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Fn(e,t))return;s.uniform3fv(this.addr,t),Ln(e,t)}}function ND(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fn(e,t))return;s.uniform4fv(this.addr,t),Ln(e,t)}}function RD(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Ln(e,t)}else{if(Fn(e,n))return;fw.set(n),s.uniformMatrix2fv(this.addr,!1,fw),Ln(e,n)}}function $D(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Ln(e,t)}else{if(Fn(e,n))return;dw.set(n),s.uniformMatrix3fv(this.addr,!1,dw),Ln(e,n)}}function DD(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Ln(e,t)}else{if(Fn(e,n))return;hw.set(n),s.uniformMatrix4fv(this.addr,!1,hw),Ln(e,n)}}function FD(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function LD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fn(e,t))return;s.uniform2iv(this.addr,t),Ln(e,t)}}function PD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Fn(e,t))return;s.uniform3iv(this.addr,t),Ln(e,t)}}function OD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fn(e,t))return;s.uniform4iv(this.addr,t),Ln(e,t)}}function zD(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function BD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fn(e,t))return;s.uniform2uiv(this.addr,t),Ln(e,t)}}function UD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Fn(e,t))return;s.uniform3uiv(this.addr,t),Ln(e,t)}}function VD(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fn(e,t))return;s.uniform4uiv(this.addr,t),Ln(e,t)}}function WD(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||LS,i)}function GD(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||OS,i)}function HD(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||zS,i)}function qD(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||PS,i)}function XD(s){switch(s){case 5126:return MD;case 35664:return kD;case 35665:return AD;case 35666:return ND;case 35674:return RD;case 35675:return $D;case 35676:return DD;case 5124:case 35670:return FD;case 35667:case 35671:return LD;case 35668:case 35672:return PD;case 35669:case 35673:return OD;case 5125:return zD;case 36294:return BD;case 36295:return UD;case 36296:return VD;case 35678:case 36198:case 36298:case 36306:case 35682:return WD;case 35679:case 36299:case 36307:return GD;case 35680:case 36300:case 36308:case 36293:return HD;case 36289:case 36303:case 36311:case 36292:return qD}}function jD(s,t){s.uniform1fv(this.addr,t)}function KD(s,t){const e=ac(t,this.size,2);s.uniform2fv(this.addr,e)}function YD(s,t){const e=ac(t,this.size,3);s.uniform3fv(this.addr,e)}function ZD(s,t){const e=ac(t,this.size,4);s.uniform4fv(this.addr,e)}function JD(s,t){const e=ac(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function QD(s,t){const e=ac(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function tF(s,t){const e=ac(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function eF(s,t){s.uniform1iv(this.addr,t)}function nF(s,t){s.uniform2iv(this.addr,t)}function sF(s,t){s.uniform3iv(this.addr,t)}function iF(s,t){s.uniform4iv(this.addr,t)}function rF(s,t){s.uniform1uiv(this.addr,t)}function oF(s,t){s.uniform2uiv(this.addr,t)}function aF(s,t){s.uniform3uiv(this.addr,t)}function lF(s,t){s.uniform4uiv(this.addr,t)}function cF(s,t,e){const n=this.cache,i=t.length,r=Bf(e,i);Fn(n,r)||(s.uniform1iv(this.addr,r),Ln(n,r));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||LS,r[o])}function uF(s,t,e){const n=this.cache,i=t.length,r=Bf(e,i);Fn(n,r)||(s.uniform1iv(this.addr,r),Ln(n,r));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||OS,r[o])}function hF(s,t,e){const n=this.cache,i=t.length,r=Bf(e,i);Fn(n,r)||(s.uniform1iv(this.addr,r),Ln(n,r));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||zS,r[o])}function dF(s,t,e){const n=this.cache,i=t.length,r=Bf(e,i);Fn(n,r)||(s.uniform1iv(this.addr,r),Ln(n,r));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||PS,r[o])}function fF(s){switch(s){case 5126:return jD;case 35664:return KD;case 35665:return YD;case 35666:return ZD;case 35674:return JD;case 35675:return QD;case 35676:return tF;case 5124:case 35670:return eF;case 35667:case 35671:return nF;case 35668:case 35672:return sF;case 35669:case 35673:return iF;case 5125:return rF;case 36294:return oF;case 36295:return aF;case 36296:return lF;case 35678:case 36198:case 36298:case 36306:case 35682:return cF;case 35679:case 36299:case 36307:return uF;case 35680:case 36300:case 36308:case 36293:return hF;case 36289:case 36303:case 36311:case 36292:return dF}}class pF{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=XD(e.type)}}class mF{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=fF(e.type)}}class gF{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const og=/(\w+)(\])?(\[|\.)?/g;function pw(s,t){s.seq.push(t),s.map[t.id]=t}function xF(s,t,e){const n=s.name,i=n.length;for(og.lastIndex=0;;){const r=og.exec(n),o=og.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){pw(e,c===void 0?new pF(a,s,t):new mF(a,s,t));break}else{let h=e.map[a];h===void 0&&(h=new gF(a),pw(e,h)),e=h}}}class qd{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),o=t.getUniformLocation(e,r.name);xF(r,o,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function mw(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}let vF=0;function bF(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function yF(s){switch(s){case da:return["Linear","( value )"];case ln:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function gw(s,t,e){const n=s.getShaderParameter(t,35713),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+bF(s.getShaderSource(t),o)}else return i}function wF(s,t){const e=yF(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function _F(s,t){let e;switch(t){case BA:e="Linear";break;case UA:e="Reinhard";break;case VA:e="OptimizedCineon";break;case WA:e="ACESFilmic";break;case GA:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function SF(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(zc).join(`
`)}function CF(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function IF(s,t){const e={},n=s.getProgramParameter(t,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),o=r.name;let a=1;r.type===35674&&(a=2),r.type===35675&&(a=3),r.type===35676&&(a=4),e[o]={type:r.type,location:s.getAttribLocation(t,o),locationSize:a}}return e}function zc(s){return s!==""}function xw(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function vw(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const TF=/^[ \t]*#include +<([\w\d./]+)>/gm;function jg(s){return s.replace(TF,EF)}function EF(s,t){const e=xe[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return jg(e)}const MF=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function bw(s){return s.replace(MF,kF)}function kF(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function yw(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function AF(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===bS?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===yS?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Oc&&(t="SHADOWMAP_TYPE_VSM"),t}function NF(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Pl:case Ol:t="ENVMAP_TYPE_CUBE";break;case Ff:t="ENVMAP_TYPE_CUBE_UV";break}return t}function RF(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Ol:t="ENVMAP_MODE_REFRACTION";break}return t}function $F(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case Df:t="ENVMAP_BLENDING_MULTIPLY";break;case OA:t="ENVMAP_BLENDING_MIX";break;case zA:t="ENVMAP_BLENDING_ADD";break}return t}function DF(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function FF(s,t,e,n){const i=s.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=AF(e),c=NF(e),u=RF(e),h=$F(e),d=DF(e),f=e.isWebGL2?"":SF(e),p=CF(r),g=i.createProgram();let m,x,v=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=[p].filter(zc).join(`
`),m.length>0&&(m+=`
`),x=[f,p].filter(zc).join(`
`),x.length>0&&(x+=`
`)):(m=[yw(e),"#define SHADER_NAME "+e.shaderName,p,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(zc).join(`
`),x=[f,yw(e),"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Pr?"#define TONE_MAPPING":"",e.toneMapping!==Pr?xe.tonemapping_pars_fragment:"",e.toneMapping!==Pr?_F("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",xe.encodings_pars_fragment,wF("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(zc).join(`
`)),o=jg(o),o=xw(o,e),o=vw(o,e),a=jg(a),a=xw(a,e),a=vw(a,e),o=bw(o),a=bw(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=["#define varying in",e.glslVersion===Wy?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Wy?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const y=v+m+o,b=v+x+a,w=mw(i,35633,y),S=mw(i,35632,b);if(i.attachShader(g,w),i.attachShader(g,S),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),s.debug.checkShaderErrors){const I=i.getProgramInfoLog(g).trim(),T=i.getShaderInfoLog(w).trim(),N=i.getShaderInfoLog(S).trim();let P=!0,E=!0;if(i.getProgramParameter(g,35714)===!1){P=!1;const M=gw(i,w,"vertex"),A=gw(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+`

Program Info Log: `+I+`
`+M+`
`+A)}else I!==""?console.warn("THREE.WebGLProgram: Program Info Log:",I):(T===""||N==="")&&(E=!1);E&&(this.diagnostics={runnable:P,programLog:I,vertexShader:{log:T,prefix:m},fragmentShader:{log:N,prefix:x}})}i.deleteShader(w),i.deleteShader(S);let C;this.getUniforms=function(){return C===void 0&&(C=new qd(i,g)),C};let _;return this.getAttributes=function(){return _===void 0&&(_=IF(i,g)),_},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=e.shaderName,this.id=vF++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=w,this.fragmentShader=S,this}let LF=0;class PF{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new OF(t),e.set(t,n)),n}}class OF{constructor(t){this.id=LF++,this.code=t,this.usedTimes=0}}function zF(s,t,e,n,i,r,o){const a=new Xx,l=new PF,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(_,I,T,N,P){const E=N.fog,M=P.geometry,A=_.isMeshStandardMaterial?N.environment:null,R=(_.isMeshStandardMaterial?e:t).get(_.envMap||A),V=!!R&&R.mapping===Ff?R.image.height:null,L=p[_.type];_.precision!==null&&(f=i.getMaxPrecision(_.precision),f!==_.precision&&console.warn("THREE.WebGLProgram.getParameters:",_.precision,"not supported, using",f,"instead."));const $=M.morphAttributes.position||M.morphAttributes.normal||M.morphAttributes.color,U=$!==void 0?$.length:0;let H=0;M.morphAttributes.position!==void 0&&(H=1),M.morphAttributes.normal!==void 0&&(H=2),M.morphAttributes.color!==void 0&&(H=3);let W,Z,it,lt;if(L){const rt=sr[L];W=rt.vertexShader,Z=rt.fragmentShader}else W=_.vertexShader,Z=_.fragmentShader,l.update(_),it=l.getVertexShaderID(_),lt=l.getFragmentShaderID(_);const J=s.getRenderTarget(),vt=_.alphaTest>0,mt=_.clearcoat>0,xt=_.iridescence>0;return{isWebGL2:u,shaderID:L,shaderName:_.type,vertexShader:W,fragmentShader:Z,defines:_.defines,customVertexShaderID:it,customFragmentShaderID:lt,isRawShaderMaterial:_.isRawShaderMaterial===!0,glslVersion:_.glslVersion,precision:f,instancing:P.isInstancedMesh===!0,instancingColor:P.isInstancedMesh===!0&&P.instanceColor!==null,supportsVertexTextures:d,outputEncoding:J===null?s.outputEncoding:J.isXRRenderTarget===!0?J.texture.encoding:da,map:!!_.map,matcap:!!_.matcap,envMap:!!R,envMapMode:R&&R.mapping,envMapCubeUVHeight:V,lightMap:!!_.lightMap,aoMap:!!_.aoMap,emissiveMap:!!_.emissiveMap,bumpMap:!!_.bumpMap,normalMap:!!_.normalMap,objectSpaceNormalMap:_.normalMapType===cN,tangentSpaceNormalMap:_.normalMapType===Pf,decodeVideoTexture:!!_.map&&_.map.isVideoTexture===!0&&_.map.encoding===ln,clearcoat:mt,clearcoatMap:mt&&!!_.clearcoatMap,clearcoatRoughnessMap:mt&&!!_.clearcoatRoughnessMap,clearcoatNormalMap:mt&&!!_.clearcoatNormalMap,iridescence:xt,iridescenceMap:xt&&!!_.iridescenceMap,iridescenceThicknessMap:xt&&!!_.iridescenceThicknessMap,displacementMap:!!_.displacementMap,roughnessMap:!!_.roughnessMap,metalnessMap:!!_.metalnessMap,specularMap:!!_.specularMap,specularIntensityMap:!!_.specularIntensityMap,specularColorMap:!!_.specularColorMap,opaque:_.transparent===!1&&_.blending===El,alphaMap:!!_.alphaMap,alphaTest:vt,gradientMap:!!_.gradientMap,sheen:_.sheen>0,sheenColorMap:!!_.sheenColorMap,sheenRoughnessMap:!!_.sheenRoughnessMap,transmission:_.transmission>0,transmissionMap:!!_.transmissionMap,thicknessMap:!!_.thicknessMap,combine:_.combine,vertexTangents:!!_.normalMap&&!!M.attributes.tangent,vertexColors:_.vertexColors,vertexAlphas:_.vertexColors===!0&&!!M.attributes.color&&M.attributes.color.itemSize===4,vertexUvs:!!_.map||!!_.bumpMap||!!_.normalMap||!!_.specularMap||!!_.alphaMap||!!_.emissiveMap||!!_.roughnessMap||!!_.metalnessMap||!!_.clearcoatMap||!!_.clearcoatRoughnessMap||!!_.clearcoatNormalMap||!!_.iridescenceMap||!!_.iridescenceThicknessMap||!!_.displacementMap||!!_.transmissionMap||!!_.thicknessMap||!!_.specularIntensityMap||!!_.specularColorMap||!!_.sheenColorMap||!!_.sheenRoughnessMap,uvsVertexOnly:!(!!_.map||!!_.bumpMap||!!_.normalMap||!!_.specularMap||!!_.alphaMap||!!_.emissiveMap||!!_.roughnessMap||!!_.metalnessMap||!!_.clearcoatNormalMap||!!_.iridescenceMap||!!_.iridescenceThicknessMap||_.transmission>0||!!_.transmissionMap||!!_.thicknessMap||!!_.specularIntensityMap||!!_.specularColorMap||_.sheen>0||!!_.sheenColorMap||!!_.sheenRoughnessMap)&&!!_.displacementMap,fog:!!E,useFog:_.fog===!0,fogExp2:E&&E.isFogExp2,flatShading:!!_.flatShading,sizeAttenuation:_.sizeAttenuation,logarithmicDepthBuffer:h,skinning:P.isSkinnedMesh===!0,morphTargets:M.morphAttributes.position!==void 0,morphNormals:M.morphAttributes.normal!==void 0,morphColors:M.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:H,numDirLights:I.directional.length,numPointLights:I.point.length,numSpotLights:I.spot.length,numSpotLightMaps:I.spotLightMap.length,numRectAreaLights:I.rectArea.length,numHemiLights:I.hemi.length,numDirLightShadows:I.directionalShadowMap.length,numPointLightShadows:I.pointShadowMap.length,numSpotLightShadows:I.spotShadowMap.length,numSpotLightShadowsWithMaps:I.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:_.dithering,shadowMapEnabled:s.shadowMap.enabled&&T.length>0,shadowMapType:s.shadowMap.type,toneMapping:_.toneMapped?s.toneMapping:Pr,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:_.premultipliedAlpha,doubleSided:_.side===si,flipSided:_.side===di,useDepthPacking:!!_.depthPacking,depthPacking:_.depthPacking||0,index0AttributeName:_.index0AttributeName,extensionDerivatives:_.extensions&&_.extensions.derivatives,extensionFragDepth:_.extensions&&_.extensions.fragDepth,extensionDrawBuffers:_.extensions&&_.extensions.drawBuffers,extensionShaderTextureLOD:_.extensions&&_.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:_.customProgramCacheKey()}}function m(_){const I=[];if(_.shaderID?I.push(_.shaderID):(I.push(_.customVertexShaderID),I.push(_.customFragmentShaderID)),_.defines!==void 0)for(const T in _.defines)I.push(T),I.push(_.defines[T]);return _.isRawShaderMaterial===!1&&(x(I,_),v(I,_),I.push(s.outputEncoding)),I.push(_.customProgramCacheKey),I.join()}function x(_,I){_.push(I.precision),_.push(I.outputEncoding),_.push(I.envMapMode),_.push(I.envMapCubeUVHeight),_.push(I.combine),_.push(I.vertexUvs),_.push(I.fogExp2),_.push(I.sizeAttenuation),_.push(I.morphTargetsCount),_.push(I.morphAttributeCount),_.push(I.numDirLights),_.push(I.numPointLights),_.push(I.numSpotLights),_.push(I.numSpotLightMaps),_.push(I.numHemiLights),_.push(I.numRectAreaLights),_.push(I.numDirLightShadows),_.push(I.numPointLightShadows),_.push(I.numSpotLightShadows),_.push(I.numSpotLightShadowsWithMaps),_.push(I.shadowMapType),_.push(I.toneMapping),_.push(I.numClippingPlanes),_.push(I.numClipIntersection),_.push(I.depthPacking)}function v(_,I){a.disableAll(),I.isWebGL2&&a.enable(0),I.supportsVertexTextures&&a.enable(1),I.instancing&&a.enable(2),I.instancingColor&&a.enable(3),I.map&&a.enable(4),I.matcap&&a.enable(5),I.envMap&&a.enable(6),I.lightMap&&a.enable(7),I.aoMap&&a.enable(8),I.emissiveMap&&a.enable(9),I.bumpMap&&a.enable(10),I.normalMap&&a.enable(11),I.objectSpaceNormalMap&&a.enable(12),I.tangentSpaceNormalMap&&a.enable(13),I.clearcoat&&a.enable(14),I.clearcoatMap&&a.enable(15),I.clearcoatRoughnessMap&&a.enable(16),I.clearcoatNormalMap&&a.enable(17),I.iridescence&&a.enable(18),I.iridescenceMap&&a.enable(19),I.iridescenceThicknessMap&&a.enable(20),I.displacementMap&&a.enable(21),I.specularMap&&a.enable(22),I.roughnessMap&&a.enable(23),I.metalnessMap&&a.enable(24),I.gradientMap&&a.enable(25),I.alphaMap&&a.enable(26),I.alphaTest&&a.enable(27),I.vertexColors&&a.enable(28),I.vertexAlphas&&a.enable(29),I.vertexUvs&&a.enable(30),I.vertexTangents&&a.enable(31),I.uvsVertexOnly&&a.enable(32),_.push(a.mask),a.disableAll(),I.fog&&a.enable(0),I.useFog&&a.enable(1),I.flatShading&&a.enable(2),I.logarithmicDepthBuffer&&a.enable(3),I.skinning&&a.enable(4),I.morphTargets&&a.enable(5),I.morphNormals&&a.enable(6),I.morphColors&&a.enable(7),I.premultipliedAlpha&&a.enable(8),I.shadowMapEnabled&&a.enable(9),I.physicallyCorrectLights&&a.enable(10),I.doubleSided&&a.enable(11),I.flipSided&&a.enable(12),I.useDepthPacking&&a.enable(13),I.dithering&&a.enable(14),I.specularIntensityMap&&a.enable(15),I.specularColorMap&&a.enable(16),I.transmission&&a.enable(17),I.transmissionMap&&a.enable(18),I.thicknessMap&&a.enable(19),I.sheen&&a.enable(20),I.sheenColorMap&&a.enable(21),I.sheenRoughnessMap&&a.enable(22),I.decodeVideoTexture&&a.enable(23),I.opaque&&a.enable(24),_.push(a.mask)}function y(_){const I=p[_.type];let T;if(I){const N=sr[I];T=IN.clone(N.uniforms)}else T=_.uniforms;return T}function b(_,I){let T;for(let N=0,P=c.length;N<P;N++){const E=c[N];if(E.cacheKey===I){T=E,++T.usedTimes;break}}return T===void 0&&(T=new FF(s,I,_,r),c.push(T)),T}function w(_){if(--_.usedTimes===0){const I=c.indexOf(_);c[I]=c[c.length-1],c.pop(),_.destroy()}}function S(_){l.remove(_)}function C(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:y,acquireProgram:b,releaseProgram:w,releaseShaderCache:S,programs:c,dispose:C}}function BF(){let s=new WeakMap;function t(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function e(r){s.delete(r)}function n(r,o,a){s.get(r)[o]=a}function i(){s=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function UF(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function ww(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function _w(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function o(h,d,f,p,g,m){let x=s[t];return x===void 0?(x={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:g,group:m},s[t]=x):(x.id=h.id,x.object=h,x.geometry=d,x.material=f,x.groupOrder=p,x.renderOrder=h.renderOrder,x.z=g,x.group=m),t++,x}function a(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.push(x):f.transparent===!0?i.push(x):e.push(x)}function l(h,d,f,p,g,m){const x=o(h,d,f,p,g,m);f.transmission>0?n.unshift(x):f.transparent===!0?i.unshift(x):e.unshift(x)}function c(h,d){e.length>1&&e.sort(h||UF),n.length>1&&n.sort(d||ww),i.length>1&&i.sort(d||ww)}function u(){for(let h=t,d=s.length;h<d;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:a,unshift:l,finish:u,sort:c}}function VF(){let s=new WeakMap;function t(n,i){const r=s.get(n);let o;return r===void 0?(o=new _w,s.set(n,[o])):i>=r.length?(o=new _w,r.push(o)):o=r[i],o}function e(){s=new WeakMap}return{get:t,dispose:e}}function WF(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new K,color:new Le};break;case"SpotLight":e={position:new K,direction:new K,color:new Le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new K,color:new Le,distance:0,decay:0};break;case"HemisphereLight":e={direction:new K,skyColor:new Le,groundColor:new Le};break;case"RectAreaLight":e={color:new Le,position:new K,halfWidth:new K,halfHeight:new K};break}return s[t.id]=e,e}}}function GF(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $t};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $t};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $t,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let HF=0;function qF(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function XF(s,t){const e=new WF,n=GF(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new K);const r=new K,o=new xn,a=new xn;function l(u,h){let d=0,f=0,p=0;for(let N=0;N<9;N++)i.probe[N].set(0,0,0);let g=0,m=0,x=0,v=0,y=0,b=0,w=0,S=0,C=0,_=0;u.sort(qF);const I=h!==!0?Math.PI:1;for(let N=0,P=u.length;N<P;N++){const E=u[N],M=E.color,A=E.intensity,R=E.distance,V=E.shadow&&E.shadow.map?E.shadow.map.texture:null;if(E.isAmbientLight)d+=M.r*A*I,f+=M.g*A*I,p+=M.b*A*I;else if(E.isLightProbe)for(let L=0;L<9;L++)i.probe[L].addScaledVector(E.sh.coefficients[L],A);else if(E.isDirectionalLight){const L=e.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity*I),E.castShadow){const $=E.shadow,U=n.get(E);U.shadowBias=$.bias,U.shadowNormalBias=$.normalBias,U.shadowRadius=$.radius,U.shadowMapSize=$.mapSize,i.directionalShadow[g]=U,i.directionalShadowMap[g]=V,i.directionalShadowMatrix[g]=E.shadow.matrix,b++}i.directional[g]=L,g++}else if(E.isSpotLight){const L=e.get(E);L.position.setFromMatrixPosition(E.matrixWorld),L.color.copy(M).multiplyScalar(A*I),L.distance=R,L.coneCos=Math.cos(E.angle),L.penumbraCos=Math.cos(E.angle*(1-E.penumbra)),L.decay=E.decay,i.spot[x]=L;const $=E.shadow;if(E.map&&(i.spotLightMap[C]=E.map,C++,$.updateMatrices(E),E.castShadow&&_++),i.spotLightMatrix[x]=$.matrix,E.castShadow){const U=n.get(E);U.shadowBias=$.bias,U.shadowNormalBias=$.normalBias,U.shadowRadius=$.radius,U.shadowMapSize=$.mapSize,i.spotShadow[x]=U,i.spotShadowMap[x]=V,S++}x++}else if(E.isRectAreaLight){const L=e.get(E);L.color.copy(M).multiplyScalar(A),L.halfWidth.set(E.width*.5,0,0),L.halfHeight.set(0,E.height*.5,0),i.rectArea[v]=L,v++}else if(E.isPointLight){const L=e.get(E);if(L.color.copy(E.color).multiplyScalar(E.intensity*I),L.distance=E.distance,L.decay=E.decay,E.castShadow){const $=E.shadow,U=n.get(E);U.shadowBias=$.bias,U.shadowNormalBias=$.normalBias,U.shadowRadius=$.radius,U.shadowMapSize=$.mapSize,U.shadowCameraNear=$.camera.near,U.shadowCameraFar=$.camera.far,i.pointShadow[m]=U,i.pointShadowMap[m]=V,i.pointShadowMatrix[m]=E.shadow.matrix,w++}i.point[m]=L,m++}else if(E.isHemisphereLight){const L=e.get(E);L.skyColor.copy(E.color).multiplyScalar(A*I),L.groundColor.copy(E.groundColor).multiplyScalar(A*I),i.hemi[y]=L,y++}}v>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=kt.LTC_FLOAT_1,i.rectAreaLTC2=kt.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=kt.LTC_HALF_1,i.rectAreaLTC2=kt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=f,i.ambient[2]=p;const T=i.hash;(T.directionalLength!==g||T.pointLength!==m||T.spotLength!==x||T.rectAreaLength!==v||T.hemiLength!==y||T.numDirectionalShadows!==b||T.numPointShadows!==w||T.numSpotShadows!==S||T.numSpotMaps!==C)&&(i.directional.length=g,i.spot.length=x,i.rectArea.length=v,i.point.length=m,i.hemi.length=y,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=S,i.spotShadowMap.length=S,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=w,i.spotLightMatrix.length=S+C-_,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=_,T.directionalLength=g,T.pointLength=m,T.spotLength=x,T.rectAreaLength=v,T.hemiLength=y,T.numDirectionalShadows=b,T.numPointShadows=w,T.numSpotShadows=S,T.numSpotMaps=C,i.version=HF++)}function c(u,h){let d=0,f=0,p=0,g=0,m=0;const x=h.matrixWorldInverse;for(let v=0,y=u.length;v<y;v++){const b=u[v];if(b.isDirectionalLight){const w=i.directional[d];w.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),d++}else if(b.isSpotLight){const w=i.spot[p];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),w.direction.setFromMatrixPosition(b.matrixWorld),r.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(r),w.direction.transformDirection(x),p++}else if(b.isRectAreaLight){const w=i.rectArea[g];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),a.identity(),o.copy(b.matrixWorld),o.premultiply(x),a.extractRotation(o),w.halfWidth.set(b.width*.5,0,0),w.halfHeight.set(0,b.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),g++}else if(b.isPointLight){const w=i.point[f];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(x),f++}else if(b.isHemisphereLight){const w=i.hemi[m];w.direction.setFromMatrixPosition(b.matrixWorld),w.direction.transformDirection(x),m++}}}return{setup:l,setupView:c,state:i}}function Sw(s,t){const e=new XF(s,t),n=[],i=[];function r(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){e.setup(n,h)}function c(h){e.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function jF(s,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let l;return a===void 0?(l=new Sw(s,t),e.set(r,[l])):o>=a.length?(l=new Sw(s,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class KF extends vo{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=aN,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class YF extends vo{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new K,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const ZF=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,JF=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function QF(s,t,e){let n=new jx;const i=new $t,r=new $t,o=new Vn,a=new KF({depthPacking:lN}),l=new YF,c={},u=e.maxTextureSize,h={0:di,1:Ll,2:si},d=new ma({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new $t},radius:{value:4}},vertexShader:ZF,fragmentShader:JF}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new Us;p.setAttribute("position",new cr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new rn(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=bS,this.render=function(b,w,S){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||b.length===0)return;const C=s.getRenderTarget(),_=s.getActiveCubeFace(),I=s.getActiveMipmapLevel(),T=s.state;T.setBlending(io),T.buffers.color.setClear(1,1,1,1),T.buffers.depth.setTest(!0),T.setScissorTest(!1);for(let N=0,P=b.length;N<P;N++){const E=b[N],M=E.shadow;if(M===void 0){console.warn("THREE.WebGLShadowMap:",E,"has no shadow.");continue}if(M.autoUpdate===!1&&M.needsUpdate===!1)continue;i.copy(M.mapSize);const A=M.getFrameExtents();if(i.multiply(A),r.copy(M.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/A.x),i.x=r.x*A.x,M.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/A.y),i.y=r.y*A.y,M.mapSize.y=r.y)),M.map===null){const V=this.type!==Oc?{minFilter:ws,magFilter:ws}:{};M.map=new fa(i.x,i.y,V),M.map.texture.name=E.name+".shadowMap",M.camera.updateProjectionMatrix()}s.setRenderTarget(M.map),s.clear();const R=M.getViewportCount();for(let V=0;V<R;V++){const L=M.getViewport(V);o.set(r.x*L.x,r.y*L.y,r.x*L.z,r.y*L.w),T.viewport(o),M.updateMatrices(E,V),n=M.getFrustum(),y(w,S,M.camera,E,this.type)}M.isPointLightShadow!==!0&&this.type===Oc&&x(M,S),M.needsUpdate=!1}m.needsUpdate=!1,s.setRenderTarget(C,_,I)};function x(b,w){const S=t.update(g);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,f.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new fa(i.x,i.y)),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,s.setRenderTarget(b.mapPass),s.clear(),s.renderBufferDirect(w,null,S,d,g,null),f.uniforms.shadow_pass.value=b.mapPass.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,s.setRenderTarget(b.map),s.clear(),s.renderBufferDirect(w,null,S,f,g,null)}function v(b,w,S,C,_,I){let T=null;const N=S.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(N!==void 0?T=N:T=S.isPointLight===!0?l:a,s.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const P=T.uuid,E=w.uuid;let M=c[P];M===void 0&&(M={},c[P]=M);let A=M[E];A===void 0&&(A=T.clone(),M[E]=A),T=A}return T.visible=w.visible,T.wireframe=w.wireframe,I===Oc?T.side=w.shadowSide!==null?w.shadowSide:w.side:T.side=w.shadowSide!==null?w.shadowSide:h[w.side],T.alphaMap=w.alphaMap,T.alphaTest=w.alphaTest,T.clipShadows=w.clipShadows,T.clippingPlanes=w.clippingPlanes,T.clipIntersection=w.clipIntersection,T.displacementMap=w.displacementMap,T.displacementScale=w.displacementScale,T.displacementBias=w.displacementBias,T.wireframeLinewidth=w.wireframeLinewidth,T.linewidth=w.linewidth,S.isPointLight===!0&&T.isMeshDistanceMaterial===!0&&(T.referencePosition.setFromMatrixPosition(S.matrixWorld),T.nearDistance=C,T.farDistance=_),T}function y(b,w,S,C,_){if(b.visible===!1)return;if(b.layers.test(w.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&_===Oc)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(S.matrixWorldInverse,b.matrixWorld);const N=t.update(b),P=b.material;if(Array.isArray(P)){const E=N.groups;for(let M=0,A=E.length;M<A;M++){const R=E[M],V=P[R.materialIndex];if(V&&V.visible){const L=v(b,V,C,S.near,S.far,_);s.renderBufferDirect(S,null,N,L,b,R)}}}else if(P.visible){const E=v(b,P,C,S.near,S.far,_);s.renderBufferDirect(S,null,N,E,b,null)}}const T=b.children;for(let N=0,P=T.length;N<P;N++)y(T[N],w,S,C,_)}}function tL(s,t,e){const n=e.isWebGL2;function i(){let tt=!1;const pt=new Vn;let It=null;const Pt=new Vn(0,0,0,0);return{setMask:function(Qt){It!==Qt&&!tt&&(s.colorMask(Qt,Qt,Qt,Qt),It=Qt)},setLocked:function(Qt){tt=Qt},setClear:function(Qt,$e,zn,es,Ro){Ro===!0&&(Qt*=es,$e*=es,zn*=es),pt.set(Qt,$e,zn,es),Pt.equals(pt)===!1&&(s.clearColor(Qt,$e,zn,es),Pt.copy(pt))},reset:function(){tt=!1,It=null,Pt.set(-1,0,0,0)}}}function r(){let tt=!1,pt=null,It=null,Pt=null;return{setTest:function(Qt){Qt?vt(2929):mt(2929)},setMask:function(Qt){pt!==Qt&&!tt&&(s.depthMask(Qt),pt=Qt)},setFunc:function(Qt){if(It!==Qt){switch(Qt){case NA:s.depthFunc(512);break;case RA:s.depthFunc(519);break;case $A:s.depthFunc(513);break;case Ug:s.depthFunc(515);break;case DA:s.depthFunc(514);break;case FA:s.depthFunc(518);break;case LA:s.depthFunc(516);break;case PA:s.depthFunc(517);break;default:s.depthFunc(515)}It=Qt}},setLocked:function(Qt){tt=Qt},setClear:function(Qt){Pt!==Qt&&(s.clearDepth(Qt),Pt=Qt)},reset:function(){tt=!1,pt=null,It=null,Pt=null}}}function o(){let tt=!1,pt=null,It=null,Pt=null,Qt=null,$e=null,zn=null,es=null,Ro=null;return{setTest:function(Qe){tt||(Qe?vt(2960):mt(2960))},setMask:function(Qe){pt!==Qe&&!tt&&(s.stencilMask(Qe),pt=Qe)},setFunc:function(Qe,br,Hs){(It!==Qe||Pt!==br||Qt!==Hs)&&(s.stencilFunc(Qe,br,Hs),It=Qe,Pt=br,Qt=Hs)},setOp:function(Qe,br,Hs){($e!==Qe||zn!==br||es!==Hs)&&(s.stencilOp(Qe,br,Hs),$e=Qe,zn=br,es=Hs)},setLocked:function(Qe){tt=Qe},setClear:function(Qe){Ro!==Qe&&(s.clearStencil(Qe),Ro=Qe)},reset:function(){tt=!1,pt=null,It=null,Pt=null,Qt=null,$e=null,zn=null,es=null,Ro=null}}}const a=new i,l=new r,c=new o,u=new WeakMap,h=new WeakMap;let d={},f={},p=new WeakMap,g=[],m=null,x=!1,v=null,y=null,b=null,w=null,S=null,C=null,_=null,I=!1,T=null,N=null,P=null,E=null,M=null;const A=s.getParameter(35661);let R=!1,V=0;const L=s.getParameter(7938);L.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL (\d)/.exec(L)[1]),R=V>=1):L.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]),R=V>=2);let $=null,U={};const H=s.getParameter(3088),W=s.getParameter(2978),Z=new Vn().fromArray(H),it=new Vn().fromArray(W);function lt(tt,pt,It){const Pt=new Uint8Array(4),Qt=s.createTexture();s.bindTexture(tt,Qt),s.texParameteri(tt,10241,9728),s.texParameteri(tt,10240,9728);for(let $e=0;$e<It;$e++)s.texImage2D(pt+$e,0,6408,1,1,0,6408,5121,Pt);return Qt}const J={};J[3553]=lt(3553,3553,1),J[34067]=lt(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),vt(2929),l.setFunc(Ug),se(!1),ye(fy),vt(2884),ne(io);function vt(tt){d[tt]!==!0&&(s.enable(tt),d[tt]=!0)}function mt(tt){d[tt]!==!1&&(s.disable(tt),d[tt]=!1)}function xt(tt,pt){return f[tt]!==pt?(s.bindFramebuffer(tt,pt),f[tt]=pt,n&&(tt===36009&&(f[36160]=pt),tt===36160&&(f[36009]=pt)),!0):!1}function dt(tt,pt){let It=g,Pt=!1;if(tt)if(It=p.get(pt),It===void 0&&(It=[],p.set(pt,It)),tt.isWebGLMultipleRenderTargets){const Qt=tt.texture;if(It.length!==Qt.length||It[0]!==36064){for(let $e=0,zn=Qt.length;$e<zn;$e++)It[$e]=36064+$e;It.length=Qt.length,Pt=!0}}else It[0]!==36064&&(It[0]=36064,Pt=!0);else It[0]!==1029&&(It[0]=1029,Pt=!0);Pt&&(e.isWebGL2?s.drawBuffers(It):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(It))}function rt(tt){return m!==tt?(s.useProgram(tt),m=tt,!0):!1}const yt={[xl]:32774,[yA]:32778,[wA]:32779};if(n)yt[xy]=32775,yt[vy]=32776;else{const tt=t.get("EXT_blend_minmax");tt!==null&&(yt[xy]=tt.MIN_EXT,yt[vy]=tt.MAX_EXT)}const Tt={[_A]:0,[SA]:1,[CA]:768,[wS]:770,[AA]:776,[MA]:774,[TA]:772,[IA]:769,[_S]:771,[kA]:775,[EA]:773};function ne(tt,pt,It,Pt,Qt,$e,zn,es){if(tt===io){x===!0&&(mt(3042),x=!1);return}if(x===!1&&(vt(3042),x=!0),tt!==bA){if(tt!==v||es!==I){if((y!==xl||S!==xl)&&(s.blendEquation(32774),y=xl,S=xl),es)switch(tt){case El:s.blendFuncSeparate(1,771,1,771);break;case py:s.blendFunc(1,1);break;case my:s.blendFuncSeparate(0,769,0,1);break;case gy:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",tt);break}else switch(tt){case El:s.blendFuncSeparate(770,771,1,771);break;case py:s.blendFunc(770,1);break;case my:s.blendFuncSeparate(0,769,0,1);break;case gy:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",tt);break}b=null,w=null,C=null,_=null,v=tt,I=es}return}Qt=Qt||pt,$e=$e||It,zn=zn||Pt,(pt!==y||Qt!==S)&&(s.blendEquationSeparate(yt[pt],yt[Qt]),y=pt,S=Qt),(It!==b||Pt!==w||$e!==C||zn!==_)&&(s.blendFuncSeparate(Tt[It],Tt[Pt],Tt[$e],Tt[zn]),b=It,w=Pt,C=$e,_=zn),v=tt,I=null}function re(tt,pt){tt.side===si?mt(2884):vt(2884);let It=tt.side===di;pt&&(It=!It),se(It),tt.blending===El&&tt.transparent===!1?ne(io):ne(tt.blending,tt.blendEquation,tt.blendSrc,tt.blendDst,tt.blendEquationAlpha,tt.blendSrcAlpha,tt.blendDstAlpha,tt.premultipliedAlpha),l.setFunc(tt.depthFunc),l.setTest(tt.depthTest),l.setMask(tt.depthWrite),a.setMask(tt.colorWrite);const Pt=tt.stencilWrite;c.setTest(Pt),Pt&&(c.setMask(tt.stencilWriteMask),c.setFunc(tt.stencilFunc,tt.stencilRef,tt.stencilFuncMask),c.setOp(tt.stencilFail,tt.stencilZFail,tt.stencilZPass)),me(tt.polygonOffset,tt.polygonOffsetFactor,tt.polygonOffsetUnits),tt.alphaToCoverage===!0?vt(32926):mt(32926)}function se(tt){T!==tt&&(tt?s.frontFace(2304):s.frontFace(2305),T=tt)}function ye(tt){tt!==xA?(vt(2884),tt!==N&&(tt===fy?s.cullFace(1029):tt===vA?s.cullFace(1028):s.cullFace(1032))):mt(2884),N=tt}function ue(tt){tt!==P&&(R&&s.lineWidth(tt),P=tt)}function me(tt,pt,It){tt?(vt(32823),(E!==pt||M!==It)&&(s.polygonOffset(pt,It),E=pt,M=It)):mt(32823)}function Ne(tt){tt?vt(3089):mt(3089)}function pn(tt){tt===void 0&&(tt=33984+A-1),$!==tt&&(s.activeTexture(tt),$=tt)}function B(tt,pt,It){It===void 0&&($===null?It=33984+A-1:It=$);let Pt=U[It];Pt===void 0&&(Pt={type:void 0,texture:void 0},U[It]=Pt),(Pt.type!==tt||Pt.texture!==pt)&&($!==It&&(s.activeTexture(It),$=It),s.bindTexture(tt,pt||J[tt]),Pt.type=tt,Pt.texture=pt)}function F(){const tt=U[$];tt!==void 0&&tt.type!==void 0&&(s.bindTexture(tt.type,null),tt.type=void 0,tt.texture=void 0)}function ut(){try{s.compressedTexImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function St(){try{s.compressedTexImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Ct(){try{s.texSubImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Mt(){try{s.texSubImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Jt(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function G(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function et(){try{s.texStorage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Dt(){try{s.texStorage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Lt(){try{s.texImage2D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Rt(){try{s.texImage3D.apply(s,arguments)}catch(tt){console.error("THREE.WebGLState:",tt)}}function Kt(tt){Z.equals(tt)===!1&&(s.scissor(tt.x,tt.y,tt.z,tt.w),Z.copy(tt))}function Xt(tt){it.equals(tt)===!1&&(s.viewport(tt.x,tt.y,tt.z,tt.w),it.copy(tt))}function Se(tt,pt){let It=h.get(pt);It===void 0&&(It=new WeakMap,h.set(pt,It));let Pt=It.get(tt);Pt===void 0&&(Pt=s.getUniformBlockIndex(pt,tt.name),It.set(tt,Pt))}function Te(tt,pt){const Pt=h.get(pt).get(tt);u.get(tt)!==Pt&&(s.uniformBlockBinding(pt,Pt,tt.__bindingPointIndex),u.set(tt,Pt))}function ze(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},$=null,U={},f={},p=new WeakMap,g=[],m=null,x=!1,v=null,y=null,b=null,w=null,S=null,C=null,_=null,I=!1,T=null,N=null,P=null,E=null,M=null,Z.set(0,0,s.canvas.width,s.canvas.height),it.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:vt,disable:mt,bindFramebuffer:xt,drawBuffers:dt,useProgram:rt,setBlending:ne,setMaterial:re,setFlipSided:se,setCullFace:ye,setLineWidth:ue,setPolygonOffset:me,setScissorTest:Ne,activeTexture:pn,bindTexture:B,unbindTexture:F,compressedTexImage2D:ut,compressedTexImage3D:St,texImage2D:Lt,texImage3D:Rt,updateUBOMapping:Se,uniformBlockBinding:Te,texStorage2D:et,texStorage3D:Dt,texSubImage2D:Ct,texSubImage3D:Mt,compressedTexSubImage2D:Jt,compressedTexSubImage3D:G,scissor:Kt,viewport:Xt,reset:ze}}function eL(s,t,e,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f=/OculusBrowser/g.test(typeof navigator>"u"?"":navigator.userAgent),p=new WeakMap;let g;const m=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(B,F){return x?new OffscreenCanvas(B,F):Qd("canvas")}function y(B,F,ut,St){let Ct=1;if((B.width>St||B.height>St)&&(Ct=St/Math.max(B.width,B.height)),Ct<1||F===!0)if(typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&B instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&B instanceof ImageBitmap){const Mt=F?Xg:Math.floor,Jt=Mt(Ct*B.width),G=Mt(Ct*B.height);g===void 0&&(g=v(Jt,G));const et=ut?v(Jt,G):g;return et.width=Jt,et.height=G,et.getContext("2d").drawImage(B,0,0,Jt,G),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+B.width+"x"+B.height+") to ("+Jt+"x"+G+")."),et}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+B.width+"x"+B.height+")."),B;return B}function b(B){return Hy(B.width)&&Hy(B.height)}function w(B){return a?!1:B.wrapS!==Ni||B.wrapT!==Ni||B.minFilter!==ws&&B.minFilter!==ti}function S(B,F){return B.generateMipmaps&&F&&B.minFilter!==ws&&B.minFilter!==ti}function C(B){s.generateMipmap(B)}function _(B,F,ut,St,Ct=!1){if(a===!1)return F;if(B!==null){if(s[B]!==void 0)return s[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let Mt=F;return F===6403&&(ut===5126&&(Mt=33326),ut===5131&&(Mt=33325),ut===5121&&(Mt=33321)),F===33319&&(ut===5126&&(Mt=33328),ut===5131&&(Mt=33327),ut===5121&&(Mt=33323)),F===6408&&(ut===5126&&(Mt=34836),ut===5131&&(Mt=34842),ut===5121&&(Mt=St===ln&&Ct===!1?35907:32856),ut===32819&&(Mt=32854),ut===32820&&(Mt=32855)),(Mt===33325||Mt===33326||Mt===33327||Mt===33328||Mt===34842||Mt===34836)&&t.get("EXT_color_buffer_float"),Mt}function I(B,F,ut){return S(B,ut)===!0||B.isFramebufferTexture&&B.minFilter!==ws&&B.minFilter!==ti?Math.log2(Math.max(F.width,F.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?F.mipmaps.length:1}function T(B){return B===ws||B===by||B===yy?9728:9729}function N(B){const F=B.target;F.removeEventListener("dispose",N),E(F),F.isVideoTexture&&p.delete(F)}function P(B){const F=B.target;F.removeEventListener("dispose",P),A(F)}function E(B){const F=n.get(B);if(F.__webglInit===void 0)return;const ut=B.source,St=m.get(ut);if(St){const Ct=St[F.__cacheKey];Ct.usedTimes--,Ct.usedTimes===0&&M(B),Object.keys(St).length===0&&m.delete(ut)}n.remove(B)}function M(B){const F=n.get(B);s.deleteTexture(F.__webglTexture);const ut=B.source,St=m.get(ut);delete St[F.__cacheKey],o.memory.textures--}function A(B){const F=B.texture,ut=n.get(B),St=n.get(F);if(St.__webglTexture!==void 0&&(s.deleteTexture(St.__webglTexture),o.memory.textures--),B.depthTexture&&B.depthTexture.dispose(),B.isWebGLCubeRenderTarget)for(let Ct=0;Ct<6;Ct++)s.deleteFramebuffer(ut.__webglFramebuffer[Ct]),ut.__webglDepthbuffer&&s.deleteRenderbuffer(ut.__webglDepthbuffer[Ct]);else{if(s.deleteFramebuffer(ut.__webglFramebuffer),ut.__webglDepthbuffer&&s.deleteRenderbuffer(ut.__webglDepthbuffer),ut.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ut.__webglMultisampledFramebuffer),ut.__webglColorRenderbuffer)for(let Ct=0;Ct<ut.__webglColorRenderbuffer.length;Ct++)ut.__webglColorRenderbuffer[Ct]&&s.deleteRenderbuffer(ut.__webglColorRenderbuffer[Ct]);ut.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ut.__webglDepthRenderbuffer)}if(B.isWebGLMultipleRenderTargets)for(let Ct=0,Mt=F.length;Ct<Mt;Ct++){const Jt=n.get(F[Ct]);Jt.__webglTexture&&(s.deleteTexture(Jt.__webglTexture),o.memory.textures--),n.remove(F[Ct])}n.remove(F),n.remove(B)}let R=0;function V(){R=0}function L(){const B=R;return B>=l&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+l),R+=1,B}function $(B){const F=[];return F.push(B.wrapS),F.push(B.wrapT),F.push(B.wrapR||0),F.push(B.magFilter),F.push(B.minFilter),F.push(B.anisotropy),F.push(B.internalFormat),F.push(B.format),F.push(B.type),F.push(B.generateMipmaps),F.push(B.premultiplyAlpha),F.push(B.flipY),F.push(B.unpackAlignment),F.push(B.encoding),F.join()}function U(B,F){const ut=n.get(B);if(B.isVideoTexture&&Ne(B),B.isRenderTargetTexture===!1&&B.version>0&&ut.__version!==B.version){const St=B.image;if(St===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(St.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{mt(ut,B,F);return}}e.bindTexture(3553,ut.__webglTexture,33984+F)}function H(B,F){const ut=n.get(B);if(B.version>0&&ut.__version!==B.version){mt(ut,B,F);return}e.bindTexture(35866,ut.__webglTexture,33984+F)}function W(B,F){const ut=n.get(B);if(B.version>0&&ut.__version!==B.version){mt(ut,B,F);return}e.bindTexture(32879,ut.__webglTexture,33984+F)}function Z(B,F){const ut=n.get(B);if(B.version>0&&ut.__version!==B.version){xt(ut,B,F);return}e.bindTexture(34067,ut.__webglTexture,33984+F)}const it={[Gg]:10497,[Ni]:33071,[Hg]:33648},lt={[ws]:9728,[by]:9984,[yy]:9986,[ti]:9729,[HA]:9985,[Lf]:9987};function J(B,F,ut){if(ut?(s.texParameteri(B,10242,it[F.wrapS]),s.texParameteri(B,10243,it[F.wrapT]),(B===32879||B===35866)&&s.texParameteri(B,32882,it[F.wrapR]),s.texParameteri(B,10240,lt[F.magFilter]),s.texParameteri(B,10241,lt[F.minFilter])):(s.texParameteri(B,10242,33071),s.texParameteri(B,10243,33071),(B===32879||B===35866)&&s.texParameteri(B,32882,33071),(F.wrapS!==Ni||F.wrapT!==Ni)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(B,10240,T(F.magFilter)),s.texParameteri(B,10241,T(F.minFilter)),F.minFilter!==ws&&F.minFilter!==ti&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){const St=t.get("EXT_texture_filter_anisotropic");if(F.type===Jo&&t.has("OES_texture_float_linear")===!1||a===!1&&F.type===eu&&t.has("OES_texture_half_float_linear")===!1)return;(F.anisotropy>1||n.get(F).__currentAnisotropy)&&(s.texParameterf(B,St.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(F.anisotropy,i.getMaxAnisotropy())),n.get(F).__currentAnisotropy=F.anisotropy)}}function vt(B,F){let ut=!1;B.__webglInit===void 0&&(B.__webglInit=!0,F.addEventListener("dispose",N));const St=F.source;let Ct=m.get(St);Ct===void 0&&(Ct={},m.set(St,Ct));const Mt=$(F);if(Mt!==B.__cacheKey){Ct[Mt]===void 0&&(Ct[Mt]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,ut=!0),Ct[Mt].usedTimes++;const Jt=Ct[B.__cacheKey];Jt!==void 0&&(Ct[B.__cacheKey].usedTimes--,Jt.usedTimes===0&&M(F)),B.__cacheKey=Mt,B.__webglTexture=Ct[Mt].texture}return ut}function mt(B,F,ut){let St=3553;(F.isDataArrayTexture||F.isCompressedArrayTexture)&&(St=35866),F.isData3DTexture&&(St=32879);const Ct=vt(B,F),Mt=F.source;e.bindTexture(St,B.__webglTexture,33984+ut);const Jt=n.get(Mt);if(Mt.version!==Jt.__version||Ct===!0){e.activeTexture(33984+ut),s.pixelStorei(37440,F.flipY),s.pixelStorei(37441,F.premultiplyAlpha),s.pixelStorei(3317,F.unpackAlignment),s.pixelStorei(37443,0);const G=w(F)&&b(F.image)===!1;let et=y(F.image,G,!1,u);et=pn(F,et);const Dt=b(et)||a,Lt=r.convert(F.format,F.encoding);let Rt=r.convert(F.type),Kt=_(F.internalFormat,Lt,Rt,F.encoding,F.isVideoTexture);J(St,F,Dt);let Xt;const Se=F.mipmaps,Te=a&&F.isVideoTexture!==!0,ze=Jt.__version===void 0||Ct===!0,tt=I(F,et,Dt);if(F.isDepthTexture)Kt=6402,a?F.type===Jo?Kt=36012:F.type===Zo?Kt=33190:F.type===Ml?Kt=35056:Kt=33189:F.type===Jo&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),F.format===ra&&Kt===6402&&F.type!==CS&&F.type!==Zo&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),F.type=Zo,Rt=r.convert(F.type)),F.format===zl&&Kt===6402&&(Kt=34041,F.type!==Ml&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),F.type=Ml,Rt=r.convert(F.type))),ze&&(Te?e.texStorage2D(3553,1,Kt,et.width,et.height):e.texImage2D(3553,0,Kt,et.width,et.height,0,Lt,Rt,null));else if(F.isDataTexture)if(Se.length>0&&Dt){Te&&ze&&e.texStorage2D(3553,tt,Kt,Se[0].width,Se[0].height);for(let pt=0,It=Se.length;pt<It;pt++)Xt=Se[pt],Te?e.texSubImage2D(3553,pt,0,0,Xt.width,Xt.height,Lt,Rt,Xt.data):e.texImage2D(3553,pt,Kt,Xt.width,Xt.height,0,Lt,Rt,Xt.data);F.generateMipmaps=!1}else Te?(ze&&e.texStorage2D(3553,tt,Kt,et.width,et.height),e.texSubImage2D(3553,0,0,0,et.width,et.height,Lt,Rt,et.data)):e.texImage2D(3553,0,Kt,et.width,et.height,0,Lt,Rt,et.data);else if(F.isCompressedTexture)if(F.isCompressedArrayTexture){Te&&ze&&e.texStorage3D(35866,tt,Kt,Se[0].width,Se[0].height,et.depth);for(let pt=0,It=Se.length;pt<It;pt++)Xt=Se[pt],F.format!==Ri?Lt!==null?Te?e.compressedTexSubImage3D(35866,pt,0,0,0,Xt.width,Xt.height,et.depth,Lt,Xt.data,0,0):e.compressedTexImage3D(35866,pt,Kt,Xt.width,Xt.height,et.depth,0,Xt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Te?e.texSubImage3D(35866,pt,0,0,0,Xt.width,Xt.height,et.depth,Lt,Rt,Xt.data):e.texImage3D(35866,pt,Kt,Xt.width,Xt.height,et.depth,0,Lt,Rt,Xt.data)}else{Te&&ze&&e.texStorage2D(3553,tt,Kt,Se[0].width,Se[0].height);for(let pt=0,It=Se.length;pt<It;pt++)Xt=Se[pt],F.format!==Ri?Lt!==null?Te?e.compressedTexSubImage2D(3553,pt,0,0,Xt.width,Xt.height,Lt,Xt.data):e.compressedTexImage2D(3553,pt,Kt,Xt.width,Xt.height,0,Xt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Te?e.texSubImage2D(3553,pt,0,0,Xt.width,Xt.height,Lt,Rt,Xt.data):e.texImage2D(3553,pt,Kt,Xt.width,Xt.height,0,Lt,Rt,Xt.data)}else if(F.isDataArrayTexture)Te?(ze&&e.texStorage3D(35866,tt,Kt,et.width,et.height,et.depth),e.texSubImage3D(35866,0,0,0,0,et.width,et.height,et.depth,Lt,Rt,et.data)):e.texImage3D(35866,0,Kt,et.width,et.height,et.depth,0,Lt,Rt,et.data);else if(F.isData3DTexture)Te?(ze&&e.texStorage3D(32879,tt,Kt,et.width,et.height,et.depth),e.texSubImage3D(32879,0,0,0,0,et.width,et.height,et.depth,Lt,Rt,et.data)):e.texImage3D(32879,0,Kt,et.width,et.height,et.depth,0,Lt,Rt,et.data);else if(F.isFramebufferTexture){if(ze)if(Te)e.texStorage2D(3553,tt,Kt,et.width,et.height);else{let pt=et.width,It=et.height;for(let Pt=0;Pt<tt;Pt++)e.texImage2D(3553,Pt,Kt,pt,It,0,Lt,Rt,null),pt>>=1,It>>=1}}else if(Se.length>0&&Dt){Te&&ze&&e.texStorage2D(3553,tt,Kt,Se[0].width,Se[0].height);for(let pt=0,It=Se.length;pt<It;pt++)Xt=Se[pt],Te?e.texSubImage2D(3553,pt,0,0,Lt,Rt,Xt):e.texImage2D(3553,pt,Kt,Lt,Rt,Xt);F.generateMipmaps=!1}else Te?(ze&&e.texStorage2D(3553,tt,Kt,et.width,et.height),e.texSubImage2D(3553,0,0,0,Lt,Rt,et)):e.texImage2D(3553,0,Kt,Lt,Rt,et);S(F,Dt)&&C(St),Jt.__version=Mt.version,F.onUpdate&&F.onUpdate(F)}B.__version=F.version}function xt(B,F,ut){if(F.image.length!==6)return;const St=vt(B,F),Ct=F.source;e.bindTexture(34067,B.__webglTexture,33984+ut);const Mt=n.get(Ct);if(Ct.version!==Mt.__version||St===!0){e.activeTexture(33984+ut),s.pixelStorei(37440,F.flipY),s.pixelStorei(37441,F.premultiplyAlpha),s.pixelStorei(3317,F.unpackAlignment),s.pixelStorei(37443,0);const Jt=F.isCompressedTexture||F.image[0].isCompressedTexture,G=F.image[0]&&F.image[0].isDataTexture,et=[];for(let pt=0;pt<6;pt++)!Jt&&!G?et[pt]=y(F.image[pt],!1,!0,c):et[pt]=G?F.image[pt].image:F.image[pt],et[pt]=pn(F,et[pt]);const Dt=et[0],Lt=b(Dt)||a,Rt=r.convert(F.format,F.encoding),Kt=r.convert(F.type),Xt=_(F.internalFormat,Rt,Kt,F.encoding),Se=a&&F.isVideoTexture!==!0,Te=Mt.__version===void 0||St===!0;let ze=I(F,Dt,Lt);J(34067,F,Lt);let tt;if(Jt){Se&&Te&&e.texStorage2D(34067,ze,Xt,Dt.width,Dt.height);for(let pt=0;pt<6;pt++){tt=et[pt].mipmaps;for(let It=0;It<tt.length;It++){const Pt=tt[It];F.format!==Ri?Rt!==null?Se?e.compressedTexSubImage2D(34069+pt,It,0,0,Pt.width,Pt.height,Rt,Pt.data):e.compressedTexImage2D(34069+pt,It,Xt,Pt.width,Pt.height,0,Pt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Se?e.texSubImage2D(34069+pt,It,0,0,Pt.width,Pt.height,Rt,Kt,Pt.data):e.texImage2D(34069+pt,It,Xt,Pt.width,Pt.height,0,Rt,Kt,Pt.data)}}}else{tt=F.mipmaps,Se&&Te&&(tt.length>0&&ze++,e.texStorage2D(34067,ze,Xt,et[0].width,et[0].height));for(let pt=0;pt<6;pt++)if(G){Se?e.texSubImage2D(34069+pt,0,0,0,et[pt].width,et[pt].height,Rt,Kt,et[pt].data):e.texImage2D(34069+pt,0,Xt,et[pt].width,et[pt].height,0,Rt,Kt,et[pt].data);for(let It=0;It<tt.length;It++){const Qt=tt[It].image[pt].image;Se?e.texSubImage2D(34069+pt,It+1,0,0,Qt.width,Qt.height,Rt,Kt,Qt.data):e.texImage2D(34069+pt,It+1,Xt,Qt.width,Qt.height,0,Rt,Kt,Qt.data)}}else{Se?e.texSubImage2D(34069+pt,0,0,0,Rt,Kt,et[pt]):e.texImage2D(34069+pt,0,Xt,Rt,Kt,et[pt]);for(let It=0;It<tt.length;It++){const Pt=tt[It];Se?e.texSubImage2D(34069+pt,It+1,0,0,Rt,Kt,Pt.image[pt]):e.texImage2D(34069+pt,It+1,Xt,Rt,Kt,Pt.image[pt])}}}S(F,Lt)&&C(34067),Mt.__version=Ct.version,F.onUpdate&&F.onUpdate(F)}B.__version=F.version}function dt(B,F,ut,St,Ct){const Mt=r.convert(ut.format,ut.encoding),Jt=r.convert(ut.type),G=_(ut.internalFormat,Mt,Jt,ut.encoding);n.get(F).__hasExternalTextures||(Ct===32879||Ct===35866?e.texImage3D(Ct,0,G,F.width,F.height,F.depth,0,Mt,Jt,null):e.texImage2D(Ct,0,G,F.width,F.height,0,Mt,Jt,null)),e.bindFramebuffer(36160,B),me(F)?d.framebufferTexture2DMultisampleEXT(36160,St,Ct,n.get(ut).__webglTexture,0,ue(F)):(Ct===3553||Ct>=34069&&Ct<=34074)&&s.framebufferTexture2D(36160,St,Ct,n.get(ut).__webglTexture,0),e.bindFramebuffer(36160,null)}function rt(B,F,ut){if(s.bindRenderbuffer(36161,B),F.depthBuffer&&!F.stencilBuffer){let St=33189;if(ut||me(F)){const Ct=F.depthTexture;Ct&&Ct.isDepthTexture&&(Ct.type===Jo?St=36012:Ct.type===Zo&&(St=33190));const Mt=ue(F);me(F)?d.renderbufferStorageMultisampleEXT(36161,Mt,St,F.width,F.height):s.renderbufferStorageMultisample(36161,Mt,St,F.width,F.height)}else s.renderbufferStorage(36161,St,F.width,F.height);s.framebufferRenderbuffer(36160,36096,36161,B)}else if(F.depthBuffer&&F.stencilBuffer){const St=ue(F);ut&&me(F)===!1?s.renderbufferStorageMultisample(36161,St,35056,F.width,F.height):me(F)?d.renderbufferStorageMultisampleEXT(36161,St,35056,F.width,F.height):s.renderbufferStorage(36161,34041,F.width,F.height),s.framebufferRenderbuffer(36160,33306,36161,B)}else{const St=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let Ct=0;Ct<St.length;Ct++){const Mt=St[Ct],Jt=r.convert(Mt.format,Mt.encoding),G=r.convert(Mt.type),et=_(Mt.internalFormat,Jt,G,Mt.encoding),Dt=ue(F);ut&&me(F)===!1?s.renderbufferStorageMultisample(36161,Dt,et,F.width,F.height):me(F)?d.renderbufferStorageMultisampleEXT(36161,Dt,et,F.width,F.height):s.renderbufferStorage(36161,et,F.width,F.height)}}s.bindRenderbuffer(36161,null)}function yt(B,F){if(F&&F.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,B),!(F.depthTexture&&F.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(F.depthTexture).__webglTexture||F.depthTexture.image.width!==F.width||F.depthTexture.image.height!==F.height)&&(F.depthTexture.image.width=F.width,F.depthTexture.image.height=F.height,F.depthTexture.needsUpdate=!0),U(F.depthTexture,0);const St=n.get(F.depthTexture).__webglTexture,Ct=ue(F);if(F.depthTexture.format===ra)me(F)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,St,0,Ct):s.framebufferTexture2D(36160,36096,3553,St,0);else if(F.depthTexture.format===zl)me(F)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,St,0,Ct):s.framebufferTexture2D(36160,33306,3553,St,0);else throw new Error("Unknown depthTexture format")}function Tt(B){const F=n.get(B),ut=B.isWebGLCubeRenderTarget===!0;if(B.depthTexture&&!F.__autoAllocateDepthBuffer){if(ut)throw new Error("target.depthTexture not supported in Cube render targets");yt(F.__webglFramebuffer,B)}else if(ut){F.__webglDepthbuffer=[];for(let St=0;St<6;St++)e.bindFramebuffer(36160,F.__webglFramebuffer[St]),F.__webglDepthbuffer[St]=s.createRenderbuffer(),rt(F.__webglDepthbuffer[St],B,!1)}else e.bindFramebuffer(36160,F.__webglFramebuffer),F.__webglDepthbuffer=s.createRenderbuffer(),rt(F.__webglDepthbuffer,B,!1);e.bindFramebuffer(36160,null)}function ne(B,F,ut){const St=n.get(B);F!==void 0&&dt(St.__webglFramebuffer,B,B.texture,36064,3553),ut!==void 0&&Tt(B)}function re(B){const F=B.texture,ut=n.get(B),St=n.get(F);B.addEventListener("dispose",P),B.isWebGLMultipleRenderTargets!==!0&&(St.__webglTexture===void 0&&(St.__webglTexture=s.createTexture()),St.__version=F.version,o.memory.textures++);const Ct=B.isWebGLCubeRenderTarget===!0,Mt=B.isWebGLMultipleRenderTargets===!0,Jt=b(B)||a;if(Ct){ut.__webglFramebuffer=[];for(let G=0;G<6;G++)ut.__webglFramebuffer[G]=s.createFramebuffer()}else{if(ut.__webglFramebuffer=s.createFramebuffer(),Mt)if(i.drawBuffers){const G=B.texture;for(let et=0,Dt=G.length;et<Dt;et++){const Lt=n.get(G[et]);Lt.__webglTexture===void 0&&(Lt.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&B.samples>0&&me(B)===!1){const G=Mt?F:[F];ut.__webglMultisampledFramebuffer=s.createFramebuffer(),ut.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,ut.__webglMultisampledFramebuffer);for(let et=0;et<G.length;et++){const Dt=G[et];ut.__webglColorRenderbuffer[et]=s.createRenderbuffer(),s.bindRenderbuffer(36161,ut.__webglColorRenderbuffer[et]);const Lt=r.convert(Dt.format,Dt.encoding),Rt=r.convert(Dt.type),Kt=_(Dt.internalFormat,Lt,Rt,Dt.encoding,B.isXRRenderTarget===!0),Xt=ue(B);s.renderbufferStorageMultisample(36161,Xt,Kt,B.width,B.height),s.framebufferRenderbuffer(36160,36064+et,36161,ut.__webglColorRenderbuffer[et])}s.bindRenderbuffer(36161,null),B.depthBuffer&&(ut.__webglDepthRenderbuffer=s.createRenderbuffer(),rt(ut.__webglDepthRenderbuffer,B,!0)),e.bindFramebuffer(36160,null)}}if(Ct){e.bindTexture(34067,St.__webglTexture),J(34067,F,Jt);for(let G=0;G<6;G++)dt(ut.__webglFramebuffer[G],B,F,36064,34069+G);S(F,Jt)&&C(34067),e.unbindTexture()}else if(Mt){const G=B.texture;for(let et=0,Dt=G.length;et<Dt;et++){const Lt=G[et],Rt=n.get(Lt);e.bindTexture(3553,Rt.__webglTexture),J(3553,Lt,Jt),dt(ut.__webglFramebuffer,B,Lt,36064+et,3553),S(Lt,Jt)&&C(3553)}e.unbindTexture()}else{let G=3553;(B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(a?G=B.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(G,St.__webglTexture),J(G,F,Jt),dt(ut.__webglFramebuffer,B,F,36064,G),S(F,Jt)&&C(G),e.unbindTexture()}B.depthBuffer&&Tt(B)}function se(B){const F=b(B)||a,ut=B.isWebGLMultipleRenderTargets===!0?B.texture:[B.texture];for(let St=0,Ct=ut.length;St<Ct;St++){const Mt=ut[St];if(S(Mt,F)){const Jt=B.isWebGLCubeRenderTarget?34067:3553,G=n.get(Mt).__webglTexture;e.bindTexture(Jt,G),C(Jt),e.unbindTexture()}}}function ye(B){if(a&&B.samples>0&&me(B)===!1){const F=B.isWebGLMultipleRenderTargets?B.texture:[B.texture],ut=B.width,St=B.height;let Ct=16384;const Mt=[],Jt=B.stencilBuffer?33306:36096,G=n.get(B),et=B.isWebGLMultipleRenderTargets===!0;if(et)for(let Dt=0;Dt<F.length;Dt++)e.bindFramebuffer(36160,G.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Dt,36161,null),e.bindFramebuffer(36160,G.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Dt,3553,null,0);e.bindFramebuffer(36008,G.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,G.__webglFramebuffer);for(let Dt=0;Dt<F.length;Dt++){Mt.push(36064+Dt),B.depthBuffer&&Mt.push(Jt);const Lt=G.__ignoreDepthValues!==void 0?G.__ignoreDepthValues:!1;if(Lt===!1&&(B.depthBuffer&&(Ct|=256),B.stencilBuffer&&(Ct|=1024)),et&&s.framebufferRenderbuffer(36008,36064,36161,G.__webglColorRenderbuffer[Dt]),Lt===!0&&(s.invalidateFramebuffer(36008,[Jt]),s.invalidateFramebuffer(36009,[Jt])),et){const Rt=n.get(F[Dt]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,Rt,0)}s.blitFramebuffer(0,0,ut,St,0,0,ut,St,Ct,9728),f&&s.invalidateFramebuffer(36008,Mt)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),et)for(let Dt=0;Dt<F.length;Dt++){e.bindFramebuffer(36160,G.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+Dt,36161,G.__webglColorRenderbuffer[Dt]);const Lt=n.get(F[Dt]).__webglTexture;e.bindFramebuffer(36160,G.__webglFramebuffer),s.framebufferTexture2D(36009,36064+Dt,3553,Lt,0)}e.bindFramebuffer(36009,G.__webglMultisampledFramebuffer)}}function ue(B){return Math.min(h,B.samples)}function me(B){const F=n.get(B);return a&&B.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&F.__useRenderToTexture!==!1}function Ne(B){const F=o.render.frame;p.get(B)!==F&&(p.set(B,F),B.update())}function pn(B,F){const ut=B.encoding,St=B.format,Ct=B.type;return B.isCompressedTexture===!0||B.isVideoTexture===!0||B.format===qg||ut!==da&&(ut===ln?a===!1?t.has("EXT_sRGB")===!0&&St===Ri?(B.format=qg,B.minFilter=ti,B.generateMipmaps=!1):F=ES.sRGBToLinear(F):(St!==Ri||Ct!==ha)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ut)),F}this.allocateTextureUnit=L,this.resetTextureUnits=V,this.setTexture2D=U,this.setTexture2DArray=H,this.setTexture3D=W,this.setTextureCube=Z,this.rebindTextures=ne,this.setupRenderTarget=re,this.updateRenderTargetMipmap=se,this.updateMultisampleRenderTarget=ye,this.setupDepthRenderbuffer=Tt,this.setupFrameBufferTexture=dt,this.useMultisampledRTT=me}function nL(s,t,e){const n=e.isWebGL2;function i(r,o=null){let a;if(r===ha)return 5121;if(r===KA)return 32819;if(r===YA)return 32820;if(r===qA)return 5120;if(r===XA)return 5122;if(r===CS)return 5123;if(r===jA)return 5124;if(r===Zo)return 5125;if(r===Jo)return 5126;if(r===eu)return n?5131:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===ZA)return 6406;if(r===Ri)return 6408;if(r===QA)return 6409;if(r===tN)return 6410;if(r===ra)return 6402;if(r===zl)return 34041;if(r===eN)return 6403;if(r===JA)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===qg)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===nN)return 36244;if(r===sN)return 33319;if(r===iN)return 33320;if(r===rN)return 36249;if(r===Am||r===Nm||r===Rm||r===$m)if(o===ln)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===Am)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Nm)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Rm)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===$m)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===Am)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Nm)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Rm)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===$m)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===wy||r===_y||r===Sy||r===Cy)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===wy)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===_y)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Sy)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Cy)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===oN)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Iy||r===Ty)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===Iy)return o===ln?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===Ty)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Ey||r===My||r===ky||r===Ay||r===Ny||r===Ry||r===$y||r===Dy||r===Fy||r===Ly||r===Py||r===Oy||r===zy||r===By)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===Ey)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===My)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===ky)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Ay)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Ny)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Ry)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===$y)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Dy)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Fy)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Ly)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Py)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Oy)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===zy)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===By)return o===ln?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Uy)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===Uy)return o===ln?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===Ml?n?34042:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class sL extends ei{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class gd extends Wn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const iL={type:"move"};class ag{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new gd,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new gd,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new K,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new K),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new gd,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new K,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new K),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const g of t.hand.values()){const m=e.getJointPose(g,n);if(c.joints[g.jointName]===void 0){const v=new gd;v.matrixAutoUpdate=!1,v.visible=!1,c.joints[g.jointName]=v,c.add(v)}const x=c.joints[g.jointName];m!==null&&(x.matrix.fromArray(m.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.jointRadius=m.radius),x.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(iL)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}}class rL extends Bi{constructor(t,e,n,i,r,o,a,l,c,u){if(u=u!==void 0?u:ra,u!==ra&&u!==zl)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===ra&&(n=Zo),n===void 0&&u===zl&&(n=Ml),super(null,i,r,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:ws,this.minFilter=l!==void 0?l:ws,this.flipY=!1,this.generateMipmaps=!1}}class oL extends Na{constructor(t,e){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,d=null,f=null;const p=e.getContextAttributes();let g=null,m=null;const x=[],v=[],y=new ei;y.layers.enable(1),y.viewport=new Vn;const b=new ei;b.layers.enable(2),b.viewport=new Vn;const w=[y,b],S=new sL;S.layers.enable(1),S.layers.enable(2);let C=null,_=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let U=x[$];return U===void 0&&(U=new ag,x[$]=U),U.getTargetRaySpace()},this.getControllerGrip=function($){let U=x[$];return U===void 0&&(U=new ag,x[$]=U),U.getGripSpace()},this.getHand=function($){let U=x[$];return U===void 0&&(U=new ag,x[$]=U),U.getHandSpace()};function I($){const U=v.indexOf($.inputSource);if(U===-1)return;const H=x[U];H!==void 0&&H.dispatchEvent({type:$.type,data:$.inputSource})}function T(){i.removeEventListener("select",I),i.removeEventListener("selectstart",I),i.removeEventListener("selectend",I),i.removeEventListener("squeeze",I),i.removeEventListener("squeezestart",I),i.removeEventListener("squeezeend",I),i.removeEventListener("end",T),i.removeEventListener("inputsourceschange",N);for(let $=0;$<x.length;$++){const U=v[$];U!==null&&(v[$]=null,x[$].disconnect(U))}C=null,_=null,t.setRenderTarget(g),d=null,h=null,u=null,i=null,m=null,L.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){r=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){a=$,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function($){l=$},this.getBaseLayer=function(){return h!==null?h:d},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=async function($){if(i=$,i!==null){if(g=t.getRenderTarget(),i.addEventListener("select",I),i.addEventListener("selectstart",I),i.addEventListener("selectend",I),i.addEventListener("squeeze",I),i.addEventListener("squeezestart",I),i.addEventListener("squeezeend",I),i.addEventListener("end",T),i.addEventListener("inputsourceschange",N),p.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const U={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,e,U),i.updateRenderState({baseLayer:d}),m=new fa(d.framebufferWidth,d.framebufferHeight,{format:Ri,type:ha,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let U=null,H=null,W=null;p.depth&&(W=p.stencil?35056:33190,U=p.stencil?zl:ra,H=p.stencil?Ml:Zo);const Z={colorFormat:32856,depthFormat:W,scaleFactor:r};u=new XRWebGLBinding(i,e),h=u.createProjectionLayer(Z),i.updateRenderState({layers:[h]}),m=new fa(h.textureWidth,h.textureHeight,{format:Ri,type:ha,depthTexture:new rL(h.textureWidth,h.textureHeight,H,void 0,void 0,void 0,void 0,void 0,void 0,U),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});const it=t.properties.get(m);it.__ignoreDepthValues=h.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),L.setContext(i),L.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function N($){for(let U=0;U<$.removed.length;U++){const H=$.removed[U],W=v.indexOf(H);W>=0&&(v[W]=null,x[W].dispatchEvent({type:"disconnected",data:H}))}for(let U=0;U<$.added.length;U++){const H=$.added[U];let W=v.indexOf(H);if(W===-1){for(let it=0;it<x.length;it++)if(it>=v.length){v.push(H),W=it;break}else if(v[it]===null){v[it]=H,W=it;break}if(W===-1)break}const Z=x[W];Z&&Z.dispatchEvent({type:"connected",data:H})}}const P=new K,E=new K;function M($,U,H){P.setFromMatrixPosition(U.matrixWorld),E.setFromMatrixPosition(H.matrixWorld);const W=P.distanceTo(E),Z=U.projectionMatrix.elements,it=H.projectionMatrix.elements,lt=Z[14]/(Z[10]-1),J=Z[14]/(Z[10]+1),vt=(Z[9]+1)/Z[5],mt=(Z[9]-1)/Z[5],xt=(Z[8]-1)/Z[0],dt=(it[8]+1)/it[0],rt=lt*xt,yt=lt*dt,Tt=W/(-xt+dt),ne=Tt*-xt;U.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(ne),$.translateZ(Tt),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const re=lt+Tt,se=J+Tt,ye=rt-ne,ue=yt+(W-ne),me=vt*J/se*re,Ne=mt*J/se*re;$.projectionMatrix.makePerspective(ye,ue,me,Ne,re,se)}function A($,U){U===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(U.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(i===null)return;S.near=b.near=y.near=$.near,S.far=b.far=y.far=$.far,(C!==S.near||_!==S.far)&&(i.updateRenderState({depthNear:S.near,depthFar:S.far}),C=S.near,_=S.far);const U=$.parent,H=S.cameras;A(S,U);for(let Z=0;Z<H.length;Z++)A(H[Z],U);S.matrixWorld.decompose(S.position,S.quaternion,S.scale),$.matrix.copy(S.matrix),$.matrix.decompose($.position,$.quaternion,$.scale);const W=$.children;for(let Z=0,it=W.length;Z<it;Z++)W[Z].updateMatrixWorld(!0);H.length===2?M(S,y,b):S.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return S},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function($){h!==null&&(h.fixedFoveation=$),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=$)};let R=null;function V($,U){if(c=U.getViewerPose(l||o),f=U,c!==null){const H=c.views;d!==null&&(t.setRenderTargetFramebuffer(m,d.framebuffer),t.setRenderTarget(m));let W=!1;H.length!==S.cameras.length&&(S.cameras.length=0,W=!0);for(let Z=0;Z<H.length;Z++){const it=H[Z];let lt=null;if(d!==null)lt=d.getViewport(it);else{const vt=u.getViewSubImage(h,it);lt=vt.viewport,Z===0&&(t.setRenderTargetTextures(m,vt.colorTexture,h.ignoreDepthValues?void 0:vt.depthStencilTexture),t.setRenderTarget(m))}let J=w[Z];J===void 0&&(J=new ei,J.layers.enable(Z),J.viewport=new Vn,w[Z]=J),J.matrix.fromArray(it.transform.matrix),J.projectionMatrix.fromArray(it.projectionMatrix),J.viewport.set(lt.x,lt.y,lt.width,lt.height),Z===0&&S.matrix.copy(J.matrix),W===!0&&S.cameras.push(J)}}for(let H=0;H<x.length;H++){const W=v[H],Z=x[H];W!==null&&Z!==void 0&&Z.update(W,U,l||o)}R&&R($,U),f=null}const L=new DS;L.setAnimationLoop(V),this.setAnimationLoop=function($){R=$},this.dispose=function(){}}}function aL(s,t){function e(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,x,v,y){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(g,m):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),h(g,m),m.isMeshPhysicalMaterial&&d(g,m,y)):m.isMeshMatcapMaterial?(i(g,m),f(g,m)):m.isMeshDepthMaterial?i(g,m):m.isMeshDistanceMaterial?(i(g,m),p(g,m)):m.isMeshNormalMaterial?i(g,m):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&o(g,m)):m.isPointsMaterial?a(g,m,x,v):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===di&&(g.bumpScale.value*=-1)),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===di&&g.normalScale.value.negate()),m.specularMap&&(g.specularMap.value=m.specularMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=t.get(m).envMap;if(x&&(g.envMap.value=x,g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap){g.lightMap.value=m.lightMap;const b=s.physicallyCorrectLights!==!0?Math.PI:1;g.lightMapIntensity.value=m.lightMapIntensity*b}m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let v;m.map?v=m.map:m.specularMap?v=m.specularMap:m.displacementMap?v=m.displacementMap:m.normalMap?v=m.normalMap:m.bumpMap?v=m.bumpMap:m.roughnessMap?v=m.roughnessMap:m.metalnessMap?v=m.metalnessMap:m.alphaMap?v=m.alphaMap:m.emissiveMap?v=m.emissiveMap:m.clearcoatMap?v=m.clearcoatMap:m.clearcoatNormalMap?v=m.clearcoatNormalMap:m.clearcoatRoughnessMap?v=m.clearcoatRoughnessMap:m.iridescenceMap?v=m.iridescenceMap:m.iridescenceThicknessMap?v=m.iridescenceThicknessMap:m.specularIntensityMap?v=m.specularIntensityMap:m.specularColorMap?v=m.specularColorMap:m.transmissionMap?v=m.transmissionMap:m.thicknessMap?v=m.thicknessMap:m.sheenColorMap?v=m.sheenColorMap:m.sheenRoughnessMap&&(v=m.sheenRoughnessMap),v!==void 0&&(v.isWebGLRenderTarget&&(v=v.texture),v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix));let y;m.aoMap?y=m.aoMap:m.lightMap&&(y=m.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),g.uv2Transform.value.copy(y.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function o(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,x,v){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=v*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let y;m.map?y=m.map:m.alphaMap&&(y=m.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),g.uvTransform.value.copy(y.matrix))}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),g.uvTransform.value.copy(x.matrix))}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),t.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function d(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===di&&g.clearcoatNormalScale.value.negate())),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap)}function f(g,m){m.matcap&&(g.matcap.value=m.matcap)}function p(g,m){g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function lL(s,t,e,n){let i={},r={},o=[];const a=e.isWebGL2?s.getParameter(35375):0;function l(v,y){const b=y.program;n.uniformBlockBinding(v,b)}function c(v,y){let b=i[v.id];b===void 0&&(p(v),b=u(v),i[v.id]=b,v.addEventListener("dispose",m));const w=y.program;n.updateUBOMapping(v,w);const S=t.render.frame;r[v.id]!==S&&(d(v),r[v.id]=S)}function u(v){const y=h();v.__bindingPointIndex=y;const b=s.createBuffer(),w=v.__size,S=v.usage;return s.bindBuffer(35345,b),s.bufferData(35345,w,S),s.bindBuffer(35345,null),s.bindBufferBase(35345,y,b),b}function h(){for(let v=0;v<a;v++)if(o.indexOf(v)===-1)return o.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(v){const y=i[v.id],b=v.uniforms,w=v.__cache;s.bindBuffer(35345,y);for(let S=0,C=b.length;S<C;S++){const _=b[S];if(f(_,S,w)===!0){const I=_.value,T=_.__offset;typeof I=="number"?(_.__data[0]=I,s.bufferSubData(35345,T,_.__data)):(_.value.isMatrix3?(_.__data[0]=_.value.elements[0],_.__data[1]=_.value.elements[1],_.__data[2]=_.value.elements[2],_.__data[3]=_.value.elements[0],_.__data[4]=_.value.elements[3],_.__data[5]=_.value.elements[4],_.__data[6]=_.value.elements[5],_.__data[7]=_.value.elements[0],_.__data[8]=_.value.elements[6],_.__data[9]=_.value.elements[7],_.__data[10]=_.value.elements[8],_.__data[11]=_.value.elements[0]):I.toArray(_.__data),s.bufferSubData(35345,T,_.__data))}}s.bindBuffer(35345,null)}function f(v,y,b){const w=v.value;if(b[y]===void 0)return typeof w=="number"?b[y]=w:b[y]=w.clone(),!0;if(typeof w=="number"){if(b[y]!==w)return b[y]=w,!0}else{const S=b[y];if(S.equals(w)===!1)return S.copy(w),!0}return!1}function p(v){const y=v.uniforms;let b=0;const w=16;let S=0;for(let C=0,_=y.length;C<_;C++){const I=y[C],T=g(I);if(I.__data=new Float32Array(T.storage/Float32Array.BYTES_PER_ELEMENT),I.__offset=b,C>0){S=b%w;const N=w-S;S!==0&&N-T.boundary<0&&(b+=w-S,I.__offset=b)}b+=T.storage}return S=b%w,S>0&&(b+=w-S),v.__size=b,v.__cache={},this}function g(v){const y=v.value,b={boundary:0,storage:0};return typeof y=="number"?(b.boundary=4,b.storage=4):y.isVector2?(b.boundary=8,b.storage=8):y.isVector3||y.isColor?(b.boundary=16,b.storage=12):y.isVector4?(b.boundary=16,b.storage=16):y.isMatrix3?(b.boundary=48,b.storage=48):y.isMatrix4?(b.boundary=64,b.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),b}function m(v){const y=v.target;y.removeEventListener("dispose",m);const b=o.indexOf(y.__bindingPointIndex);o.splice(b,1),s.deleteBuffer(i[y.id]),delete i[y.id],delete r[y.id]}function x(){for(const v in i)s.deleteBuffer(i[v]);o=[],i={},r={}}return{bind:l,update:c,dispose:x}}function cL(){const s=Qd("canvas");return s.style.display="block",s}function BS(s={}){this.isWebGLRenderer=!0;const t=s.canvas!==void 0?s.canvas:cL(),e=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,o=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,a=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let u;e!==null?u=e.getContextAttributes().alpha:u=s.alpha!==void 0?s.alpha:!1;let h=null,d=null;const f=[],p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=da,this.physicallyCorrectLights=!1,this.toneMapping=Pr,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const g=this;let m=!1,x=0,v=0,y=null,b=-1,w=null;const S=new Vn,C=new Vn;let _=null,I=t.width,T=t.height,N=1,P=null,E=null;const M=new Vn(0,0,I,T),A=new Vn(0,0,I,T);let R=!1;const V=new jx;let L=!1,$=!1,U=null;const H=new xn,W=new $t,Z=new K,it={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function lt(){return y===null?N:1}let J=e;function vt(z,ot){for(let ft=0;ft<z.length;ft++){const nt=z[ft],gt=t.getContext(nt,ot);if(gt!==null)return gt}return null}try{const z={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Hx}`),t.addEventListener("webglcontextlost",Kt,!1),t.addEventListener("webglcontextrestored",Xt,!1),t.addEventListener("webglcontextcreationerror",Se,!1),J===null){const ot=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&ot.shift(),J=vt(ot,z),J===null)throw vt(ot)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}J.getShaderPrecisionFormat===void 0&&(J.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(z){throw console.error("THREE.WebGLRenderer: "+z.message),z}let mt,xt,dt,rt,yt,Tt,ne,re,se,ye,ue,me,Ne,pn,B,F,ut,St,Ct,Mt,Jt,G,et,Dt;function Lt(){mt=new yD(J),xt=new pD(J,mt,s),mt.init(xt),G=new nL(J,mt,xt),dt=new tL(J,mt,xt),rt=new SD,yt=new BF,Tt=new eL(J,mt,dt,yt,xt,G,rt),ne=new gD(g),re=new bD(g),se=new RN(J,xt),et=new dD(J,mt,se,xt),ye=new wD(J,se,rt,et),ue=new ED(J,ye,se,rt),Ct=new TD(J,xt,Tt),F=new mD(yt),me=new zF(g,ne,re,mt,xt,et,F),Ne=new aL(g,yt),pn=new VF,B=new jF(mt,xt),St=new hD(g,ne,re,dt,ue,u,o),ut=new QF(g,ue,xt),Dt=new lL(J,rt,xt,dt),Mt=new fD(J,mt,rt,xt),Jt=new _D(J,mt,rt,xt),rt.programs=me.programs,g.capabilities=xt,g.extensions=mt,g.properties=yt,g.renderLists=pn,g.shadowMap=ut,g.state=dt,g.info=rt}Lt();const Rt=new oL(g,J);this.xr=Rt,this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){const z=mt.get("WEBGL_lose_context");z&&z.loseContext()},this.forceContextRestore=function(){const z=mt.get("WEBGL_lose_context");z&&z.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(z){z!==void 0&&(N=z,this.setSize(I,T,!1))},this.getSize=function(z){return z.set(I,T)},this.setSize=function(z,ot,ft){if(Rt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}I=z,T=ot,t.width=Math.floor(z*N),t.height=Math.floor(ot*N),ft!==!1&&(t.style.width=z+"px",t.style.height=ot+"px"),this.setViewport(0,0,z,ot)},this.getDrawingBufferSize=function(z){return z.set(I*N,T*N).floor()},this.setDrawingBufferSize=function(z,ot,ft){I=z,T=ot,N=ft,t.width=Math.floor(z*ft),t.height=Math.floor(ot*ft),this.setViewport(0,0,z,ot)},this.getCurrentViewport=function(z){return z.copy(S)},this.getViewport=function(z){return z.copy(M)},this.setViewport=function(z,ot,ft,nt){z.isVector4?M.set(z.x,z.y,z.z,z.w):M.set(z,ot,ft,nt),dt.viewport(S.copy(M).multiplyScalar(N).floor())},this.getScissor=function(z){return z.copy(A)},this.setScissor=function(z,ot,ft,nt){z.isVector4?A.set(z.x,z.y,z.z,z.w):A.set(z,ot,ft,nt),dt.scissor(C.copy(A).multiplyScalar(N).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(z){dt.setScissorTest(R=z)},this.setOpaqueSort=function(z){P=z},this.setTransparentSort=function(z){E=z},this.getClearColor=function(z){return z.copy(St.getClearColor())},this.setClearColor=function(){St.setClearColor.apply(St,arguments)},this.getClearAlpha=function(){return St.getClearAlpha()},this.setClearAlpha=function(){St.setClearAlpha.apply(St,arguments)},this.clear=function(z=!0,ot=!0,ft=!0){let nt=0;z&&(nt|=16384),ot&&(nt|=256),ft&&(nt|=1024),J.clear(nt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Kt,!1),t.removeEventListener("webglcontextrestored",Xt,!1),t.removeEventListener("webglcontextcreationerror",Se,!1),pn.dispose(),B.dispose(),yt.dispose(),ne.dispose(),re.dispose(),ue.dispose(),et.dispose(),Dt.dispose(),me.dispose(),Rt.dispose(),Rt.removeEventListener("sessionstart",Pt),Rt.removeEventListener("sessionend",Qt),U&&(U.dispose(),U=null),$e.stop()};function Kt(z){z.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function Xt(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const z=rt.autoReset,ot=ut.enabled,ft=ut.autoUpdate,nt=ut.needsUpdate,gt=ut.type;Lt(),rt.autoReset=z,ut.enabled=ot,ut.autoUpdate=ft,ut.needsUpdate=nt,ut.type=gt}function Se(z){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",z.statusMessage)}function Te(z){const ot=z.target;ot.removeEventListener("dispose",Te),ze(ot)}function ze(z){tt(z),yt.remove(z)}function tt(z){const ot=yt.get(z).programs;ot!==void 0&&(ot.forEach(function(ft){me.releaseProgram(ft)}),z.isShaderMaterial&&me.releaseShaderCache(z))}this.renderBufferDirect=function(z,ot,ft,nt,gt,ee){ot===null&&(ot=it);const ce=gt.isMesh&&gt.matrixWorld.determinant()<0,ve=nA(z,ot,ft,nt,gt);dt.setMaterial(nt,ce);let ge=ft.index;const De=ft.attributes.position;if(ge===null){if(De===void 0||De.count===0)return}else if(ge.count===0)return;let we=1;nt.wireframe===!0&&(ge=ye.getWireframeAttribute(ft),we=2),et.setup(gt,nt,ve,ft,ge);let Ee,an=Mt;ge!==null&&(Ee=se.get(ge),an=Jt,an.setIndex(Ee));const $o=ge!==null?ge.count:De.count,Ha=ft.drawRange.start*we,qa=ft.drawRange.count*we,Ki=ee!==null?ee.start*we:0,Fe=ee!==null?ee.count*we:1/0,Xa=Math.max(Ha,Ki),yn=Math.min($o,Ha+qa,Ki+Fe)-1,qs=Math.max(0,yn-Xa+1);if(qs!==0){if(gt.isMesh)nt.wireframe===!0?(dt.setLineWidth(nt.wireframeLinewidth*lt()),an.setMode(1)):an.setMode(4);else if(gt.isLine){let qr=nt.linewidth;qr===void 0&&(qr=1),dt.setLineWidth(qr*lt()),gt.isLineSegments?an.setMode(1):gt.isLineLoop?an.setMode(2):an.setMode(3)}else gt.isPoints?an.setMode(0):gt.isSprite&&an.setMode(4);if(gt.isInstancedMesh)an.renderInstances(Xa,qs,gt.count);else if(ft.isInstancedBufferGeometry){const qr=Math.min(ft.instanceCount,ft._maxInstanceCount);an.renderInstances(Xa,qs,qr)}else an.render(Xa,qs)}},this.compile=function(z,ot){function ft(nt,gt,ee){nt.transparent===!0&&nt.side===si?(nt.side=di,nt.needsUpdate=!0,Hs(nt,gt,ee),nt.side=Ll,nt.needsUpdate=!0,Hs(nt,gt,ee),nt.side=si):Hs(nt,gt,ee)}d=B.get(z),d.init(),p.push(d),z.traverseVisible(function(nt){nt.isLight&&nt.layers.test(ot.layers)&&(d.pushLight(nt),nt.castShadow&&d.pushShadow(nt))}),d.setupLights(g.physicallyCorrectLights),z.traverse(function(nt){const gt=nt.material;if(gt)if(Array.isArray(gt))for(let ee=0;ee<gt.length;ee++){const ce=gt[ee];ft(ce,z,nt)}else ft(gt,z,nt)}),p.pop(),d=null};let pt=null;function It(z){pt&&pt(z)}function Pt(){$e.stop()}function Qt(){$e.start()}const $e=new DS;$e.setAnimationLoop(It),typeof self<"u"&&$e.setContext(self),this.setAnimationLoop=function(z){pt=z,Rt.setAnimationLoop(z),z===null?$e.stop():$e.start()},Rt.addEventListener("sessionstart",Pt),Rt.addEventListener("sessionend",Qt),this.render=function(z,ot){if(ot!==void 0&&ot.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;z.matrixWorldAutoUpdate===!0&&z.updateMatrixWorld(),ot.parent===null&&ot.matrixWorldAutoUpdate===!0&&ot.updateMatrixWorld(),Rt.enabled===!0&&Rt.isPresenting===!0&&(Rt.cameraAutoUpdate===!0&&Rt.updateCamera(ot),ot=Rt.getCamera()),z.isScene===!0&&z.onBeforeRender(g,z,ot,y),d=B.get(z,p.length),d.init(),p.push(d),H.multiplyMatrices(ot.projectionMatrix,ot.matrixWorldInverse),V.setFromProjectionMatrix(H),$=this.localClippingEnabled,L=F.init(this.clippingPlanes,$,ot),h=pn.get(z,f.length),h.init(),f.push(h),zn(z,ot,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(P,E),L===!0&&F.beginShadows();const ft=d.state.shadowsArray;if(ut.render(ft,z,ot),L===!0&&F.endShadows(),this.info.autoReset===!0&&this.info.reset(),St.render(h,z),d.setupLights(g.physicallyCorrectLights),ot.isArrayCamera){const nt=ot.cameras;for(let gt=0,ee=nt.length;gt<ee;gt++){const ce=nt[gt];es(h,z,ce,ce.viewport)}}else es(h,z,ot);y!==null&&(Tt.updateMultisampleRenderTarget(y),Tt.updateRenderTargetMipmap(y)),z.isScene===!0&&z.onAfterRender(g,z,ot),et.resetDefaultState(),b=-1,w=null,p.pop(),p.length>0?d=p[p.length-1]:d=null,f.pop(),f.length>0?h=f[f.length-1]:h=null};function zn(z,ot,ft,nt){if(z.visible===!1)return;if(z.layers.test(ot.layers)){if(z.isGroup)ft=z.renderOrder;else if(z.isLOD)z.autoUpdate===!0&&z.update(ot);else if(z.isLight)d.pushLight(z),z.castShadow&&d.pushShadow(z);else if(z.isSprite){if(!z.frustumCulled||V.intersectsSprite(z)){nt&&Z.setFromMatrixPosition(z.matrixWorld).applyMatrix4(H);const ce=ue.update(z),ve=z.material;ve.visible&&h.push(z,ce,ve,ft,Z.z,null)}}else if((z.isMesh||z.isLine||z.isPoints)&&(z.isSkinnedMesh&&z.skeleton.frame!==rt.render.frame&&(z.skeleton.update(),z.skeleton.frame=rt.render.frame),!z.frustumCulled||V.intersectsObject(z))){nt&&Z.setFromMatrixPosition(z.matrixWorld).applyMatrix4(H);const ce=ue.update(z),ve=z.material;if(Array.isArray(ve)){const ge=ce.groups;for(let De=0,we=ge.length;De<we;De++){const Ee=ge[De],an=ve[Ee.materialIndex];an&&an.visible&&h.push(z,ce,an,ft,Z.z,Ee)}}else ve.visible&&h.push(z,ce,ve,ft,Z.z,null)}}const ee=z.children;for(let ce=0,ve=ee.length;ce<ve;ce++)zn(ee[ce],ot,ft,nt)}function es(z,ot,ft,nt){const gt=z.opaque,ee=z.transmissive,ce=z.transparent;d.setupLightsView(ft),ee.length>0&&Ro(gt,ot,ft),nt&&dt.viewport(S.copy(nt)),gt.length>0&&Qe(gt,ot,ft),ee.length>0&&Qe(ee,ot,ft),ce.length>0&&Qe(ce,ot,ft),dt.buffers.depth.setTest(!0),dt.buffers.depth.setMask(!0),dt.buffers.color.setMask(!0),dt.setPolygonOffset(!1)}function Ro(z,ot,ft){const nt=xt.isWebGL2;U===null&&(U=new fa(1,1,{generateMipmaps:!0,type:mt.has("EXT_color_buffer_half_float")?eu:ha,minFilter:Lf,samples:nt&&r===!0?4:0})),g.getDrawingBufferSize(W),nt?U.setSize(W.x,W.y):U.setSize(Xg(W.x),Xg(W.y));const gt=g.getRenderTarget();g.setRenderTarget(U),g.clear();const ee=g.toneMapping;g.toneMapping=Pr,Qe(z,ot,ft),g.toneMapping=ee,Tt.updateMultisampleRenderTarget(U),Tt.updateRenderTargetMipmap(U),g.setRenderTarget(gt)}function Qe(z,ot,ft){const nt=ot.isScene===!0?ot.overrideMaterial:null;for(let gt=0,ee=z.length;gt<ee;gt++){const ce=z[gt],ve=ce.object,ge=ce.geometry,De=nt===null?ce.material:nt,we=ce.group;ve.layers.test(ft.layers)&&br(ve,ot,ft,ge,De,we)}}function br(z,ot,ft,nt,gt,ee){z.onBeforeRender(g,ot,ft,nt,gt,ee),z.modelViewMatrix.multiplyMatrices(ft.matrixWorldInverse,z.matrixWorld),z.normalMatrix.getNormalMatrix(z.modelViewMatrix),gt.onBeforeRender(g,ot,ft,nt,z,ee),gt.transparent===!0&&gt.side===si?(gt.side=di,gt.needsUpdate=!0,g.renderBufferDirect(ft,ot,nt,gt,z,ee),gt.side=Ll,gt.needsUpdate=!0,g.renderBufferDirect(ft,ot,nt,gt,z,ee),gt.side=si):g.renderBufferDirect(ft,ot,nt,gt,z,ee),z.onAfterRender(g,ot,ft,nt,gt,ee)}function Hs(z,ot,ft){ot.isScene!==!0&&(ot=it);const nt=yt.get(z),gt=d.state.lights,ee=d.state.shadowsArray,ce=gt.state.version,ve=me.getParameters(z,gt.state,ee,ot,ft),ge=me.getProgramCacheKey(ve);let De=nt.programs;nt.environment=z.isMeshStandardMaterial?ot.environment:null,nt.fog=ot.fog,nt.envMap=(z.isMeshStandardMaterial?re:ne).get(z.envMap||nt.environment),De===void 0&&(z.addEventListener("dispose",Te),De=new Map,nt.programs=De);let we=De.get(ge);if(we!==void 0){if(nt.currentProgram===we&&nt.lightsStateVersion===ce)return ly(z,ve),we}else ve.uniforms=me.getUniforms(z),z.onBuild(ft,ve,g),z.onBeforeCompile(ve,g),we=me.acquireProgram(ve,ge),De.set(ge,we),nt.uniforms=ve.uniforms;const Ee=nt.uniforms;(!z.isShaderMaterial&&!z.isRawShaderMaterial||z.clipping===!0)&&(Ee.clippingPlanes=F.uniform),ly(z,ve),nt.needsLights=iA(z),nt.lightsStateVersion=ce,nt.needsLights&&(Ee.ambientLightColor.value=gt.state.ambient,Ee.lightProbe.value=gt.state.probe,Ee.directionalLights.value=gt.state.directional,Ee.directionalLightShadows.value=gt.state.directionalShadow,Ee.spotLights.value=gt.state.spot,Ee.spotLightShadows.value=gt.state.spotShadow,Ee.rectAreaLights.value=gt.state.rectArea,Ee.ltc_1.value=gt.state.rectAreaLTC1,Ee.ltc_2.value=gt.state.rectAreaLTC2,Ee.pointLights.value=gt.state.point,Ee.pointLightShadows.value=gt.state.pointShadow,Ee.hemisphereLights.value=gt.state.hemi,Ee.directionalShadowMap.value=gt.state.directionalShadowMap,Ee.directionalShadowMatrix.value=gt.state.directionalShadowMatrix,Ee.spotShadowMap.value=gt.state.spotShadowMap,Ee.spotLightMatrix.value=gt.state.spotLightMatrix,Ee.spotLightMap.value=gt.state.spotLightMap,Ee.pointShadowMap.value=gt.state.pointShadowMap,Ee.pointShadowMatrix.value=gt.state.pointShadowMatrix);const an=we.getUniforms(),$o=qd.seqWithValue(an.seq,Ee);return nt.currentProgram=we,nt.uniformsList=$o,we}function ly(z,ot){const ft=yt.get(z);ft.outputEncoding=ot.outputEncoding,ft.instancing=ot.instancing,ft.skinning=ot.skinning,ft.morphTargets=ot.morphTargets,ft.morphNormals=ot.morphNormals,ft.morphColors=ot.morphColors,ft.morphTargetsCount=ot.morphTargetsCount,ft.numClippingPlanes=ot.numClippingPlanes,ft.numIntersection=ot.numClipIntersection,ft.vertexAlphas=ot.vertexAlphas,ft.vertexTangents=ot.vertexTangents,ft.toneMapping=ot.toneMapping}function nA(z,ot,ft,nt,gt){ot.isScene!==!0&&(ot=it),Tt.resetTextureUnits();const ee=ot.fog,ce=nt.isMeshStandardMaterial?ot.environment:null,ve=y===null?g.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:da,ge=(nt.isMeshStandardMaterial?re:ne).get(nt.envMap||ce),De=nt.vertexColors===!0&&!!ft.attributes.color&&ft.attributes.color.itemSize===4,we=!!nt.normalMap&&!!ft.attributes.tangent,Ee=!!ft.morphAttributes.position,an=!!ft.morphAttributes.normal,$o=!!ft.morphAttributes.color,Ha=nt.toneMapped?g.toneMapping:Pr,qa=ft.morphAttributes.position||ft.morphAttributes.normal||ft.morphAttributes.color,Ki=qa!==void 0?qa.length:0,Fe=yt.get(nt),Xa=d.state.lights;if(L===!0&&($===!0||z!==w)){const Rs=z===w&&nt.id===b;F.setState(nt,z,Rs)}let yn=!1;nt.version===Fe.__version?(Fe.needsLights&&Fe.lightsStateVersion!==Xa.state.version||Fe.outputEncoding!==ve||gt.isInstancedMesh&&Fe.instancing===!1||!gt.isInstancedMesh&&Fe.instancing===!0||gt.isSkinnedMesh&&Fe.skinning===!1||!gt.isSkinnedMesh&&Fe.skinning===!0||Fe.envMap!==ge||nt.fog===!0&&Fe.fog!==ee||Fe.numClippingPlanes!==void 0&&(Fe.numClippingPlanes!==F.numPlanes||Fe.numIntersection!==F.numIntersection)||Fe.vertexAlphas!==De||Fe.vertexTangents!==we||Fe.morphTargets!==Ee||Fe.morphNormals!==an||Fe.morphColors!==$o||Fe.toneMapping!==Ha||xt.isWebGL2===!0&&Fe.morphTargetsCount!==Ki)&&(yn=!0):(yn=!0,Fe.__version=nt.version);let qs=Fe.currentProgram;yn===!0&&(qs=Hs(nt,ot,gt));let qr=!1,Ic=!1,Tm=!1;const us=qs.getUniforms(),Do=Fe.uniforms;if(dt.useProgram(qs.program)&&(qr=!0,Ic=!0,Tm=!0),nt.id!==b&&(b=nt.id,Ic=!0),qr||w!==z){if(us.setValue(J,"projectionMatrix",z.projectionMatrix),xt.logarithmicDepthBuffer&&us.setValue(J,"logDepthBufFC",2/(Math.log(z.far+1)/Math.LN2)),w!==z&&(w=z,Ic=!0,Tm=!0),nt.isShaderMaterial||nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshStandardMaterial||nt.envMap){const Rs=us.map.cameraPosition;Rs!==void 0&&Rs.setValue(J,Z.setFromMatrixPosition(z.matrixWorld))}(nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshLambertMaterial||nt.isMeshBasicMaterial||nt.isMeshStandardMaterial||nt.isShaderMaterial)&&us.setValue(J,"isOrthographic",z.isOrthographicCamera===!0),(nt.isMeshPhongMaterial||nt.isMeshToonMaterial||nt.isMeshLambertMaterial||nt.isMeshBasicMaterial||nt.isMeshStandardMaterial||nt.isShaderMaterial||nt.isShadowMaterial||gt.isSkinnedMesh)&&us.setValue(J,"viewMatrix",z.matrixWorldInverse)}if(gt.isSkinnedMesh){us.setOptional(J,gt,"bindMatrix"),us.setOptional(J,gt,"bindMatrixInverse");const Rs=gt.skeleton;Rs&&(xt.floatVertexTextures?(Rs.boneTexture===null&&Rs.computeBoneTexture(),us.setValue(J,"boneTexture",Rs.boneTexture,Tt),us.setValue(J,"boneTextureSize",Rs.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Em=ft.morphAttributes;if((Em.position!==void 0||Em.normal!==void 0||Em.color!==void 0&&xt.isWebGL2===!0)&&Ct.update(gt,ft,nt,qs),(Ic||Fe.receiveShadow!==gt.receiveShadow)&&(Fe.receiveShadow=gt.receiveShadow,us.setValue(J,"receiveShadow",gt.receiveShadow)),nt.isMeshGouraudMaterial&&nt.envMap!==null&&(Do.envMap.value=ge,Do.flipEnvMap.value=ge.isCubeTexture&&ge.isRenderTargetTexture===!1?-1:1),Ic&&(us.setValue(J,"toneMappingExposure",g.toneMappingExposure),Fe.needsLights&&sA(Do,Tm),ee&&nt.fog===!0&&Ne.refreshFogUniforms(Do,ee),Ne.refreshMaterialUniforms(Do,nt,N,T,U),qd.upload(J,Fe.uniformsList,Do,Tt)),nt.isShaderMaterial&&nt.uniformsNeedUpdate===!0&&(qd.upload(J,Fe.uniformsList,Do,Tt),nt.uniformsNeedUpdate=!1),nt.isSpriteMaterial&&us.setValue(J,"center",gt.center),us.setValue(J,"modelViewMatrix",gt.modelViewMatrix),us.setValue(J,"normalMatrix",gt.normalMatrix),us.setValue(J,"modelMatrix",gt.matrixWorld),nt.isShaderMaterial||nt.isRawShaderMaterial){const Rs=nt.uniformsGroups;for(let Mm=0,rA=Rs.length;Mm<rA;Mm++)if(xt.isWebGL2){const cy=Rs[Mm];Dt.update(cy,qs),Dt.bind(cy,qs)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return qs}function sA(z,ot){z.ambientLightColor.needsUpdate=ot,z.lightProbe.needsUpdate=ot,z.directionalLights.needsUpdate=ot,z.directionalLightShadows.needsUpdate=ot,z.pointLights.needsUpdate=ot,z.pointLightShadows.needsUpdate=ot,z.spotLights.needsUpdate=ot,z.spotLightShadows.needsUpdate=ot,z.rectAreaLights.needsUpdate=ot,z.hemisphereLights.needsUpdate=ot}function iA(z){return z.isMeshLambertMaterial||z.isMeshToonMaterial||z.isMeshPhongMaterial||z.isMeshStandardMaterial||z.isShadowMaterial||z.isShaderMaterial&&z.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(z,ot,ft){yt.get(z.texture).__webglTexture=ot,yt.get(z.depthTexture).__webglTexture=ft;const nt=yt.get(z);nt.__hasExternalTextures=!0,nt.__hasExternalTextures&&(nt.__autoAllocateDepthBuffer=ft===void 0,nt.__autoAllocateDepthBuffer||mt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),nt.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(z,ot){const ft=yt.get(z);ft.__webglFramebuffer=ot,ft.__useDefaultFramebuffer=ot===void 0},this.setRenderTarget=function(z,ot=0,ft=0){y=z,x=ot,v=ft;let nt=!0,gt=null,ee=!1,ce=!1;if(z){const ge=yt.get(z);ge.__useDefaultFramebuffer!==void 0?(dt.bindFramebuffer(36160,null),nt=!1):ge.__webglFramebuffer===void 0?Tt.setupRenderTarget(z):ge.__hasExternalTextures&&Tt.rebindTextures(z,yt.get(z.texture).__webglTexture,yt.get(z.depthTexture).__webglTexture);const De=z.texture;(De.isData3DTexture||De.isDataArrayTexture||De.isCompressedArrayTexture)&&(ce=!0);const we=yt.get(z).__webglFramebuffer;z.isWebGLCubeRenderTarget?(gt=we[ot],ee=!0):xt.isWebGL2&&z.samples>0&&Tt.useMultisampledRTT(z)===!1?gt=yt.get(z).__webglMultisampledFramebuffer:gt=we,S.copy(z.viewport),C.copy(z.scissor),_=z.scissorTest}else S.copy(M).multiplyScalar(N).floor(),C.copy(A).multiplyScalar(N).floor(),_=R;if(dt.bindFramebuffer(36160,gt)&&xt.drawBuffers&&nt&&dt.drawBuffers(z,gt),dt.viewport(S),dt.scissor(C),dt.setScissorTest(_),ee){const ge=yt.get(z.texture);J.framebufferTexture2D(36160,36064,34069+ot,ge.__webglTexture,ft)}else if(ce){const ge=yt.get(z.texture),De=ot||0;J.framebufferTextureLayer(36160,36064,ge.__webglTexture,ft||0,De)}b=-1},this.readRenderTargetPixels=function(z,ot,ft,nt,gt,ee,ce){if(!(z&&z.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ve=yt.get(z).__webglFramebuffer;if(z.isWebGLCubeRenderTarget&&ce!==void 0&&(ve=ve[ce]),ve){dt.bindFramebuffer(36160,ve);try{const ge=z.texture,De=ge.format,we=ge.type;if(De!==Ri&&G.convert(De)!==J.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ee=we===eu&&(mt.has("EXT_color_buffer_half_float")||xt.isWebGL2&&mt.has("EXT_color_buffer_float"));if(we!==ha&&G.convert(we)!==J.getParameter(35738)&&!(we===Jo&&(xt.isWebGL2||mt.has("OES_texture_float")||mt.has("WEBGL_color_buffer_float")))&&!Ee){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ot>=0&&ot<=z.width-nt&&ft>=0&&ft<=z.height-gt&&J.readPixels(ot,ft,nt,gt,G.convert(De),G.convert(we),ee)}finally{const ge=y!==null?yt.get(y).__webglFramebuffer:null;dt.bindFramebuffer(36160,ge)}}},this.copyFramebufferToTexture=function(z,ot,ft=0){const nt=Math.pow(2,-ft),gt=Math.floor(ot.image.width*nt),ee=Math.floor(ot.image.height*nt);Tt.setTexture2D(ot,0),J.copyTexSubImage2D(3553,ft,0,0,z.x,z.y,gt,ee),dt.unbindTexture()},this.copyTextureToTexture=function(z,ot,ft,nt=0){const gt=ot.image.width,ee=ot.image.height,ce=G.convert(ft.format),ve=G.convert(ft.type);Tt.setTexture2D(ft,0),J.pixelStorei(37440,ft.flipY),J.pixelStorei(37441,ft.premultiplyAlpha),J.pixelStorei(3317,ft.unpackAlignment),ot.isDataTexture?J.texSubImage2D(3553,nt,z.x,z.y,gt,ee,ce,ve,ot.image.data):ot.isCompressedTexture?J.compressedTexSubImage2D(3553,nt,z.x,z.y,ot.mipmaps[0].width,ot.mipmaps[0].height,ce,ot.mipmaps[0].data):J.texSubImage2D(3553,nt,z.x,z.y,ce,ve,ot.image),nt===0&&ft.generateMipmaps&&J.generateMipmap(3553),dt.unbindTexture()},this.copyTextureToTexture3D=function(z,ot,ft,nt,gt=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ee=z.max.x-z.min.x+1,ce=z.max.y-z.min.y+1,ve=z.max.z-z.min.z+1,ge=G.convert(nt.format),De=G.convert(nt.type);let we;if(nt.isData3DTexture)Tt.setTexture3D(nt,0),we=32879;else if(nt.isDataArrayTexture)Tt.setTexture2DArray(nt,0),we=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}J.pixelStorei(37440,nt.flipY),J.pixelStorei(37441,nt.premultiplyAlpha),J.pixelStorei(3317,nt.unpackAlignment);const Ee=J.getParameter(3314),an=J.getParameter(32878),$o=J.getParameter(3316),Ha=J.getParameter(3315),qa=J.getParameter(32877),Ki=ft.isCompressedTexture?ft.mipmaps[0]:ft.image;J.pixelStorei(3314,Ki.width),J.pixelStorei(32878,Ki.height),J.pixelStorei(3316,z.min.x),J.pixelStorei(3315,z.min.y),J.pixelStorei(32877,z.min.z),ft.isDataTexture||ft.isData3DTexture?J.texSubImage3D(we,gt,ot.x,ot.y,ot.z,ee,ce,ve,ge,De,Ki.data):ft.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),J.compressedTexSubImage3D(we,gt,ot.x,ot.y,ot.z,ee,ce,ve,ge,Ki.data)):J.texSubImage3D(we,gt,ot.x,ot.y,ot.z,ee,ce,ve,ge,De,Ki),J.pixelStorei(3314,Ee),J.pixelStorei(32878,an),J.pixelStorei(3316,$o),J.pixelStorei(3315,Ha),J.pixelStorei(32877,qa),gt===0&&nt.generateMipmaps&&J.generateMipmap(we),dt.unbindTexture()},this.initTexture=function(z){z.isCubeTexture?Tt.setTextureCube(z,0):z.isData3DTexture?Tt.setTexture3D(z,0):z.isDataArrayTexture||z.isCompressedArrayTexture?Tt.setTexture2DArray(z,0):Tt.setTexture2D(z,0),dt.unbindTexture()},this.resetState=function(){x=0,v=0,y=null,dt.reset(),et.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class uL extends BS{}uL.prototype.isWebGL1Renderer=!0;class hL extends Wn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.backgroundBlurriness=this.backgroundBlurriness),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class US extends vo{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Le(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Cw=new K,Iw=new K,Tw=new xn,lg=new qx,xd=new Of;class dL extends Wn{constructor(t=new Us,e=new US){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)Cw.fromBufferAttribute(e,i-1),Iw.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Cw.distanceTo(Iw);t.setAttribute("lineDistance",new vn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),xd.copy(n.boundingSphere),xd.applyMatrix4(i),xd.radius+=r,t.ray.intersectsSphere(xd)===!1)return;Tw.copy(i).invert(),lg.copy(t.ray).applyMatrix4(Tw);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new K,u=new K,h=new K,d=new K,f=this.isLineSegments?2:1,p=n.index,m=n.attributes.position;if(p!==null){const x=Math.max(0,o.start),v=Math.min(p.count,o.start+o.count);for(let y=x,b=v-1;y<b;y+=f){const w=p.getX(y),S=p.getX(y+1);if(c.fromBufferAttribute(m,w),u.fromBufferAttribute(m,S),lg.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const _=t.ray.origin.distanceTo(d);_<t.near||_>t.far||e.push({distance:_,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,o.start),v=Math.min(m.count,o.start+o.count);for(let y=x,b=v-1;y<b;y+=f){if(c.fromBufferAttribute(m,y),u.fromBufferAttribute(m,y+1),lg.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const S=t.ray.origin.distanceTo(d);S<t.near||S>t.far||e.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}class vr{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let o;e?o=e:o=t*n[r-1];let a=0,l=r-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(r-1);const u=n[i],d=n[i+1]-u,f=(o-u)/d;return(i+f)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),l=e||(o.isVector2?new $t:new K);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new K,i=[],r=[],o=[],a=new K,l=new xn;for(let f=0;f<=t;f++){const p=f/t;i[f]=this.getTangentAt(p,new K)}r[0]=new K,o[0]=new K;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=t;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(ss(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(ss(r[0].dot(r[t]),-1,1));f/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(f=-f);for(let p=1;p<=t;p++)r[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Yx extends vr{constructor(t=0,e=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new $t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+t*r;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class fL extends Yx{constructor(t,e,n,i,r,o){super(t,e,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Zx(){let s=0,t=0,e=0,n=0;function i(r,o,a,l){s=r,t=a,e=-3*r+3*o-2*a-l,n=2*r-2*o+a+l}return{initCatmullRom:function(r,o,a,l,c){i(o,a,c*(a-r),c*(l-o))},initNonuniformCatmullRom:function(r,o,a,l,c,u,h){let d=(o-r)/c-(a-r)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+t*r+e*o+n*a}}}const vd=new K,cg=new Zx,ug=new Zx,hg=new Zx;class VS extends vr{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new K){const n=e,i=this.points,r=i.length,o=(r-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:l===0&&a===r-1&&(a=r-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%r]:(vd.subVectors(i[0],i[1]).add(i[0]),c=vd);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(vd.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=vd),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),f),g=Math.pow(h.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(u),f);g<1e-4&&(g=1),p<1e-4&&(p=g),m<1e-4&&(m=g),cg.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,p,g,m),ug.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,p,g,m),hg.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,p,g,m)}else this.curveType==="catmullrom"&&(cg.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),ug.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),hg.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(cg.calc(l),ug.calc(l),hg.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new K().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ew(s,t,e,n,i){const r=(n-t)*.5,o=(i-e)*.5,a=s*s,l=s*a;return(2*e-2*n+r+o)*l+(-3*e+3*n-2*r-o)*a+r*s+e}function pL(s,t){const e=1-s;return e*e*t}function mL(s,t){return 2*(1-s)*s*t}function gL(s,t){return s*s*t}function jc(s,t,e,n){return pL(s,t)+mL(s,e)+gL(s,n)}function xL(s,t){const e=1-s;return e*e*e*t}function vL(s,t){const e=1-s;return 3*e*e*s*t}function bL(s,t){return 3*(1-s)*s*s*t}function yL(s,t){return s*s*s*t}function Kc(s,t,e,n,i){return xL(s,t)+vL(s,e)+bL(s,n)+yL(s,i)}class WS extends vr{constructor(t=new $t,e=new $t,n=new $t,i=new $t){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new $t){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Kc(t,i.x,r.x,o.x,a.x),Kc(t,i.y,r.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class wL extends vr{constructor(t=new K,e=new K,n=new K,i=new K){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new K){const n=e,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(Kc(t,i.x,r.x,o.x,a.x),Kc(t,i.y,r.y,o.y,a.y),Kc(t,i.z,r.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Jx extends vr{constructor(t=new $t,e=new $t){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new $t){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new $t;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class _L extends vr{constructor(t=new K,e=new K){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new K){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class GS extends vr{constructor(t=new $t,e=new $t,n=new $t){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new $t){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(jc(t,i.x,r.x,o.x),jc(t,i.y,r.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class SL extends vr{constructor(t=new K,e=new K,n=new K){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new K){const n=e,i=this.v0,r=this.v1,o=this.v2;return n.set(jc(t,i.x,r.x,o.x),jc(t,i.y,r.y,o.y),jc(t,i.z,r.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class HS extends vr{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new $t){const n=e,i=this.points,r=(i.length-1)*t,o=Math.floor(r),a=r-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Ew(a,l.x,c.x,u.x,h.x),Ew(a,l.y,c.y,u.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new $t().fromArray(i))}return this}}var CL=Object.freeze({__proto__:null,ArcCurve:fL,CatmullRomCurve3:VS,CubicBezierCurve:WS,CubicBezierCurve3:wL,EllipseCurve:Yx,LineCurve:Jx,LineCurve3:_L,QuadraticBezierCurve:GS,QuadraticBezierCurve3:SL,SplineCurve:HS});class IL extends vr{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Jx(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new CL[i.type]().fromJSON(i))}return this}}class Kg extends IL{constructor(t){super(),this.type="Path",this.currentPoint=new $t,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Jx(this.currentPoint.clone(),new $t(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new GS(this.currentPoint.clone(),new $t(t,e),new $t(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,o){const a=new WS(this.currentPoint.clone(),new $t(t,e),new $t(n,i),new $t(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new HS(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,r,o),this}absarc(t,e,n,i,r,o){return this.absellipse(t,e,n,n,i,r,o),this}ellipse(t,e,n,i,r,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,r,o,a,l),this}absellipse(t,e,n,i,r,o,a,l){const c=new Yx(t,e,n,i,r,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class tf extends Us{constructor(t=1,e=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],o=[],a=[],l=[],c=new K,u=new $t;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,d=3;h<=e;h++,d+=3){const f=n+h/e*i;c.x=t*Math.cos(f),c.y=t*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[d]/t+1)/2,u.y=(o[d+1]/t+1)/2,l.push(u.x,u.y)}for(let h=1;h<=e;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new vn(o,3)),this.setAttribute("normal",new vn(a,3)),this.setAttribute("uv",new vn(l,2))}static fromJSON(t){return new tf(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class ta extends Us{constructor(t=1,e=1,n=1,i=8,r=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],d=[],f=[];let p=0;const g=[],m=n/2;let x=0;v(),o===!1&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new vn(h,3)),this.setAttribute("normal",new vn(d,3)),this.setAttribute("uv",new vn(f,2));function v(){const b=new K,w=new K;let S=0;const C=(e-t)/n;for(let _=0;_<=r;_++){const I=[],T=_/r,N=T*(e-t)+t;for(let P=0;P<=i;P++){const E=P/i,M=E*l+a,A=Math.sin(M),R=Math.cos(M);w.x=N*A,w.y=-T*n+m,w.z=N*R,h.push(w.x,w.y,w.z),b.set(A,C,R).normalize(),d.push(b.x,b.y,b.z),f.push(E,1-T),I.push(p++)}g.push(I)}for(let _=0;_<i;_++)for(let I=0;I<r;I++){const T=g[I][_],N=g[I+1][_],P=g[I+1][_+1],E=g[I][_+1];u.push(T,N,E),u.push(N,P,E),S+=6}c.addGroup(x,S,0),x+=S}function y(b){const w=p,S=new $t,C=new K;let _=0;const I=b===!0?t:e,T=b===!0?1:-1;for(let P=1;P<=i;P++)h.push(0,m*T,0),d.push(0,T,0),f.push(.5,.5),p++;const N=p;for(let P=0;P<=i;P++){const M=P/i*l+a,A=Math.cos(M),R=Math.sin(M);C.x=I*R,C.y=m*T,C.z=I*A,h.push(C.x,C.y,C.z),d.push(0,T,0),S.x=A*.5+.5,S.y=R*.5*T+.5,f.push(S.x,S.y),p++}for(let P=0;P<i;P++){const E=w+P,M=N+P;b===!0?u.push(M,M+1,E):u.push(M+1,M,E),_+=3}c.addGroup(x,_,b===!0?1:2),x+=_}}static fromJSON(t){return new ta(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class qS extends Kg{constructor(t){super(t),this.uuid=oc(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Kg().fromJSON(i))}return this}}const TL={triangulate:function(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let r=XS(s,0,i,e,!0);const o=[];if(!r||r.next===r.prev)return o;let a,l,c,u,h,d,f;if(n&&(r=NL(s,t,r,e)),s.length>80*e){a=c=s[0],l=u=s[1];for(let p=e;p<i;p+=e)h=s[p],d=s[p+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);f=Math.max(c-a,u-l),f=f!==0?32767/f:0}return nu(r,o,e,a,l,f,0),o}};function XS(s,t,e,n,i){let r,o;if(i===VL(s,t,e,n)>0)for(r=t;r<e;r+=n)o=Mw(r,s[r],s[r+1],o);else for(r=e-n;r>=t;r-=n)o=Mw(r,s[r],s[r+1],o);return o&&Uf(o,o.next)&&(iu(o),o=o.next),o}function ga(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Uf(e,e.next)||on(e.prev,e,e.next)===0)){if(iu(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function nu(s,t,e,n,i,r,o){if(!s)return;!o&&r&&LL(s,n,i,r);let a=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?ML(s,n,i,r):EL(s)){t.push(l.i/e|0),t.push(s.i/e|0),t.push(c.i/e|0),iu(s),s=c.next,a=c.next;continue}if(s=c,s===a){o?o===1?(s=kL(ga(s),t,e),nu(s,t,e,n,i,r,2)):o===2&&AL(s,t,e,n,i,r):nu(ga(s),t,e,n,i,r,1);break}}}function EL(s){const t=s.prev,e=s,n=s.next;if(on(t,e,n)>=0)return!1;const i=t.x,r=e.x,o=n.x,a=t.y,l=e.y,c=n.y,u=i<r?i<o?i:o:r<o?r:o,h=a<l?a<c?a:c:l<c?l:c,d=i>r?i>o?i:o:r>o?r:o,f=a>l?a>c?a:c:l>c?l:c;let p=n.next;for(;p!==t;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&Sl(i,a,r,l,o,c,p.x,p.y)&&on(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function ML(s,t,e,n){const i=s.prev,r=s,o=s.next;if(on(i,r,o)>=0)return!1;const a=i.x,l=r.x,c=o.x,u=i.y,h=r.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,p=u<h?u<d?u:d:h<d?h:d,g=a>l?a>c?a:c:l>c?l:c,m=u>h?u>d?u:d:h>d?h:d,x=Yg(f,p,t,e,n),v=Yg(g,m,t,e,n);let y=s.prevZ,b=s.nextZ;for(;y&&y.z>=x&&b&&b.z<=v;){if(y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&Sl(a,u,l,h,c,d,y.x,y.y)&&on(y.prev,y,y.next)>=0||(y=y.prevZ,b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&Sl(a,u,l,h,c,d,b.x,b.y)&&on(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;y&&y.z>=x;){if(y.x>=f&&y.x<=g&&y.y>=p&&y.y<=m&&y!==i&&y!==o&&Sl(a,u,l,h,c,d,y.x,y.y)&&on(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;b&&b.z<=v;){if(b.x>=f&&b.x<=g&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&Sl(a,u,l,h,c,d,b.x,b.y)&&on(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function kL(s,t,e){let n=s;do{const i=n.prev,r=n.next.next;!Uf(i,r)&&jS(i,n,n.next,r)&&su(i,r)&&su(r,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(r.i/e|0),iu(n),iu(n.next),n=s=r),n=n.next}while(n!==s);return ga(n)}function AL(s,t,e,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&zL(o,a)){let l=KS(o,a);o=ga(o,o.next),l=ga(l,l.next),nu(o,t,e,n,i,r,0),nu(l,t,e,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function NL(s,t,e,n){const i=[];let r,o,a,l,c;for(r=0,o=t.length;r<o;r++)a=t[r]*n,l=r<o-1?t[r+1]*n:s.length,c=XS(s,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(OL(c));for(i.sort(RL),r=0;r<i.length;r++)e=$L(i[r],e);return e}function RL(s,t){return s.x-t.x}function $L(s,t){const e=DL(s,t);if(!e)return t;const n=KS(e,s);return ga(n,n.next),ga(e,e.next)}function DL(s,t){let e=t,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const d=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(d<=r&&d>n&&(n=d,i=e.x<e.next.x?e:e.next,d===r))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,c=i.y;let u=1/0,h;e=i;do r>=e.x&&e.x>=l&&r!==e.x&&Sl(o<c?r:n,o,l,c,o<c?n:r,o,e.x,e.y)&&(h=Math.abs(o-e.y)/(r-e.x),su(e,s)&&(h<u||h===u&&(e.x>i.x||e.x===i.x&&FL(i,e)))&&(i=e,u=h)),e=e.next;while(e!==a);return i}function FL(s,t){return on(s.prev,s,t.prev)<0&&on(t.next,s,s.next)<0}function LL(s,t,e,n){let i=s;do i.z===0&&(i.z=Yg(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,PL(i)}function PL(s){let t,e,n,i,r,o,a,l,c=1;do{for(e=s,s=null,r=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;e=n}r.nextZ=null,c*=2}while(o>1);return s}function Yg(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function OL(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function Sl(s,t,e,n,i,r,o,a){return(i-o)*(t-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(r-a)>=(i-o)*(n-a)}function zL(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!BL(s,t)&&(su(s,t)&&su(t,s)&&UL(s,t)&&(on(s.prev,s,t.prev)||on(s,t.prev,t))||Uf(s,t)&&on(s.prev,s,s.next)>0&&on(t.prev,t,t.next)>0)}function on(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Uf(s,t){return s.x===t.x&&s.y===t.y}function jS(s,t,e,n){const i=yd(on(s,t,e)),r=yd(on(s,t,n)),o=yd(on(e,n,s)),a=yd(on(e,n,t));return!!(i!==r&&o!==a||i===0&&bd(s,e,t)||r===0&&bd(s,n,t)||o===0&&bd(e,s,n)||a===0&&bd(e,t,n))}function bd(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function yd(s){return s>0?1:s<0?-1:0}function BL(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&jS(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function su(s,t){return on(s.prev,s,s.next)<0?on(s,t,s.next)>=0&&on(s,s.prev,t)>=0:on(s,t,s.prev)<0||on(s,s.next,t)<0}function UL(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,r=(s.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&i<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function KS(s,t){const e=new Zg(s.i,s.x,s.y),n=new Zg(t.i,t.x,t.y),i=s.next,r=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function Mw(s,t,e,n){const i=new Zg(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function iu(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Zg(s,t,e){this.i=s,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function VL(s,t,e,n){let i=0;for(let r=t,o=e-n;r<e;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class Yc{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5}static isClockWise(t){return Yc.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];kw(t),Aw(n,t);let o=t.length;e.forEach(kw);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,Aw(n,e[l]);const a=TL.triangulate(n,i);for(let l=0;l<a.length;l+=3)r.push(a.slice(l,l+3));return r}}function kw(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function Aw(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class Qx extends Us{constructor(t=.5,e=1,n=8,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=t;const d=(e-t)/i,f=new K,p=new $t;for(let g=0;g<=i;g++){for(let m=0;m<=n;m++){const x=r+m/n*o;f.x=h*Math.cos(x),f.y=h*Math.sin(x),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/e+1)/2,p.y=(f.y/e+1)/2,u.push(p.x,p.y)}h+=d}for(let g=0;g<i;g++){const m=g*(n+1);for(let x=0;x<n;x++){const v=x+m,y=v,b=v+n+1,w=v+n+2,S=v+1;a.push(y,b,S),a.push(b,w,S)}}this.setIndex(a),this.setAttribute("position",new vn(l,3)),this.setAttribute("normal",new vn(c,3)),this.setAttribute("uv",new vn(u,2))}static fromJSON(t){return new Qx(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class t0 extends Us{constructor(t=new qS([new $t(0,.5),new $t(-.5,-.5),new $t(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new vn(i,3)),this.setAttribute("normal",new vn(r,3)),this.setAttribute("uv",new vn(o,2));function c(u){const h=i.length/3,d=u.extractPoints(e);let f=d.shape;const p=d.holes;Yc.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,x=p.length;m<x;m++){const v=p[m];Yc.isClockWise(v)===!0&&(p[m]=v.reverse())}const g=Yc.triangulateShape(f,p);for(let m=0,x=p.length;m<x;m++){const v=p[m];f=f.concat(v)}for(let m=0,x=f.length;m<x;m++){const v=f[m];i.push(v.x,v.y,0),r.push(0,0,1),o.push(v.x,v.y)}for(let m=0,x=g.length;m<x;m++){const v=g[m],y=v[0]+h,b=v[1]+h,w=v[2]+h;n.push(y,b,w),l+=3}}}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return WL(e,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const o=e[t.shapes[i]];n.push(o)}return new t0(n,t.curveSegments)}}function WL(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class wu extends vo{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Le(16777215),this.specular=new Le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pf,this.normalScale=new $t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Df,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class GL extends vo{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pf,this.normalScale=new $t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class YS extends vo{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Pf,this.normalScale=new $t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Df,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class ZS extends Wn{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Le(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const dg=new xn,Nw=new K,Rw=new K;class HL{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new $t(512,512),this.map=null,this.mapPass=null,this.matrix=new xn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new jx,this._frameExtents=new $t(1,1),this._viewportCount=1,this._viewports=[new Vn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Nw.setFromMatrixPosition(t.matrixWorld),e.position.copy(Nw),Rw.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Rw),e.updateMatrixWorld(),dg.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(dg),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(dg)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class qL extends HL{constructor(){super(new FS(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class XL extends ZS{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Wn.DefaultUp),this.updateMatrix(),this.target=new Wn,this.shadow=new qL}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class jL extends ZS{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class KL{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=$w(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=$w();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function $w(){return(typeof performance>"u"?Date:performance).now()}class JS{constructor(t,e,n=0,i=1/0){this.ray=new qx(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Xx,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return Jg(t,this,n,e),n.sort(Dw),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)Jg(t[i],this,n,e);return n.sort(Dw),n}}function Dw(s,t){return s.distance-t.distance}function Jg(s,t,e,n){if(s.layers.test(t.layers)&&s.raycast(t,e),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)Jg(i[r],t,e,!0)}}class Fw{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ss(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const Lw=new K;let wd,fg;class YL extends Wn{constructor(t=new K(0,0,1),e=new K(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",wd===void 0&&(wd=new Us,wd.setAttribute("position",new vn([0,0,0,0,1,0],3)),fg=new ta(0,.5,1,5,1),fg.translate(0,-.5,0)),this.position.copy(e),this.line=new dL(wd,new US({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new rn(fg,new Ra({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Lw.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Lw,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Hx}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Hx);class $i{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new k);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new k);const n=this.elements,i=t.x,r=t.y,o=t.z;return e.x=n[0]*i+n[1]*r+n[2]*o,e.y=n[3]*i+n[4]*r+n[5]*o,e.z=n[6]*i+n[7]*r+n[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new $i);const n=this.elements,i=t.elements,r=e.elements,o=n[0],a=n[1],l=n[2],c=n[3],u=n[4],h=n[5],d=n[6],f=n[7],p=n[8],g=i[0],m=i[1],x=i[2],v=i[3],y=i[4],b=i[5],w=i[6],S=i[7],C=i[8];return r[0]=o*g+a*v+l*w,r[1]=o*m+a*y+l*S,r[2]=o*x+a*b+l*C,r[3]=c*g+u*v+h*w,r[4]=c*m+u*y+h*S,r[5]=c*x+u*b+h*C,r[6]=d*g+f*v+p*w,r[7]=d*m+f*y+p*S,r[8]=d*x+f*b+p*C,e}scale(t,e){e===void 0&&(e=new $i);const n=this.elements,i=e.elements;for(let r=0;r!==3;r++)i[3*r+0]=t.x*n[3*r+0],i[3*r+1]=t.y*n[3*r+1],i[3*r+2]=t.z*n[3*r+2];return e}solve(t,e){e===void 0&&(e=new k);const n=3,i=4,r=[];let o,a;for(o=0;o<n*i;o++)r.push(0);for(o=0;o<3;o++)for(a=0;a<3;a++)r[o+i*a]=this.elements[o+3*a];r[3+4*0]=t.x,r[3+4*1]=t.y,r[3+4*2]=t.z;let l=3;const c=l;let u;const h=4;let d;do{if(o=c-l,r[o+i*o]===0){for(a=o+1;a<c;a++)if(r[o+i*a]!==0){u=h;do d=h-u,r[d+i*o]+=r[d+i*a];while(--u);break}}if(r[o+i*o]!==0)for(a=o+1;a<c;a++){const f=r[o+i*a]/r[o+i*o];u=h;do d=h-u,r[d+i*a]=d<=o?0:r[d+i*a]-r[d+i*o]*f;while(--u)}}while(--l);if(e.z=r[2*i+3]/r[2*i+2],e.y=(r[1*i+3]-r[1*i+2]*e.z)/r[1*i+1],e.x=(r[0*i+3]-r[0*i+2]*e.z-r[0*i+1]*e.y)/r[0*i+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let n=0;n<9;n++)t+=this.elements[n]+e;return t}reverse(t){t===void 0&&(t=new $i);const e=3,n=6,i=ZL;let r,o;for(r=0;r<3;r++)for(o=0;o<3;o++)i[r+n*o]=this.elements[r+3*o];i[3+6*0]=1,i[3+6*1]=0,i[3+6*2]=0,i[4+6*0]=0,i[4+6*1]=1,i[4+6*2]=0,i[5+6*0]=0,i[5+6*1]=0,i[5+6*2]=1;let a=3;const l=a;let c;const u=n;let h;do{if(r=l-a,i[r+n*r]===0){for(o=r+1;o<l;o++)if(i[r+n*o]!==0){c=u;do h=u-c,i[h+n*r]+=i[h+n*o];while(--c);break}}if(i[r+n*r]!==0)for(o=r+1;o<l;o++){const d=i[r+n*o]/i[r+n*r];c=u;do h=u-c,i[h+n*o]=h<=r?0:i[h+n*o]-i[h+n*r]*d;while(--c)}}while(--a);r=2;do{o=r-1;do{const d=i[r+n*o]/i[r+n*r];c=n;do h=n-c,i[h+n*o]=i[h+n*o]-i[h+n*r]*d;while(--c)}while(o--)}while(--r);r=2;do{const d=1/i[r+n*r];c=n;do h=n-c,i[h+n*r]=i[h+n*r]*d;while(--c)}while(r--);r=2;do{o=2;do{if(h=i[e+o+n*r],isNaN(h)||h===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(r,o,h)}while(o--)}while(r--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,i=t.z,r=t.w,o=e+e,a=n+n,l=i+i,c=e*o,u=e*a,h=e*l,d=n*a,f=n*l,p=i*l,g=r*o,m=r*a,x=r*l,v=this.elements;return v[3*0+0]=1-(d+p),v[3*0+1]=u-x,v[3*0+2]=h+m,v[3*1+0]=u+x,v[3*1+1]=1-(c+p),v[3*1+2]=f-g,v[3*2+0]=h-m,v[3*2+1]=f+g,v[3*2+2]=1-(c+d),this}transpose(t){t===void 0&&(t=new $i);const e=this.elements,n=t.elements;let i;return n[0]=e[0],n[4]=e[4],n[8]=e[8],i=e[1],n[1]=e[3],n[3]=i,i=e[2],n[2]=e[6],n[6]=i,i=e[5],n[5]=e[7],n[7]=i,t}}const ZL=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class k{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new k);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*r-l*i,e.y=l*n-o*r,e.z=o*i-a*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new k(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new k(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new $i([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,i=Math.sqrt(t*t+e*e+n*n);if(i>0){const r=1/i;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return i}unit(t){t===void 0&&(t=new k);const e=this.x,n=this.y,i=this.z;let r=Math.sqrt(e*e+n*n+i*i);return r>0?(r=1/r,t.x=e*r,t.y=n*r,t.z=i*r):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i))}distanceSquared(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i)}scale(t,e){e===void 0&&(e=new k);const n=this.x,i=this.y,r=this.z;return e.x=t*n,e.y=t*i,e.z=t*r,e}vmul(t,e){return e===void 0&&(e=new k),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new k),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new k),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const i=JL,r=1/n;i.set(this.x*r,this.y*r,this.z*r);const o=QL;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,t)):(o.set(0,1,0),i.cross(o,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const i=this.x,r=this.y,o=this.z;n.x=i+(t.x-i)*e,n.y=r+(t.y-r)*e,n.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(Pw),Pw.almostEquals(t,e)}clone(){return new k(this.x,this.y,this.z)}}k.ZERO=new k(0,0,0);k.UNIT_X=new k(1,0,0);k.UNIT_Y=new k(0,1,0);k.UNIT_Z=new k(0,0,1);const JL=new k,QL=new k,Pw=new k;class Vs{constructor(t){t===void 0&&(t={}),this.lowerBound=new k,this.upperBound=new k,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,i){const r=this.lowerBound,o=this.upperBound,a=n;r.copy(t[0]),a&&a.vmult(r,r),o.copy(r);for(let l=1;l<t.length;l++){let c=t[l];a&&(a.vmult(c,Ow),c=Ow),c.x>o.x&&(o.x=c.x),c.x<r.x&&(r.x=c.x),c.y>o.y&&(o.y=c.y),c.y<r.y&&(r.y=c.y),c.z>o.z&&(o.z=c.z),c.z<r.z&&(r.z=c.z)}return e&&(e.vadd(r,r),e.vadd(o,o)),i&&(r.x-=i,r.y-=i,r.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new Vs().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound,o=i.x<=n.x&&n.x<=r.x||e.x<=r.x&&r.x<=n.x,a=i.y<=n.y&&n.y<=r.y||e.y<=r.y&&r.y<=n.y,l=i.z<=n.z&&n.z<=r.z||e.z<=r.z&&r.z<=n.z;return o&&a&&l}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound;return e.x<=i.x&&n.x>=r.x&&e.y<=i.y&&n.y>=r.y&&e.z<=i.z&&n.z>=r.z}getCorners(t,e,n,i,r,o,a,l){const c=this.lowerBound,u=this.upperBound;t.copy(c),e.set(u.x,c.y,c.z),n.set(u.x,u.y,c.z),i.set(c.x,u.y,u.z),r.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),a.set(c.x,c.y,u.z),l.copy(u)}toLocalFrame(t,e){const n=zw,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToLocal(f,f)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=zw,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7];this.getCorners(i,r,o,a,l,c,u,h);for(let d=0;d!==8;d++){const f=n[d];t.pointToWorld(f,f)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,i=1/e.x,r=1/e.y,o=1/e.z,a=(this.lowerBound.x-n.x)*i,l=(this.upperBound.x-n.x)*i,c=(this.lowerBound.y-n.y)*r,u=(this.upperBound.y-n.y)*r,h=(this.lowerBound.z-n.z)*o,d=(this.upperBound.z-n.z)*o,f=Math.max(Math.max(Math.min(a,l),Math.min(c,u)),Math.min(h,d)),p=Math.min(Math.min(Math.max(a,l),Math.max(c,u)),Math.max(h,d));return!(p<0||f>p)}}const Ow=new k,zw=[new k,new k,new k,new k,new k,new k,new k,new k];class Bw{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:i}=e;if(i>n){const r=i;i=n,n=r}return this.matrix[(n*(n+1)>>1)+i-1]}set(t,e,n){let{index:i}=t,{index:r}=e;if(r>i){const o=r;r=i,i=o}this.matrix[(i*(i+1)>>1)+r-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class QS{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!!(n[t]!==void 0&&n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const i=n[t].indexOf(e);return i!==-1&&n[t].splice(i,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const n=this._listeners[t.type];if(n!==void 0){t.target=this;for(let i=0,r=n.length;i<r;i++)n[i].call(this,t)}return this}}class mn{constructor(t,e,n,i){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),i===void 0&&(i=1),this.x=t,this.y=e,this.z=n,this.w=i}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(e*.5);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new k),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=t3,i=e3;t.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new mn);const n=this.x,i=this.y,r=this.z,o=this.w,a=t.x,l=t.y,c=t.z,u=t.w;return e.x=n*u+o*a+i*c-r*l,e.y=i*u+o*l+r*a-n*c,e.z=r*u+o*c+n*l-i*a,e.w=o*u-n*a-i*l-r*c,e}inverse(t){t===void 0&&(t=new mn);const e=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(t);const o=1/(e*e+n*n+i*i+r*r);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new mn),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new k);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z,c=this.w,u=c*n+a*r-l*i,h=c*i+l*n-o*r,d=c*r+o*i-a*n,f=-o*n-a*i-l*r;return e.x=u*c+f*-o+h*-l-d*-a,e.y=h*c+f*-a+d*-o-u*-l,e.z=d*c+f*-l+u*-a-h*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let n,i,r;const o=this.x,a=this.y,l=this.z,c=this.w;switch(e){case"YZX":const u=o*a+l*c;if(u>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,r=0),u<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,r=0),n===void 0){const h=o*o,d=a*a,f=l*l;n=Math.atan2(2*a*c-2*o*l,1-2*d-2*f),i=Math.asin(2*u),r=Math.atan2(2*o*c-2*a*l,1-2*h-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=n,t.z=i,t.x=r}setFromEuler(t,e,n,i){i===void 0&&(i="XYZ");const r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(n/2),l=Math.sin(t/2),c=Math.sin(e/2),u=Math.sin(n/2);return i==="XYZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="YXZ"?(this.x=l*o*a+r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="ZXY"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a-l*c*u):i==="ZYX"?(this.x=l*o*a-r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a+l*c*u):i==="YZX"?(this.x=l*o*a+r*c*u,this.y=r*c*a+l*o*u,this.z=r*o*u-l*c*a,this.w=r*o*a-l*c*u):i==="XZY"&&(this.x=l*o*a-r*c*u,this.y=r*c*a-l*o*u,this.z=r*o*u+l*c*a,this.w=r*o*a+l*c*u),this}clone(){return new mn(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new mn);const i=this.x,r=this.y,o=this.z,a=this.w;let l=t.x,c=t.y,u=t.z,h=t.w,d,f,p,g,m;return f=i*l+r*c+o*u+a*h,f<0&&(f=-f,l=-l,c=-c,u=-u,h=-h),1-f>1e-6?(d=Math.acos(f),p=Math.sin(d),g=Math.sin((1-e)*d)/p,m=Math.sin(e*d)/p):(g=1-e,m=e),n.x=g*i+m*l,n.y=g*r+m*c,n.z=g*o+m*u,n.w=g*a+m*h,n}integrate(t,e,n,i){i===void 0&&(i=new mn);const r=t.x*n.x,o=t.y*n.y,a=t.z*n.z,l=this.x,c=this.y,u=this.z,h=this.w,d=e*.5;return i.x+=d*(r*h+o*u-a*c),i.y+=d*(o*h+a*l-r*u),i.z+=d*(a*h+r*c-o*l),i.w+=d*(-r*l-o*c-a*u),i}}const t3=new k,e3=new k,n3={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class Ot{constructor(t){t===void 0&&(t={}),this.id=Ot.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}Ot.idCounter=0;Ot.types=n3;class Re{constructor(t){t===void 0&&(t={}),this.position=new k,this.quaternion=new mn,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return Re.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return Re.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new k),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,i){return i===void 0&&(i=new k),n.vsub(t,i),e.conjugate(Uw),Uw.vmult(i,i),i}static pointToWorldFrame(t,e,n,i){return i===void 0&&(i=new k),e.vmult(n,i),i.vadd(t,i),i}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new k),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,i){return i===void 0&&(i=new k),e.w*=-1,e.vmult(n,i),e.w*=-1,i}}const Uw=new mn;class Zc extends Ot{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:o}=t;super({type:Ot.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const i=new k;for(let r=0;r!==t.length;r++){const o=t[r],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;e[o[l]].vsub(e[o[c]],i),i.normalize();let u=!1;for(let h=0;h!==n.length;h++)if(n[h].almostEquals(i)||n[h].almostEquals(i)){u=!0;break}u||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let i=0;i<this.faces[t].length;i++)if(!this.vertices[this.faces[t][i]])throw new Error(`Vertex ${this.faces[t][i]} not found!`);const e=this.faceNormals[t]||new k;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let i=0;i<this.faces[t].length;i++)console.warn(`.vertices[${this.faces[t][i]}] = Vec3(${this.vertices[this.faces[t][i]].toString()})`)}}}getFaceNormal(t,e){const n=this.faces[t],i=this.vertices[n[0]],r=this.vertices[n[1]],o=this.vertices[n[2]];Zc.computeNormal(i,r,o,e)}static computeNormal(t,e,n,i){const r=new k,o=new k;e.vsub(t,o),n.vsub(e,r),r.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(t,e,n,i,r,o,a,l,c){const u=new k;let h=-1,d=-Number.MAX_VALUE;for(let p=0;p<n.faces.length;p++){u.copy(n.faceNormals[p]),r.vmult(u,u);const g=u.dot(o);g>d&&(d=g,h=p)}const f=[];for(let p=0;p<n.faces[h].length;p++){const g=n.vertices[n.faces[h][p]],m=new k;m.copy(g),r.vmult(m,m),i.vadd(m,m),f.push(m)}h>=0&&this.clipFaceAgainstHull(o,t,e,f,a,l,c)}findSeparatingAxis(t,e,n,i,r,o,a,l){const c=new k,u=new k,h=new k,d=new k,f=new k,p=new k;let g=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let x=0;x!==m.uniqueAxes.length;x++){n.vmult(m.uniqueAxes[x],c);const v=m.testSepAxis(c,t,e,n,i,r);if(v===!1)return!1;v<g&&(g=v,o.copy(c))}else{const x=a?a.length:m.faces.length;for(let v=0;v<x;v++){const y=a?a[v]:v;c.copy(m.faceNormals[y]),n.vmult(c,c);const b=m.testSepAxis(c,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(c))}}if(t.uniqueAxes)for(let x=0;x!==t.uniqueAxes.length;x++){r.vmult(t.uniqueAxes[x],u);const v=m.testSepAxis(u,t,e,n,i,r);if(v===!1)return!1;v<g&&(g=v,o.copy(u))}else{const x=l?l.length:t.faces.length;for(let v=0;v<x;v++){const y=l?l[v]:v;u.copy(t.faceNormals[y]),r.vmult(u,u);const b=m.testSepAxis(u,t,e,n,i,r);if(b===!1)return!1;b<g&&(g=b,o.copy(u))}}for(let x=0;x!==m.uniqueEdges.length;x++){n.vmult(m.uniqueEdges[x],d);for(let v=0;v!==t.uniqueEdges.length;v++)if(r.vmult(t.uniqueEdges[v],f),d.cross(f,p),!p.almostZero()){p.normalize();const y=m.testSepAxis(p,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(p))}}return i.vsub(e,h),h.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,n,i,r,o){const a=this;Zc.project(a,t,n,i,pg),Zc.project(e,t,r,o,mg);const l=pg[0],c=pg[1],u=mg[0],h=mg[1];if(l<h||u<c)return!1;const d=l-h,f=u-c;return d<f?d:f}calculateLocalInertia(t,e){const n=new k,i=new k;this.computeLocalAABB(i,n);const r=n.x-i.x,o=n.y-i.y,a=n.z-i.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*r*2*r+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*r*2*r)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],i=this.vertices[e[0]];return-n.dot(i)}clipFaceAgainstHull(t,e,n,i,r,o,a){const l=new k,c=new k,u=new k,h=new k,d=new k,f=new k,p=new k,g=new k,m=this,x=[],v=i,y=x;let b=-1,w=Number.MAX_VALUE;for(let T=0;T<m.faces.length;T++){l.copy(m.faceNormals[T]),n.vmult(l,l);const N=l.dot(t);N<w&&(w=N,b=T)}if(b<0)return;const S=m.faces[b];S.connectedFaces=[];for(let T=0;T<m.faces.length;T++)for(let N=0;N<m.faces[T].length;N++)S.indexOf(m.faces[T][N])!==-1&&T!==b&&S.connectedFaces.indexOf(T)===-1&&S.connectedFaces.push(T);const C=S.length;for(let T=0;T<C;T++){const N=m.vertices[S[T]],P=m.vertices[S[(T+1)%C]];N.vsub(P,c),u.copy(c),n.vmult(u,u),e.vadd(u,u),h.copy(this.faceNormals[b]),n.vmult(h,h),e.vadd(h,h),u.cross(h,d),d.negate(d),f.copy(N),n.vmult(f,f),e.vadd(f,f);const E=S.connectedFaces[T];p.copy(this.faceNormals[E]);const M=this.getPlaneConstantOfFace(E);g.copy(p),n.vmult(g,g);const A=M-g.dot(e);for(this.clipFaceAgainstPlane(v,y,g,A);v.length;)v.shift();for(;y.length;)v.push(y.shift())}p.copy(this.faceNormals[b]);const _=this.getPlaneConstantOfFace(b);g.copy(p),n.vmult(g,g);const I=_-g.dot(e);for(let T=0;T<v.length;T++){let N=g.dot(v[T])+I;if(N<=r&&(console.log(`clamped: depth=${N} to minDist=${r}`),N=r),N<=o){const P=v[T];if(N<=1e-6){const E={point:P,normal:g,depth:N};a.push(E)}}}}clipFaceAgainstPlane(t,e,n,i){let r,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];r=n.dot(l)+i;for(let u=0;u<a;u++){if(c=t[u],o=n.dot(c)+i,r<0)if(o<0){const h=new k;h.copy(c),e.push(h)}else{const h=new k;l.lerp(c,r/(r-o),h),e.push(h)}else if(o<0){const h=new k;l.lerp(c,r/(r-o),h),e.push(h),e.push(c)}l=c,r=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new k);const n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)e.vmult(n[r],i[r]),t.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const r=n[i];r.x<t.x?t.x=r.x:r.x>e.x&&(e.x=r.x),r.y<t.y?t.y=r.y:r.y>e.y&&(e.y=r.y),r.z<t.z?t.z=r.z:r.z>e.z&&(e.z=r.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new k);const n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==e;r++)t.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const i=e[n].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,i){const r=this.vertices;let o,a,l,c,u,h,d=new k;for(let f=0;f<r.length;f++){d.copy(r[f]),e.vmult(d,d),t.vadd(d,d);const p=d;(o===void 0||p.x<o)&&(o=p.x),(c===void 0||p.x>c)&&(c=p.x),(a===void 0||p.y<a)&&(a=p.y),(u===void 0||p.y>u)&&(u=p.y),(l===void 0||p.z<l)&&(l=p.z),(h===void 0||p.z>h)&&(h=p.z)}n.set(o,a,l),i.set(c,u,h)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new k);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,i=this.vertices;if(e){for(let r=0;r<n;r++){const o=i[r];e.vmult(o,o)}for(let r=0;r<this.faceNormals.length;r++){const o=this.faceNormals[r];e.vmult(o,o)}}if(t)for(let r=0;r<n;r++){const o=i[r];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,n=this.faces,i=this.faceNormals,r=null,o=new k;this.getAveragePointLocal(o);for(let a=0;a<this.faces.length;a++){let l=i[a];const c=e[n[a][0]],u=new k;t.vsub(c,u);const h=l.dot(u),d=new k;o.vsub(c,d);const f=l.dot(d);if(h<0&&f>0||h>0&&f<0)return!1}return r?1:-1}static project(t,e,n,i,r){const o=t.vertices.length,a=s3;let l=0,c=0;const u=i3,h=t.vertices;u.setZero(),Re.vectorToLocalFrame(n,i,e,a),Re.pointToLocalFrame(n,i,u,u);const d=u.dot(a);c=l=h[0].dot(a);for(let f=1;f<o;f++){const p=h[f].dot(a);p>l&&(l=p),p<c&&(c=p)}if(c-=d,l-=d,c>l){const f=c;c=l,l=f}r[0]=l,r[1]=c}}const pg=[],mg=[];new k;const s3=new k,i3=new k;class _u extends Ot{constructor(t){super({type:Ot.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,i=k,r=[new i(-t,-e,-n),new i(t,-e,-n),new i(t,e,-n),new i(-t,e,-n),new i(-t,-e,n),new i(t,-e,n),new i(t,e,n),new i(-t,e,n)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],a=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],l=new Zc({vertices:r,faces:o,axes:a});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new k),_u.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const i=t;n.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),n.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),n.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const n=t,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),e!==void 0)for(let r=0;r!==n.length;r++)e.vmult(n[r],n[r]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<r.length;o++)to.set(r[o][0],r[o][1],r[o][2]),e.vmult(to,to),t.vadd(to,to),n(to.x,to.y,to.z)}calculateWorldAABB(t,e,n,i){const r=this.halfExtents;Yi[0].set(r.x,r.y,r.z),Yi[1].set(-r.x,r.y,r.z),Yi[2].set(-r.x,-r.y,r.z),Yi[3].set(-r.x,-r.y,-r.z),Yi[4].set(r.x,-r.y,-r.z),Yi[5].set(r.x,r.y,-r.z),Yi[6].set(-r.x,r.y,-r.z),Yi[7].set(r.x,-r.y,r.z);const o=Yi[0];e.vmult(o,o),t.vadd(o,o),i.copy(o),n.copy(o);for(let a=1;a<8;a++){const l=Yi[a];e.vmult(l,l),t.vadd(l,l);const c=l.x,u=l.y,h=l.z;c>i.x&&(i.x=c),u>i.y&&(i.y=u),h>i.z&&(i.z=h),c<n.x&&(n.x=c),u<n.y&&(n.y=u),h<n.z&&(n.z=h)}}}const to=new k,Yi=[new k,new k,new k,new k,new k,new k,new k,new k],e0={DYNAMIC:1,STATIC:2,KINEMATIC:4},n0={AWAKE:0,SLEEPY:1,SLEEPING:2};class Ft extends QS{constructor(t){t===void 0&&(t={}),super(),this.id=Ft.idCounter++,this.index=-1,this.world=null,this.vlambda=new k,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new k,this.previousPosition=new k,this.interpolatedPosition=new k,this.initPosition=new k,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new k,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new k,this.force=new k;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?Ft.STATIC:Ft.DYNAMIC,typeof t.type==typeof Ft.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=Ft.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new k,this.quaternion=new mn,this.initQuaternion=new mn,this.previousQuaternion=new mn,this.interpolatedQuaternion=new mn,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new k,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new k,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new k,this.invInertia=new k,this.invInertiaWorld=new $i,this.invMassSolve=0,this.invInertiaSolve=new k,this.invInertiaWorldSolve=new $i,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new k(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new k(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new Vs,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new k,this.isTrigger=Boolean(t.isTrigger),t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=Ft.AWAKE,this.wakeUpAfterNarrowphase=!1,t===Ft.SLEEPING&&this.dispatchEvent(Ft.wakeupEvent)}sleep(){this.sleepState=Ft.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===Ft.AWAKE&&n<i?(this.sleepState=Ft.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(Ft.sleepyEvent)):e===Ft.SLEEPY&&n>i?this.wakeUp():e===Ft.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(Ft.sleepEvent))}}updateSolveMassProperties(){this.sleepState===Ft.SLEEPING||this.type===Ft.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new k),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new k),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new k),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new k),this.quaternion.vmult(t,e),e}addShape(t,e,n){const i=new k,r=new mn;return e&&i.copy(e),n&&r.copy(n),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let i=0;for(let r=0;r!==n;r++){const o=t[r];o.updateBoundingSphereRadius();const a=e[r].length(),l=o.boundingSphereRadius;a+l>i&&(i=a+l)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,i=t.length,r=r3,o=o3,a=this.quaternion,l=this.aabb,c=a3;for(let u=0;u!==i;u++){const h=t[u];a.vmult(e[u],r),r.vadd(this.position,r),a.mult(n[u],o),h.calculateWorldAABB(r,o,c.lowerBound,c.upperBound),u===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const n=l3,i=c3;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(e,n),n.mmult(i,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new k),this.type!==Ft.DYNAMIC)return;this.sleepState===Ft.SLEEPING&&this.wakeUp();const n=h3;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new k),this.type!==Ft.DYNAMIC)return;const n=d3,i=f3;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyForce(n,i)}applyTorque(t){this.type===Ft.DYNAMIC&&(this.sleepState===Ft.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new k),this.type!==Ft.DYNAMIC)return;this.sleepState===Ft.SLEEPING&&this.wakeUp();const n=e,i=p3;i.copy(t),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const r=m3;n.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new k),this.type!==Ft.DYNAMIC)return;const n=g3,i=x3;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyImpulse(n,i)}updateMassProperties(){const t=v3;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),_u.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new k;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===Ft.DYNAMIC||this.type===Ft.KINEMATIC)||this.sleepState===Ft.SLEEPING)return;const i=this.velocity,r=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,u=this.invMass,h=this.invInertiaWorld,d=this.linearFactor,f=u*t;i.x+=a.x*f*d.x,i.y+=a.y*f*d.y,i.z+=a.z*f*d.z;const p=h.elements,g=this.angularFactor,m=l.x*g.x,x=l.y*g.y,v=l.z*g.z;r.x+=t*(p[0]*m+p[1]*x+p[2]*v),r.y+=t*(p[3]*m+p[4]*x+p[5]*v),r.z+=t*(p[6]*m+p[7]*x+p[8]*v),o.x+=i.x*t,o.y+=i.y*t,o.z+=i.z*t,c.integrate(this.angularVelocity,t,this.angularFactor,c),e&&(n?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}Ft.idCounter=0;Ft.COLLIDE_EVENT_NAME="collide";Ft.DYNAMIC=e0.DYNAMIC;Ft.STATIC=e0.STATIC;Ft.KINEMATIC=e0.KINEMATIC;Ft.AWAKE=n0.AWAKE;Ft.SLEEPY=n0.SLEEPY;Ft.SLEEPING=n0.SLEEPING;Ft.wakeupEvent={type:"wakeup"};Ft.sleepyEvent={type:"sleepy"};Ft.sleepEvent={type:"sleep"};const r3=new k,o3=new mn,a3=new Vs,l3=new $i,c3=new $i,u3=new $i,h3=new k,d3=new k,f3=new k,p3=new k,m3=new k,g3=new k,x3=new k,v3=new k;class b3{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&Ft.STATIC)!==0||t.sleepState===Ft.SLEEPING)&&((e.type&Ft.STATIC)!==0||e.sleepState===Ft.SLEEPING))}intersectionTest(t,e,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,i):this.doBoundingSphereBroadphase(t,e,n,i)}doBoundingSphereBroadphase(t,e,n,i){const r=y3;e.position.vsub(t.position,r);const o=(t.boundingRadius+e.boundingRadius)**2;r.lengthSquared()<o&&(n.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,n,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),i.push(e))}makePairsUnique(t,e){const n=w3,i=_3,r=S3,o=t.length;for(let a=0;a!==o;a++)i[a]=t[a],r[a]=e[a];t.length=0,e.length=0;for(let a=0;a!==o;a++){const l=i[a].id,c=r[a].id,u=l<c?`${l},${c}`:`${c},${l}`;n[u]=a,n.keys.push(u)}for(let a=0;a!==n.keys.length;a++){const l=n.keys.pop(),c=n[l];t.push(i[c]),e.push(r[c]),delete n[l]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new k;t.position.vsub(e.position,n);const i=t.shapes[0],r=e.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const y3=new k;new k;new mn;new k;const w3={keys:[]},_3=[],S3=[];new k;new k;new k;class C3 extends b3{constructor(){super()}collisionPairs(t,e,n){const i=t.bodies,r=i.length;let o,a;for(let l=0;l!==r;l++)for(let c=0;c!==l;c++)o=i[l],a=i[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let i=0;i<t.bodies.length;i++){const r=t.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(e)&&n.push(r)}return n}}class ef{constructor(){this.rayFromWorld=new k,this.rayToWorld=new k,this.hitNormalWorld=new k,this.hitPointWorld=new k,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,i,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=o,this.distance=a}}let tC,eC,nC,sC,iC,rC,oC;const s0={CLOSEST:1,ANY:2,ALL:4};tC=Ot.types.SPHERE;eC=Ot.types.PLANE;nC=Ot.types.BOX;sC=Ot.types.CYLINDER;iC=Ot.types.CONVEXPOLYHEDRON;rC=Ot.types.HEIGHTFIELD;oC=Ot.types.TRIMESH;class _n{get[tC](){return this._intersectSphere}get[eC](){return this._intersectPlane}get[nC](){return this._intersectBox}get[sC](){return this._intersectConvex}get[iC](){return this._intersectConvex}get[rC](){return this._intersectHeightfield}get[oC](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new k),e===void 0&&(e=new k),this.from=t.clone(),this.to=e.clone(),this.direction=new k,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=_n.ANY,this.result=new ef,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||_n.ANY,this.result=e.result||new ef,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(Vw),gg.length=0,t.broadphase.aabbQuery(t,Vw,gg),this.intersectBodies(gg),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const i=I3,r=T3;for(let o=0,a=t.shapes.length;o<a;o++){const l=t.shapes[o];if(!(n&&!l.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],i),i.vadd(t.position,i),this.intersectShape(l,r,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,i=t.length;!this.result.shouldStop&&n<i;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,i){const r=this.from;if(B3(r,this.direction,n)>t.boundingSphereRadius)return;const a=this[t.type];a&&a.call(this,t,e,n,i,t)}_intersectBox(t,e,n,i,r){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,i,r)}_intersectPlane(t,e,n,i,r){const o=this.from,a=this.to,l=this.direction,c=new k(0,0,1);e.vmult(c,c);const u=new k;o.vsub(n,u);const h=u.dot(c);a.vsub(n,u);const d=u.dot(c);if(h*d>0||o.distanceTo(a)<h)return;const f=c.dot(l);if(Math.abs(f)<this.precision)return;const p=new k,g=new k,m=new k;o.vsub(n,p);const x=-c.dot(p)/f;l.scale(x,g),o.vadd(g,m),this.reportIntersection(c,m,r,i,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,i=this.to,r=this.from;e.x=Math.min(i.x,r.x),e.y=Math.min(i.y,r.y),e.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(t,e,n,i,r){t.data,t.elementSize;const o=E3;o.from.copy(this.from),o.to.copy(this.to),Re.pointToLocalFrame(n,e,o.from,o.from),Re.pointToLocalFrame(n,e,o.to,o.to),o.updateDirection();const a=M3;let l,c,u,h;l=c=0,u=h=t.data.length-1;const d=new Vs;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,a,!0),u=Math.min(u,a[0]+1),h=Math.min(h,a[1]+1);for(let f=l;f<u;f++)for(let p=c;p<h;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,d),!!d.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),Re.pointToWorldFrame(n,e,t.pillarOffset,_d),this._intersectConvex(t.pillarConvex,e,_d,i,r,Ww),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),Re.pointToWorldFrame(n,e,t.pillarOffset,_d),this._intersectConvex(t.pillarConvex,e,_d,i,r,Ww)}}}_intersectSphere(t,e,n,i,r){const o=this.from,a=this.to,l=t.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,u=2*((a.x-o.x)*(o.x-n.x)+(a.y-o.y)*(o.y-n.y)+(a.z-o.z)*(o.z-n.z)),h=(o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-l**2,d=u**2-4*c*h,f=k3,p=A3;if(!(d<0))if(d===0)o.lerp(a,d,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1);else{const g=(-u-Math.sqrt(d))/(2*c),m=(-u+Math.sqrt(d))/(2*c);if(g>=0&&g<=1&&(o.lerp(a,g,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1)),this.result.shouldStop)return;m>=0&&m<=1&&(o.lerp(a,m,f),f.vsub(n,p),p.normalize(),this.reportIntersection(p,f,r,i,-1))}}_intersectConvex(t,e,n,i,r,o){const a=N3,l=Gw,c=o&&o.faceList||null,u=t.faces,h=t.vertices,d=t.faceNormals,f=this.direction,p=this.from,g=this.to,m=p.distanceTo(g),x=c?c.length:u.length,v=this.result;for(let y=0;!v.shouldStop&&y<x;y++){const b=c?c[y]:y,w=u[b],S=d[b],C=e,_=n;l.copy(h[w[0]]),C.vmult(l,l),l.vadd(_,l),l.vsub(p,l),C.vmult(S,a);const I=f.dot(a);if(Math.abs(I)<this.precision)continue;const T=a.dot(l)/I;if(!(T<0)){f.scale(T,bs),bs.vadd(p,bs),Ti.copy(h[w[0]]),C.vmult(Ti,Ti),_.vadd(Ti,Ti);for(let N=1;!v.shouldStop&&N<w.length-1;N++){Zi.copy(h[w[N]]),Ji.copy(h[w[N+1]]),C.vmult(Zi,Zi),C.vmult(Ji,Ji),_.vadd(Zi,Zi),_.vadd(Ji,Ji);const P=bs.distanceTo(p);!(_n.pointInTriangle(bs,Ti,Zi,Ji)||_n.pointInTriangle(bs,Zi,Ti,Ji))||P>m||this.reportIntersection(a,bs,r,i,b)}}}}_intersectTrimesh(t,e,n,i,r,o){const a=R3,l=O3,c=z3,u=Gw,h=$3,d=D3,f=F3,p=P3,g=L3,m=t.indices;t.vertices;const x=this.from,v=this.to,y=this.direction;c.position.copy(n),c.quaternion.copy(e),Re.vectorToLocalFrame(n,e,y,h),Re.pointToLocalFrame(n,e,x,d),Re.pointToLocalFrame(n,e,v,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,f.vsub(d,h),h.normalize();const b=d.distanceSquared(f);t.tree.rayQuery(this,c,l);for(let w=0,S=l.length;!this.result.shouldStop&&w!==S;w++){const C=l[w];t.getNormal(C,a),t.getVertex(m[C*3],Ti),Ti.vsub(d,u);const _=h.dot(a),I=a.dot(u)/_;if(I<0)continue;h.scale(I,bs),bs.vadd(d,bs),t.getVertex(m[C*3+1],Zi),t.getVertex(m[C*3+2],Ji);const T=bs.distanceSquared(d);!(_n.pointInTriangle(bs,Zi,Ti,Ji)||_n.pointInTriangle(bs,Ti,Zi,Ji))||T>b||(Re.vectorToWorldFrame(e,a,g),Re.pointToWorldFrame(n,e,bs,p),this.reportIntersection(g,p,r,i,C))}l.length=0}reportIntersection(t,e,n,i,r){const o=this.from,a=this.to,l=o.distanceTo(e),c=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(c.hitFaceIndex=typeof r<"u"?r:-1,this.mode){case _n.ALL:this.hasHit=!0,c.set(o,a,t,e,n,i,l),c.hasHit=!0,this.callback(c);break;case _n.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l));break;case _n.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l),c.shouldStop=!0;break}}static pointInTriangle(t,e,n,i){i.vsub(e,qo),n.vsub(e,Ac),t.vsub(e,xg);const r=qo.dot(qo),o=qo.dot(Ac),a=qo.dot(xg),l=Ac.dot(Ac),c=Ac.dot(xg);let u,h;return(u=l*a-o*c)>=0&&(h=r*c-o*a)>=0&&u+h<r*l-o*o}}_n.CLOSEST=s0.CLOSEST;_n.ANY=s0.ANY;_n.ALL=s0.ALL;const Vw=new Vs,gg=[],Ac=new k,xg=new k,I3=new k,T3=new mn,bs=new k,Ti=new k,Zi=new k,Ji=new k;new k;new ef;const Ww={faceList:[0]},_d=new k,E3=new _n,M3=[],k3=new k,A3=new k,N3=new k;new k;new k;const Gw=new k,R3=new k,$3=new k,D3=new k,F3=new k,L3=new k,P3=new k;new Vs;const O3=[],z3=new Re,qo=new k,Sd=new k;function B3(s,t,e){e.vsub(s,qo);const n=qo.dot(t);return t.scale(n,Sd),Sd.vadd(s,Sd),e.distanceTo(Sd)}class aC{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class Vf{constructor(t,e,n){n===void 0&&(n={}),n=aC.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Vf.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Vf.idCounter=0;class Hw{constructor(){this.spatial=new k,this.rotational=new k}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class $a{constructor(t,e,n,i){n===void 0&&(n=-1e6),i===void 0&&(i=1e6),this.id=$a.idCounter++,this.minForce=n,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Hw,this.jacobianElementB=new Hw,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const i=e,r=t,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*r*(1+4*i))}computeB(t,e,n){const i=this.computeGW(),r=this.computeGq(),o=this.computeGiMf();return-r*t-i*e-o*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,o=i.position;return t.spatial.dot(r)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,o=i.velocity,a=n.angularVelocity,l=i.angularVelocity;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,o=i.vlambda,a=n.wlambda,l=i.wlambda;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,o=n.torque,a=i.force,l=i.torque,c=n.invMassSolve,u=i.invMassSolve;return r.scale(c,qw),a.scale(u,Xw),n.invInertiaWorldSolve.vmult(o,jw),i.invInertiaWorldSolve.vmult(l,Kw),t.multiplyVectors(qw,jw)+e.multiplyVectors(Xw,Kw)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,o=i.invMassSolve,a=n.invInertiaWorldSolve,l=i.invInertiaWorldSolve;let c=r+o;return a.vmult(t.rotational,Cd),c+=Cd.dot(t.rotational),l.vmult(e.rotational,Cd),c+=Cd.dot(e.rotational),c}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj,o=U3;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*t,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,o),r.wlambda.addScaledVector(t,o,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}$a.idCounter=0;const qw=new k,Xw=new k,jw=new k,Kw=new k,Cd=new k,U3=new k;class Xd extends $a{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new k,this.rj=new k,this.ni=new k}computeB(t){const e=this.a,n=this.b,i=this.bi,r=this.bj,o=this.ri,a=this.rj,l=V3,c=W3,u=i.velocity,h=i.angularVelocity;i.force,i.torque;const d=r.velocity,f=r.angularVelocity;r.force,r.torque;const p=G3,g=this.jacobianElementA,m=this.jacobianElementB,x=this.ni;o.cross(x,l),a.cross(x,c),x.negate(g.spatial),l.negate(g.rotational),m.spatial.copy(x),m.rotational.copy(c),p.copy(r.position),p.vadd(a,p),p.vsub(i.position,p),p.vsub(o,p);const v=x.dot(p),y=this.restitution+1,b=y*d.dot(x)-y*u.dot(x)+f.dot(c)-h.dot(l),w=this.computeGiMf();return-v*e-b*n-t*w}getImpactVelocityAlongNormal(){const t=H3,e=q3,n=X3,i=j3,r=K3;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,r),this.ni.dot(r)}}const V3=new k,W3=new k,G3=new k,H3=new k,q3=new k,X3=new k,j3=new k,K3=new k;class Y3 extends Vf{constructor(t,e,n,i,r){e===void 0&&(e=new k),i===void 0&&(i=new k),r===void 0&&(r=1e6),super(t,n),this.pivotA=e.clone(),this.pivotB=i.clone();const o=this.equationX=new Xd(t,n),a=this.equationY=new Xd(t,n),l=this.equationZ=new Xd(t,n);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-r,o.maxForce=a.maxForce=l.maxForce=r,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,n=this.equationX,i=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,n.ri),e.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),r.ri.copy(n.ri),r.rj.copy(n.rj)}}new k;new k;class Yw extends $a{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6;super(t,e,-i,i),this.axisA=n.axisA?n.axisA.clone():new k(1,0,0),this.axisB=n.axisB?n.axisB.clone():new k(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,n=this.b,i=this.axisA,r=this.axisB,o=Z3,a=J3,l=this.jacobianElementA,c=this.jacobianElementB;i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o);const u=Math.cos(this.maxAngle)-i.dot(r),h=this.computeGW(),d=this.computeGiMf();return-u*e-h*n-t*d}}const Z3=new k,J3=new k;new k;new k;new k;new k;class Q3 extends $a{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,-n,n),this.axisA=new k,this.axisB=new k,this.targetVelocity=0}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.axisA,i=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;r.rotational.copy(n),i.negate(o.rotational);const a=this.computeGW()-this.targetVelocity,l=this.computeGiMf();return-a*e-t*l}}class Id extends Y3{constructor(t,e,n){n===void 0&&(n={});const i=typeof n.maxForce<"u"?n.maxForce:1e6,r=n.pivotA?n.pivotA.clone():new k,o=n.pivotB?n.pivotB.clone():new k;super(t,r,e,o,i),(this.axisA=n.axisA?n.axisA.clone():new k(1,0,0)).normalize(),(this.axisB=n.axisB?n.axisB.clone():new k(1,0,0)).normalize(),this.collideConnected=!!n.collideConnected;const c=this.rotationalEquation1=new Yw(t,e,n),u=this.rotationalEquation2=new Yw(t,e,n),h=this.motorEquation=new Q3(t,e,i);h.enabled=!1,this.equations.push(c,u,h)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,n=this.motorEquation,i=this.rotationalEquation1,r=this.rotationalEquation2,o=tP,a=eP,l=this.axisA,c=this.axisB;super.update(),t.quaternion.vmult(l,o),e.quaternion.vmult(c,a),o.tangents(i.axisA,r.axisA),i.axisB.copy(a),r.axisB.copy(a),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,n.axisA),e.quaternion.vmult(this.axisB,n.axisB))}}const tP=new k,eP=new k;class Zw extends $a{constructor(t,e,n){super(t,e,-n,n),this.ri=new k,this.rj=new k,this.t=new k}computeB(t){this.a;const e=this.b;this.bi,this.bj;const n=this.ri,i=this.rj,r=nP,o=sP,a=this.t;n.cross(a,r),i.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;a.negate(l.spatial),r.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o);const u=this.computeGW(),h=this.computeGiMf();return-u*e-t*h}}const nP=new k,sP=new k;class Wf{constructor(t,e,n){n=aC.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Wf.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}Wf.idCounter=0;class yo{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=yo.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}yo.idCounter=0;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new _n;new k;new k;new k;new k(1,0,0),new k(0,1,0),new k(0,0,1);new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;class Td extends Ot{constructor(t){if(super({type:Ot.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new k);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,i){const r=this.radius,o=["x","y","z"];for(let a=0;a<o.length;a++){const l=o[a];n[l]=t[l]-r,i[l]=t[l]+r}}}new k;new k;new k;new k;new k;new k;new k;new k;new k;class iP extends Ot{constructor(){super({type:Ot.types.PLANE}),this.worldNormal=new k,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new k),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,i){Ir.set(0,0,1),e.vmult(Ir,Ir);const r=Number.MAX_VALUE;n.set(-r,-r,-r),i.set(r,r,r),Ir.x===1?i.x=t.x:Ir.x===-1&&(n.x=t.x),Ir.y===1?i.y=t.y:Ir.y===-1&&(n.y=t.y),Ir.z===1?i.z=t.z:Ir.z===-1&&(n.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const Ir=new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new k;new Vs;new k;new Vs;new k;new k;new k;new k;new k;new k;new k;new Vs;new k;new Re;new Vs;class rP{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class oP extends rP{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const i=this.iterations,r=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=e.bodies,c=l.length,u=t;let h,d,f,p,g,m;if(a!==0)for(let b=0;b!==c;b++)l[b].updateSolveMassProperties();const x=lP,v=cP,y=aP;x.length=a,v.length=a,y.length=a;for(let b=0;b!==a;b++){const w=o[b];y[b]=0,v[b]=w.computeB(u),x[b]=1/w.computeC()}if(a!==0){for(let S=0;S!==c;S++){const C=l[S],_=C.vlambda,I=C.wlambda;_.set(0,0,0),I.set(0,0,0)}for(n=0;n!==i;n++){p=0;for(let S=0;S!==a;S++){const C=o[S];h=v[S],d=x[S],m=y[S],g=C.computeGWlambda(),f=d*(h-g-C.eps*m),m+f<C.minForce?f=C.minForce-m:m+f>C.maxForce&&(f=C.maxForce-m),y[S]+=f,p+=f>0?f:-f,C.addToWlambda(f)}if(p*p<r)break}for(let S=0;S!==c;S++){const C=l[S],_=C.velocity,I=C.angularVelocity;C.vlambda.vmul(C.linearFactor,C.vlambda),_.vadd(C.vlambda,_),C.wlambda.vmul(C.angularFactor,C.wlambda),I.vadd(C.wlambda,I)}let b=o.length;const w=1/u;for(;b--;)o[b].multiplier=y[b]*w}return n}}const aP=[],lP=[],cP=[];Ft.STATIC;class uP{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class hP extends uP{constructor(){super(...arguments),this.type=k}constructObject(){return new k}}const je={sphereSphere:Ot.types.SPHERE,spherePlane:Ot.types.SPHERE|Ot.types.PLANE,boxBox:Ot.types.BOX|Ot.types.BOX,sphereBox:Ot.types.SPHERE|Ot.types.BOX,planeBox:Ot.types.PLANE|Ot.types.BOX,convexConvex:Ot.types.CONVEXPOLYHEDRON,sphereConvex:Ot.types.SPHERE|Ot.types.CONVEXPOLYHEDRON,planeConvex:Ot.types.PLANE|Ot.types.CONVEXPOLYHEDRON,boxConvex:Ot.types.BOX|Ot.types.CONVEXPOLYHEDRON,sphereHeightfield:Ot.types.SPHERE|Ot.types.HEIGHTFIELD,boxHeightfield:Ot.types.BOX|Ot.types.HEIGHTFIELD,convexHeightfield:Ot.types.CONVEXPOLYHEDRON|Ot.types.HEIGHTFIELD,sphereParticle:Ot.types.PARTICLE|Ot.types.SPHERE,planeParticle:Ot.types.PLANE|Ot.types.PARTICLE,boxParticle:Ot.types.BOX|Ot.types.PARTICLE,convexParticle:Ot.types.PARTICLE|Ot.types.CONVEXPOLYHEDRON,cylinderCylinder:Ot.types.CYLINDER,sphereCylinder:Ot.types.SPHERE|Ot.types.CYLINDER,planeCylinder:Ot.types.PLANE|Ot.types.CYLINDER,boxCylinder:Ot.types.BOX|Ot.types.CYLINDER,convexCylinder:Ot.types.CONVEXPOLYHEDRON|Ot.types.CYLINDER,heightfieldCylinder:Ot.types.HEIGHTFIELD|Ot.types.CYLINDER,particleCylinder:Ot.types.PARTICLE|Ot.types.CYLINDER,sphereTrimesh:Ot.types.SPHERE|Ot.types.TRIMESH,planeTrimesh:Ot.types.PLANE|Ot.types.TRIMESH};class dP{get[je.sphereSphere](){return this.sphereSphere}get[je.spherePlane](){return this.spherePlane}get[je.boxBox](){return this.boxBox}get[je.sphereBox](){return this.sphereBox}get[je.planeBox](){return this.planeBox}get[je.convexConvex](){return this.convexConvex}get[je.sphereConvex](){return this.sphereConvex}get[je.planeConvex](){return this.planeConvex}get[je.boxConvex](){return this.boxConvex}get[je.sphereHeightfield](){return this.sphereHeightfield}get[je.boxHeightfield](){return this.boxHeightfield}get[je.convexHeightfield](){return this.convexHeightfield}get[je.sphereParticle](){return this.sphereParticle}get[je.planeParticle](){return this.planeParticle}get[je.boxParticle](){return this.boxParticle}get[je.convexParticle](){return this.convexParticle}get[je.cylinderCylinder](){return this.convexConvex}get[je.sphereCylinder](){return this.sphereConvex}get[je.planeCylinder](){return this.planeConvex}get[je.boxCylinder](){return this.boxConvex}get[je.convexCylinder](){return this.convexConvex}get[je.heightfieldCylinder](){return this.heightfieldCylinder}get[je.particleCylinder](){return this.particleCylinder}get[je.sphereTrimesh](){return this.sphereTrimesh}get[je.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new hP,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,i,r,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=t,a.bj=e):a=new Xd(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&i.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=n.material||t.material,u=i.material||e.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(a.restitution=c.restitution*u.restitution),a.si=r||n,a.sj=o||i,a}createFrictionEquationsFromContact(t,e){const n=t.bi,i=t.bj,r=t.si,o=t.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const u=r.material||n.material,h=o.material||i.material;if(u&&h&&u.friction>=0&&h.friction>=0&&(c=u.friction*h.friction),c>0){const d=c*(a.frictionGravity||a.gravity).length();let f=n.invMass+i.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,g=p.length?p.pop():new Zw(n,i,d*f),m=p.length?p.pop():new Zw(n,i,d*f);return g.bi=m.bi=n,g.bj=m.bj=i,g.minForce=m.minForce=-d*f,g.maxForce=m.maxForce=d*f,g.ri.copy(t.ri),g.rj.copy(t.rj),m.ri.copy(t.ri),m.rj.copy(t.rj),t.ni.tangents(g.t,m.t),g.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),m.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),g.enabled=m.enabled=t.enabled,e.push(g,m),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];Oo.setZero(),ul.setZero(),hl.setZero();const r=e.bi;e.bj;for(let a=0;a!==t;a++)e=this.result[this.result.length-1-a],e.bi!==r?(Oo.vadd(e.ni,Oo),ul.vadd(e.ri,ul),hl.vadd(e.rj,hl)):(Oo.vsub(e.ni,Oo),ul.vadd(e.rj,ul),hl.vadd(e.ri,hl));const o=1/t;ul.scale(o,n.ri),hl.scale(o,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),Oo.normalize(),Oo.tangents(n.t,i.t)}getContacts(t,e,n,i,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=i,this.frictionResult=o;const l=mP,c=gP,u=fP,h=pP;for(let d=0,f=t.length;d!==f;d++){const p=t[d],g=e[d];let m=null;p.material&&g.material&&(m=n.getContactMaterial(p.material,g.material)||null);const x=p.type&Ft.KINEMATIC&&g.type&Ft.STATIC||p.type&Ft.STATIC&&g.type&Ft.KINEMATIC||p.type&Ft.KINEMATIC&&g.type&Ft.KINEMATIC;for(let v=0;v<p.shapes.length;v++){p.quaternion.mult(p.shapeOrientations[v],l),p.quaternion.vmult(p.shapeOffsets[v],u),u.vadd(p.position,u);const y=p.shapes[v];for(let b=0;b<g.shapes.length;b++){g.quaternion.mult(g.shapeOrientations[b],c),g.quaternion.vmult(g.shapeOffsets[b],h),h.vadd(g.position,h);const w=g.shapes[b];if(!(y.collisionFilterMask&w.collisionFilterGroup&&w.collisionFilterMask&y.collisionFilterGroup)||u.distanceTo(h)>y.boundingSphereRadius+w.boundingSphereRadius)continue;let S=null;y.material&&w.material&&(S=n.getContactMaterial(y.material,w.material)||null),this.currentContactMaterial=S||m||n.defaultContactMaterial;const C=y.type|w.type,_=this[C];if(_){let I=!1;y.type<w.type?I=_.call(this,y,w,u,h,l,c,p,g,y,w,x):I=_.call(this,w,y,h,u,c,l,g,p,y,w,x),I&&x&&(n.shapeOverlapKeeper.set(y.id,w.id),n.bodyOverlapKeeper.set(p.id,g.id))}}}}}sphereSphere(t,e,n,i,r,o,a,l,c,u,h){if(h)return n.distanceSquared(i)<(t.radius+e.radius)**2;const d=this.createContactEquation(a,l,t,e,c,u);i.vsub(n,d.ni),d.ni.normalize(),d.ri.copy(d.ni),d.rj.copy(d.ni),d.ri.scale(t.radius,d.ri),d.rj.scale(-e.radius,d.rj),d.ri.vadd(n,d.ri),d.ri.vsub(a.position,d.ri),d.rj.vadd(i,d.rj),d.rj.vsub(l.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}spherePlane(t,e,n,i,r,o,a,l,c,u,h){const d=this.createContactEquation(a,l,t,e,c,u);if(d.ni.set(0,0,1),o.vmult(d.ni,d.ni),d.ni.negate(d.ni),d.ni.normalize(),d.ni.scale(t.radius,d.ri),n.vsub(i,Ed),d.ni.scale(d.ni.dot(Ed),Jw),Ed.vsub(Jw,d.rj),-Ed.dot(d.ni)<=t.radius){if(h)return!0;const f=d.ri,p=d.rj;f.vadd(n,f),f.vsub(a.position,f),p.vadd(i,p),p.vsub(l.position,p),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}boxBox(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}sphereBox(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool,f=VP;n.vsub(i,Md),e.getSideNormals(f,o);const p=t.radius;let g=!1;const m=GP,x=HP,v=qP;let y=null,b=0,w=0,S=0,C=null;for(let R=0,V=f.length;R!==V&&g===!1;R++){const L=zP;L.copy(f[R]);const $=L.length();L.normalize();const U=Md.dot(L);if(U<$+p&&U>0){const H=BP,W=UP;H.copy(f[(R+1)%3]),W.copy(f[(R+2)%3]);const Z=H.length(),it=W.length();H.normalize(),W.normalize();const lt=Md.dot(H),J=Md.dot(W);if(lt<Z&&lt>-Z&&J<it&&J>-it){const vt=Math.abs(U-$-p);if((C===null||vt<C)&&(C=vt,w=lt,S=J,y=$,m.copy(L),x.copy(H),v.copy(W),b++,h))return!0}}}if(b){g=!0;const R=this.createContactEquation(a,l,t,e,c,u);m.scale(-p,R.ri),R.ni.copy(m),R.ni.negate(R.ni),m.scale(y,m),x.scale(w,x),m.vadd(x,m),v.scale(S,v),m.vadd(v,R.rj),R.ri.vadd(n,R.ri),R.ri.vsub(a.position,R.ri),R.rj.vadd(i,R.rj),R.rj.vsub(l.position,R.rj),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}let _=d.get();const I=WP;for(let R=0;R!==2&&!g;R++)for(let V=0;V!==2&&!g;V++)for(let L=0;L!==2&&!g;L++)if(_.set(0,0,0),R?_.vadd(f[0],_):_.vsub(f[0],_),V?_.vadd(f[1],_):_.vsub(f[1],_),L?_.vadd(f[2],_):_.vsub(f[2],_),i.vadd(_,I),I.vsub(n,I),I.lengthSquared()<p*p){if(h)return!0;g=!0;const $=this.createContactEquation(a,l,t,e,c,u);$.ri.copy(I),$.ri.normalize(),$.ni.copy($.ri),$.ri.scale(p,$.ri),$.rj.copy(_),$.ri.vadd(n,$.ri),$.ri.vsub(a.position,$.ri),$.rj.vadd(i,$.rj),$.rj.vsub(l.position,$.rj),this.result.push($),this.createFrictionEquationsFromContact($,this.frictionResult)}d.release(_),_=null;const T=d.get(),N=d.get(),P=d.get(),E=d.get(),M=d.get(),A=f.length;for(let R=0;R!==A&&!g;R++)for(let V=0;V!==A&&!g;V++)if(R%3!==V%3){f[V].cross(f[R],T),T.normalize(),f[R].vadd(f[V],N),P.copy(n),P.vsub(N,P),P.vsub(i,P);const L=P.dot(T);T.scale(L,E);let $=0;for(;$===R%3||$===V%3;)$++;M.copy(n),M.vsub(E,M),M.vsub(N,M),M.vsub(i,M);const U=Math.abs(L),H=M.length();if(U<f[$].length()&&H<p){if(h)return!0;g=!0;const W=this.createContactEquation(a,l,t,e,c,u);N.vadd(E,W.rj),W.rj.copy(W.rj),M.negate(W.ni),W.ni.normalize(),W.ri.copy(W.rj),W.ri.vadd(i,W.ri),W.ri.vsub(n,W.ri),W.ri.normalize(),W.ri.scale(p,W.ri),W.ri.vadd(n,W.ri),W.ri.vsub(a.position,W.ri),W.rj.vadd(i,W.rj),W.rj.vsub(l.position,W.rj),this.result.push(W),this.createFrictionEquationsFromContact(W,this.frictionResult)}}d.release(T,N,P,E,M)}planeBox(t,e,n,i,r,o,a,l,c,u,h){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,h)}convexConvex(t,e,n,i,r,o,a,l,c,u,h,d,f){const p=aO;if(!(n.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,r,i,o,p,d,f)){const g=[],m=lO;t.clipAgainstHull(n,r,e,i,o,p,-100,100,g);let x=0;for(let v=0;v!==g.length;v++){if(h)return!0;const y=this.createContactEquation(a,l,t,e,c,u),b=y.ri,w=y.rj;p.negate(y.ni),g[v].normal.negate(m),m.scale(g[v].depth,m),g[v].point.vadd(m,b),w.copy(g[v].point),b.vsub(n,b),w.vsub(i,w),b.vadd(n,b),b.vsub(a.position,b),w.vadd(i,w),w.vsub(l.position,w),this.result.push(y),x++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(y,this.frictionResult)}this.enableFrictionReduction&&x&&this.createFrictionFromAverage(x)}}sphereConvex(t,e,n,i,r,o,a,l,c,u,h){const d=this.v3pool;n.vsub(i,XP);const f=e.faceNormals,p=e.faces,g=e.vertices,m=t.radius;let x=!1;for(let v=0;v!==g.length;v++){const y=g[v],b=ZP;o.vmult(y,b),i.vadd(b,b);const w=YP;if(b.vsub(n,w),w.lengthSquared()<m*m){if(h)return!0;x=!0;const S=this.createContactEquation(a,l,t,e,c,u);S.ri.copy(w),S.ri.normalize(),S.ni.copy(S.ri),S.ri.scale(m,S.ri),b.vsub(i,S.rj),S.ri.vadd(n,S.ri),S.ri.vsub(a.position,S.ri),S.rj.vadd(i,S.rj),S.rj.vsub(l.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult);return}}for(let v=0,y=p.length;v!==y&&x===!1;v++){const b=f[v],w=p[v],S=JP;o.vmult(b,S);const C=QP;o.vmult(g[w[0]],C),C.vadd(i,C);const _=tO;S.scale(-m,_),n.vadd(_,_);const I=eO;_.vsub(C,I);const T=I.dot(S),N=nO;if(n.vsub(C,N),T<0&&N.dot(S)>0){const P=[];for(let E=0,M=w.length;E!==M;E++){const A=d.get();o.vmult(g[w[E]],A),i.vadd(A,A),P.push(A)}if(OP(P,S,n)){if(h)return!0;x=!0;const E=this.createContactEquation(a,l,t,e,c,u);S.scale(-m,E.ri),S.negate(E.ni);const M=d.get();S.scale(-T,M);const A=d.get();S.scale(-m,A),n.vsub(i,E.rj),E.rj.vadd(A,E.rj),E.rj.vadd(M,E.rj),E.rj.vadd(i,E.rj),E.rj.vsub(l.position,E.rj),E.ri.vadd(n,E.ri),E.ri.vsub(a.position,E.ri),d.release(M),d.release(A),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult);for(let R=0,V=P.length;R!==V;R++)d.release(P[R]);return}else for(let E=0;E!==w.length;E++){const M=d.get(),A=d.get();o.vmult(g[w[(E+1)%w.length]],M),o.vmult(g[w[(E+2)%w.length]],A),i.vadd(M,M),i.vadd(A,A);const R=jP;A.vsub(M,R);const V=KP;R.unit(V);const L=d.get(),$=d.get();n.vsub(M,$);const U=$.dot(V);V.scale(U,L),L.vadd(M,L);const H=d.get();if(L.vsub(n,H),U>0&&U*U<R.lengthSquared()&&H.lengthSquared()<m*m){if(h)return!0;const W=this.createContactEquation(a,l,t,e,c,u);L.vsub(i,W.rj),L.vsub(n,W.ni),W.ni.normalize(),W.ni.scale(m,W.ri),W.rj.vadd(i,W.rj),W.rj.vsub(l.position,W.rj),W.ri.vadd(n,W.ri),W.ri.vsub(a.position,W.ri),this.result.push(W),this.createFrictionEquationsFromContact(W,this.frictionResult);for(let Z=0,it=P.length;Z!==it;Z++)d.release(P[Z]);d.release(M),d.release(A),d.release(L),d.release(H),d.release($);return}d.release(M),d.release(A),d.release(L),d.release(H),d.release($)}for(let E=0,M=P.length;E!==M;E++)d.release(P[E])}}}planeConvex(t,e,n,i,r,o,a,l,c,u,h){const d=sO,f=iO;f.set(0,0,1),r.vmult(f,f);let p=0;const g=rO;for(let m=0;m!==e.vertices.length;m++)if(d.copy(e.vertices[m]),o.vmult(d,d),i.vadd(d,d),d.vsub(n,g),f.dot(g)<=0){if(h)return!0;const v=this.createContactEquation(a,l,t,e,c,u),y=oO;f.scale(f.dot(g),y),d.vsub(y,y),y.vsub(n,v.ri),v.ni.copy(f),d.vsub(i,v.rj),v.ri.vadd(n,v.ri),v.ri.vsub(a.position,v.ri),v.rj.vadd(i,v.rj),v.rj.vsub(l.position,v.rj),this.result.push(v),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}sphereHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=t.radius,p=e.elementSize,g=yO,m=bO;Re.pointToLocalFrame(i,o,n,m);let x=Math.floor((m.x-f)/p)-1,v=Math.ceil((m.x+f)/p)+1,y=Math.floor((m.y-f)/p)-1,b=Math.ceil((m.y+f)/p)+1;if(v<0||b<0||x>d.length||y>d[0].length)return;x<0&&(x=0),v<0&&(v=0),y<0&&(y=0),b<0&&(b=0),x>=d.length&&(x=d.length-1),v>=d.length&&(v=d.length-1),b>=d[0].length&&(b=d[0].length-1),y>=d[0].length&&(y=d[0].length-1);const w=[];e.getRectMinMax(x,y,v,b,w);const S=w[0],C=w[1];if(m.z-f>C||m.z+f<S)return;const _=this.result;for(let I=x;I<v;I++)for(let T=y;T<b;T++){const N=_.length;let P=!1;if(e.getConvexTrianglePillar(I,T,!1),Re.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(P=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&P||(e.getConvexTrianglePillar(I,T,!0),Re.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(P=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,h)),h&&P))return!0;if(_.length-N>2)return}}boxHeightfield(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexHeightfield(t,e,n,i,r,o,a,l,c,u,h){const d=e.data,f=e.elementSize,p=t.boundingSphereRadius,g=xO,m=vO,x=gO;Re.pointToLocalFrame(i,o,n,x);let v=Math.floor((x.x-p)/f)-1,y=Math.ceil((x.x+p)/f)+1,b=Math.floor((x.y-p)/f)-1,w=Math.ceil((x.y+p)/f)+1;if(y<0||w<0||v>d.length||b>d[0].length)return;v<0&&(v=0),y<0&&(y=0),b<0&&(b=0),w<0&&(w=0),v>=d.length&&(v=d.length-1),y>=d.length&&(y=d.length-1),w>=d[0].length&&(w=d[0].length-1),b>=d[0].length&&(b=d[0].length-1);const S=[];e.getRectMinMax(v,b,y,w,S);const C=S[0],_=S[1];if(!(x.z-p>_||x.z+p<C))for(let I=v;I<y;I++)for(let T=b;T<w;T++){let N=!1;if(e.getConvexTrianglePillar(I,T,!1),Re.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(N=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&N||(e.getConvexTrianglePillar(I,T,!0),Re.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(N=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,h,m,null)),h&&N))return!0}}sphereParticle(t,e,n,i,r,o,a,l,c,u,h){const d=dO;if(d.set(0,0,1),i.vsub(n,d),d.lengthSquared()<=t.radius*t.radius){if(h)return!0;const p=this.createContactEquation(l,a,e,t,c,u);d.normalize(),p.rj.copy(d),p.rj.scale(t.radius,p.rj),p.ni.copy(d),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,n,i,r,o,a,l,c,u,h){const d=cO;d.set(0,0,1),a.quaternion.vmult(d,d);const f=uO;if(i.vsub(a.position,f),d.dot(f)<=0){if(h)return!0;const g=this.createContactEquation(l,a,e,t,c,u);g.ni.copy(d),g.ni.negate(g.ni),g.ri.set(0,0,0);const m=hO;d.scale(d.dot(i),m),i.vsub(m,m),g.rj.copy(m),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(t,e,n,i,r,o,a,l,c,u,h){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,h)}convexParticle(t,e,n,i,r,o,a,l,c,u,h){let d=-1;const f=pO,p=mO;let g=null;const m=fO;if(m.copy(i),m.vsub(n,m),r.conjugate(Qw),Qw.vmult(m,m),t.pointIsInside(m)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(let x=0,v=t.faces.length;x!==v;x++){const y=[t.worldVertices[t.faces[x][0]]],b=t.worldFaceNormals[x];i.vsub(y[0],t1);const w=-b.dot(t1);if(g===null||Math.abs(w)<Math.abs(g)){if(h)return!0;g=w,d=x,f.copy(b)}}if(d!==-1){const x=this.createContactEquation(l,a,e,t,c,u);f.scale(g,p),p.vadd(i,p),p.vsub(n,p),x.rj.copy(p),f.negate(x.ni),x.ri.set(0,0,0);const v=x.ri,y=x.rj;v.vadd(i,v),v.vsub(l.position,v),y.vadd(n,y),y.vsub(a.position,y),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexHeightfield(e,t,i,n,o,r,l,a,c,u,h)}particleCylinder(t,e,n,i,r,o,a,l,c,u,h){return this.convexParticle(e,t,i,n,o,r,l,a,c,u,h)}sphereTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=CP,f=IP,p=TP,g=EP,m=MP,x=kP,v=$P,y=SP,b=wP,w=DP;Re.pointToLocalFrame(i,o,n,m);const S=t.radius;v.lowerBound.set(m.x-S,m.y-S,m.z-S),v.upperBound.set(m.x+S,m.y+S,m.z+S),e.getTrianglesInAABB(v,w);const C=_P,_=t.radius*t.radius;for(let E=0;E<w.length;E++)for(let M=0;M<3;M++)if(e.getVertex(e.indices[w[E]*3+M],C),C.vsub(m,b),b.lengthSquared()<=_){if(y.copy(C),Re.pointToWorldFrame(i,o,y,C),C.vsub(n,b),h)return!0;let A=this.createContactEquation(a,l,t,e,c,u);A.ni.copy(b),A.ni.normalize(),A.ri.copy(A.ni),A.ri.scale(t.radius,A.ri),A.ri.vadd(n,A.ri),A.ri.vsub(a.position,A.ri),A.rj.copy(C),A.rj.vsub(l.position,A.rj),this.result.push(A),this.createFrictionEquationsFromContact(A,this.frictionResult)}for(let E=0;E<w.length;E++)for(let M=0;M<3;M++){e.getVertex(e.indices[w[E]*3+M],d),e.getVertex(e.indices[w[E]*3+(M+1)%3],f),f.vsub(d,p),m.vsub(f,x);const A=x.dot(p);m.vsub(d,x);let R=x.dot(p);if(R>0&&A<0&&(m.vsub(d,x),g.copy(p),g.normalize(),R=x.dot(g),g.scale(R,x),x.vadd(d,x),x.distanceTo(m)<t.radius)){if(h)return!0;const L=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,L.ni),L.ni.normalize(),L.ni.scale(t.radius,L.ri),L.ri.vadd(n,L.ri),L.ri.vsub(a.position,L.ri),Re.pointToWorldFrame(i,o,x,x),x.vsub(l.position,L.rj),Re.vectorToWorldFrame(o,L.ni,L.ni),Re.vectorToWorldFrame(o,L.ri,L.ri),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}}const I=AP,T=NP,N=RP,P=yP;for(let E=0,M=w.length;E!==M;E++){e.getTriangleVertices(w[E],I,T,N),e.getNormal(w[E],P),m.vsub(I,x);let A=x.dot(P);if(P.scale(A,x),m.vsub(x,x),A=x.distanceTo(m),_n.pointInTriangle(x,I,T,N)&&A<t.radius){if(h)return!0;let R=this.createContactEquation(a,l,t,e,c,u);x.vsub(m,R.ni),R.ni.normalize(),R.ni.scale(t.radius,R.ri),R.ri.vadd(n,R.ri),R.ri.vsub(a.position,R.ri),Re.pointToWorldFrame(i,o,x,x),x.vsub(l.position,R.rj),Re.vectorToWorldFrame(o,R.ni,R.ni),Re.vectorToWorldFrame(o,R.ri,R.ri),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult)}}w.length=0}planeTrimesh(t,e,n,i,r,o,a,l,c,u,h){const d=new k,f=xP;f.set(0,0,1),r.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,d);const g=new k;g.copy(d),Re.pointToWorldFrame(i,o,g,d);const m=vP;if(d.vsub(n,m),f.dot(m)<=0){if(h)return!0;const v=this.createContactEquation(a,l,t,e,c,u);v.ni.copy(f);const y=bP;f.scale(m.dot(f),y),d.vsub(y,y),v.ri.copy(y),v.ri.vsub(a.position,v.ri),v.rj.copy(d),v.rj.vsub(l.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}}}const Oo=new k,ul=new k,hl=new k,fP=new k,pP=new k,mP=new mn,gP=new mn,xP=new k,vP=new k,bP=new k,yP=new k,wP=new k;new k;const _P=new k,SP=new k,CP=new k,IP=new k,TP=new k,EP=new k,MP=new k,kP=new k,AP=new k,NP=new k,RP=new k,$P=new Vs,DP=[],Ed=new k,Jw=new k,FP=new k,LP=new k,PP=new k;function OP(s,t,e){let n=null;const i=s.length;for(let r=0;r!==i;r++){const o=s[r],a=FP;s[(r+1)%i].vsub(o,a);const l=LP;a.cross(t,l);const c=PP;e.vsub(o,c);const u=l.dot(c);if(n===null||u>0&&n===!0||u<=0&&n===!1){n===null&&(n=u>0);continue}else return!1}return!0}const Md=new k,zP=new k,BP=new k,UP=new k,VP=[new k,new k,new k,new k,new k,new k],WP=new k,GP=new k,HP=new k,qP=new k,XP=new k,jP=new k,KP=new k,YP=new k,ZP=new k,JP=new k,QP=new k,tO=new k,eO=new k,nO=new k;new k;new k;const sO=new k,iO=new k,rO=new k,oO=new k,aO=new k,lO=new k,cO=new k,uO=new k,hO=new k,dO=new k,Qw=new mn,fO=new k;new k;const pO=new k,t1=new k,mO=new k,gO=new k,xO=new k,vO=[0],bO=new k,yO=new k;class e1{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),i=this.current;let r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let o=i.length-1;o>=r;o--)i[o+1]=i[o];i[r]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,i=this.previous,r=n.length,o=i.length;let a=0;for(let l=0;l<r;l++){let c=!1;const u=n[l];for(;u>i[a];)a++;c=u===i[a],c||n1(t,u)}a=0;for(let l=0;l<o;l++){let c=!1;const u=i[l];for(;u>n[a];)a++;c=n[a]===u,c||n1(e,u)}}}function n1(s,t){s.push((t&4294901760)>>16,t&65535)}const vg=(s,t)=>s<t?`${s}-${t}`:`${t}-${s}`;class wO{constructor(){this.data={keys:[]}}get(t,e){const n=vg(t,e);return this.data[n]}set(t,e,n){const i=vg(t,e);this.get(t,e)||this.data.keys.push(i),this.data[i]=n}delete(t,e){const n=vg(t,e),i=this.data.keys.indexOf(n);i!==-1&&this.data.keys.splice(i,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const n=e.pop();delete t[n]}}}class _O extends QS{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new k,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new k,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new C3,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new oP,this.constraints=[],this.narrowphase=new dP(this),this.collisionMatrix=new Bw,this.collisionMatrixPrevious=new Bw,this.bodyOverlapKeeper=new e1,this.shapeOverlapKeeper=new e1,this.contactmaterials=[],this.contactMaterialTable=new wO,this.defaultMaterial=new yo("default"),this.defaultContactMaterial=new Wf(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof ef?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,i){return n===void 0&&(n={}),n.mode=_n.ALL,n.from=t,n.to=e,n.callback=i,bg.intersectWorld(this,n)}raycastAny(t,e,n,i){return n===void 0&&(n={}),n.mode=_n.ANY,n.from=t,n.to=e,n.result=i,bg.intersectWorld(this,n)}raycastClosest(t,e,n,i){return n===void 0&&(n={}),n.mode=_n.CLOSEST,n.from=t,n.to=e,n.result=i,bg.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof Ft&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,i=n.indexOf(t);if(i!==-1){n.splice(i,1);for(let r=0;r!==n.length;r++)n[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const i=e[n].shapes;for(let r=0;r<i.length;r++){const o=i[r];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=kn.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const i=n-this.lastCallTime;this.step(t,i,e)}this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=kn.now();let r=0;for(;this.accumulator>=t&&r<n&&(this.internalStep(t),this.accumulator-=t,r++,!(kn.now()-i>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=EO,i=MO,r=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,u=this.profile,h=Ft.DYNAMIC;let d=-1/0;const f=this.constraints,p=TO;l.length();const g=l.x,m=l.y,x=l.z;let v=0;for(c&&(d=kn.now()),v=0;v!==r;v++){const E=o[v];if(E.type===h){const M=E.force,A=E.mass;M.x+=A*g,M.y+=A*m,M.z+=A*x}}for(let E=0,M=this.subsystems.length;E!==M;E++)this.subsystems[E].update();c&&(d=kn.now()),n.length=0,i.length=0,this.broadphase.collisionPairs(this,n,i),c&&(u.broadphase=kn.now()-d);let y=f.length;for(v=0;v!==y;v++){const E=f[v];if(!E.collideConnected)for(let M=n.length-1;M>=0;M-=1)(E.bodyA===n[M]&&E.bodyB===i[M]||E.bodyB===n[M]&&E.bodyA===i[M])&&(n.splice(M,1),i.splice(M,1))}this.collisionMatrixTick(),c&&(d=kn.now());const b=IO,w=e.length;for(v=0;v!==w;v++)b.push(e[v]);e.length=0;const S=this.frictionEquations.length;for(v=0;v!==S;v++)p.push(this.frictionEquations[v]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,i,this,e,b,this.frictionEquations,p),c&&(u.narrowphase=kn.now()-d),c&&(d=kn.now()),v=0;v<this.frictionEquations.length;v++)a.addEquation(this.frictionEquations[v]);const C=e.length;for(let E=0;E!==C;E++){const M=e[E],A=M.bi,R=M.bj,V=M.si,L=M.sj;let $;if(A.material&&R.material?$=this.getContactMaterial(A.material,R.material)||this.defaultContactMaterial:$=this.defaultContactMaterial,$.friction,A.material&&R.material&&(A.material.friction>=0&&R.material.friction>=0&&A.material.friction*R.material.friction,A.material.restitution>=0&&R.material.restitution>=0&&(M.restitution=A.material.restitution*R.material.restitution)),a.addEquation(M),A.allowSleep&&A.type===Ft.DYNAMIC&&A.sleepState===Ft.SLEEPING&&R.sleepState===Ft.AWAKE&&R.type!==Ft.STATIC){const U=R.velocity.lengthSquared()+R.angularVelocity.lengthSquared(),H=R.sleepSpeedLimit**2;U>=H*2&&(A.wakeUpAfterNarrowphase=!0)}if(R.allowSleep&&R.type===Ft.DYNAMIC&&R.sleepState===Ft.SLEEPING&&A.sleepState===Ft.AWAKE&&A.type!==Ft.STATIC){const U=A.velocity.lengthSquared()+A.angularVelocity.lengthSquared(),H=A.sleepSpeedLimit**2;U>=H*2&&(R.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(A,R,!0),this.collisionMatrixPrevious.get(A,R)||(Nc.body=R,Nc.contact=M,A.dispatchEvent(Nc),Nc.body=A,R.dispatchEvent(Nc)),this.bodyOverlapKeeper.set(A.id,R.id),this.shapeOverlapKeeper.set(V.id,L.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=kn.now()-d,d=kn.now()),v=0;v!==r;v++){const E=o[v];E.wakeUpAfterNarrowphase&&(E.wakeUp(),E.wakeUpAfterNarrowphase=!1)}for(y=f.length,v=0;v!==y;v++){const E=f[v];E.update();for(let M=0,A=E.equations.length;M!==A;M++){const R=E.equations[M];a.addEquation(R)}}a.solve(t,this),c&&(u.solve=kn.now()-d),a.removeAllEquations();const _=Math.pow;for(v=0;v!==r;v++){const E=o[v];if(E.type&h){const M=_(1-E.linearDamping,t),A=E.velocity;A.scale(M,A);const R=E.angularVelocity;if(R){const V=_(1-E.angularDamping,t);R.scale(V,R)}}}this.dispatchEvent(CO),c&&(d=kn.now());const T=this.stepnumber%(this.quatNormalizeSkip+1)===0,N=this.quatNormalizeFast;for(v=0;v!==r;v++)o[v].integrate(t,T,N);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=kn.now()-d),this.stepnumber+=1,this.dispatchEvent(SO);let P=!0;if(this.allowSleep)for(P=!1,v=0;v!==r;v++){const E=o[v];E.sleepTick(this.time),E.sleepState!==Ft.SLEEPING&&(P=!0)}this.hasActiveBodies=P}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(Tr,Er),t){for(let r=0,o=Tr.length;r<o;r+=2)Rc.bodyA=this.getBodyById(Tr[r]),Rc.bodyB=this.getBodyById(Tr[r+1]),this.dispatchEvent(Rc);Rc.bodyA=Rc.bodyB=null}if(e){for(let r=0,o=Er.length;r<o;r+=2)$c.bodyA=this.getBodyById(Er[r]),$c.bodyB=this.getBodyById(Er[r+1]),this.dispatchEvent($c);$c.bodyA=$c.bodyB=null}Tr.length=Er.length=0;const n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(Tr,Er),n){for(let r=0,o=Tr.length;r<o;r+=2){const a=this.getShapeById(Tr[r]),l=this.getShapeById(Tr[r+1]);Mr.shapeA=a,Mr.shapeB=l,a&&(Mr.bodyA=a.body),l&&(Mr.bodyB=l.body),this.dispatchEvent(Mr)}Mr.bodyA=Mr.bodyB=Mr.shapeA=Mr.shapeB=null}if(i){for(let r=0,o=Er.length;r<o;r+=2){const a=this.getShapeById(Er[r]),l=this.getShapeById(Er[r+1]);kr.shapeA=a,kr.shapeB=l,a&&(kr.bodyA=a.body),l&&(kr.bodyB=l.body),this.dispatchEvent(kr)}kr.bodyA=kr.bodyB=kr.shapeA=kr.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const i=t[n];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}}}new Vs;const bg=new _n,kn=globalThis.performance||{};if(!kn.now){let s=Date.now();kn.timing&&kn.timing.navigationStart&&(s=kn.timing.navigationStart),kn.now=()=>Date.now()-s}new k;const SO={type:"postStep"},CO={type:"preStep"},Nc={type:Ft.COLLIDE_EVENT_NAME,body:null,contact:null},IO=[],TO=[],EO=[],MO=[],Tr=[],Er=[],Rc={type:"beginContact",bodyA:null,bodyB:null},$c={type:"endContact",bodyA:null,bodyB:null},Mr={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},kr={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},s1={type:"change"},yg={type:"start"},i1={type:"end"};class kO extends Na{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new K,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ja.ROTATE,MIDDLE:ja.DOLLY,RIGHT:ja.PAN},this.touches={ONE:Ka.ROTATE,TWO:Ka.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(G){G.addEventListener("keydown",pn),this._domElementKeyEvents=G},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(s1),n.update(),r=i.NONE},this.update=function(){const G=new K,et=new pa().setFromUnitVectors(t.up,new K(0,1,0)),Dt=et.clone().invert(),Lt=new K,Rt=new pa,Kt=2*Math.PI;return function(){const Se=n.object.position;G.copy(Se).sub(n.target),G.applyQuaternion(et),a.setFromVector3(G),n.autoRotate&&r===i.NONE&&I(C()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let Te=n.minAzimuthAngle,ze=n.maxAzimuthAngle;return isFinite(Te)&&isFinite(ze)&&(Te<-Math.PI?Te+=Kt:Te>Math.PI&&(Te-=Kt),ze<-Math.PI?ze+=Kt:ze>Math.PI&&(ze-=Kt),Te<=ze?a.theta=Math.max(Te,Math.min(ze,a.theta)):a.theta=a.theta>(Te+ze)/2?Math.max(Te,a.theta):Math.min(ze,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),G.setFromSpherical(a),G.applyQuaternion(Dt),Se.copy(n.target).add(G),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||Lt.distanceToSquared(n.object.position)>o||8*(1-Rt.dot(n.object.quaternion))>o?(n.dispatchEvent(s1),Lt.copy(n.object.position),Rt.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ut),n.domElement.removeEventListener("pointerdown",ne),n.domElement.removeEventListener("pointercancel",ye),n.domElement.removeEventListener("wheel",Ne),n.domElement.removeEventListener("pointermove",re),n.domElement.removeEventListener("pointerup",se),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",pn)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,a=new Fw,l=new Fw;let c=1;const u=new K;let h=!1;const d=new $t,f=new $t,p=new $t,g=new $t,m=new $t,x=new $t,v=new $t,y=new $t,b=new $t,w=[],S={};function C(){return 2*Math.PI/60/60*n.autoRotateSpeed}function _(){return Math.pow(.95,n.zoomSpeed)}function I(G){l.theta-=G}function T(G){l.phi-=G}const N=function(){const G=new K;return function(Dt,Lt){G.setFromMatrixColumn(Lt,0),G.multiplyScalar(-Dt),u.add(G)}}(),P=function(){const G=new K;return function(Dt,Lt){n.screenSpacePanning===!0?G.setFromMatrixColumn(Lt,1):(G.setFromMatrixColumn(Lt,0),G.crossVectors(n.object.up,G)),G.multiplyScalar(Dt),u.add(G)}}(),E=function(){const G=new K;return function(Dt,Lt){const Rt=n.domElement;if(n.object.isPerspectiveCamera){const Kt=n.object.position;G.copy(Kt).sub(n.target);let Xt=G.length();Xt*=Math.tan(n.object.fov/2*Math.PI/180),N(2*Dt*Xt/Rt.clientHeight,n.object.matrix),P(2*Lt*Xt/Rt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(N(Dt*(n.object.right-n.object.left)/n.object.zoom/Rt.clientWidth,n.object.matrix),P(Lt*(n.object.top-n.object.bottom)/n.object.zoom/Rt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function M(G){n.object.isPerspectiveCamera?c/=G:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*G)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function A(G){n.object.isPerspectiveCamera?c*=G:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/G)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function R(G){d.set(G.clientX,G.clientY)}function V(G){v.set(G.clientX,G.clientY)}function L(G){g.set(G.clientX,G.clientY)}function $(G){f.set(G.clientX,G.clientY),p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const et=n.domElement;I(2*Math.PI*p.x/et.clientHeight),T(2*Math.PI*p.y/et.clientHeight),d.copy(f),n.update()}function U(G){y.set(G.clientX,G.clientY),b.subVectors(y,v),b.y>0?M(_()):b.y<0&&A(_()),v.copy(y),n.update()}function H(G){m.set(G.clientX,G.clientY),x.subVectors(m,g).multiplyScalar(n.panSpeed),E(x.x,x.y),g.copy(m),n.update()}function W(G){G.deltaY<0?A(_()):G.deltaY>0&&M(_()),n.update()}function Z(G){let et=!1;switch(G.code){case n.keys.UP:E(0,n.keyPanSpeed),et=!0;break;case n.keys.BOTTOM:E(0,-n.keyPanSpeed),et=!0;break;case n.keys.LEFT:E(n.keyPanSpeed,0),et=!0;break;case n.keys.RIGHT:E(-n.keyPanSpeed,0),et=!0;break}et&&(G.preventDefault(),n.update())}function it(){if(w.length===1)d.set(w[0].pageX,w[0].pageY);else{const G=.5*(w[0].pageX+w[1].pageX),et=.5*(w[0].pageY+w[1].pageY);d.set(G,et)}}function lt(){if(w.length===1)g.set(w[0].pageX,w[0].pageY);else{const G=.5*(w[0].pageX+w[1].pageX),et=.5*(w[0].pageY+w[1].pageY);g.set(G,et)}}function J(){const G=w[0].pageX-w[1].pageX,et=w[0].pageY-w[1].pageY,Dt=Math.sqrt(G*G+et*et);v.set(0,Dt)}function vt(){n.enableZoom&&J(),n.enablePan&&lt()}function mt(){n.enableZoom&&J(),n.enableRotate&&it()}function xt(G){if(w.length==1)f.set(G.pageX,G.pageY);else{const Dt=Jt(G),Lt=.5*(G.pageX+Dt.x),Rt=.5*(G.pageY+Dt.y);f.set(Lt,Rt)}p.subVectors(f,d).multiplyScalar(n.rotateSpeed);const et=n.domElement;I(2*Math.PI*p.x/et.clientHeight),T(2*Math.PI*p.y/et.clientHeight),d.copy(f)}function dt(G){if(w.length===1)m.set(G.pageX,G.pageY);else{const et=Jt(G),Dt=.5*(G.pageX+et.x),Lt=.5*(G.pageY+et.y);m.set(Dt,Lt)}x.subVectors(m,g).multiplyScalar(n.panSpeed),E(x.x,x.y),g.copy(m)}function rt(G){const et=Jt(G),Dt=G.pageX-et.x,Lt=G.pageY-et.y,Rt=Math.sqrt(Dt*Dt+Lt*Lt);y.set(0,Rt),b.set(0,Math.pow(y.y/v.y,n.zoomSpeed)),M(b.y),v.copy(y)}function yt(G){n.enableZoom&&rt(G),n.enablePan&&dt(G)}function Tt(G){n.enableZoom&&rt(G),n.enableRotate&&xt(G)}function ne(G){n.enabled!==!1&&(w.length===0&&(n.domElement.setPointerCapture(G.pointerId),n.domElement.addEventListener("pointermove",re),n.domElement.addEventListener("pointerup",se)),St(G),G.pointerType==="touch"?B(G):ue(G))}function re(G){n.enabled!==!1&&(G.pointerType==="touch"?F(G):me(G))}function se(G){Ct(G),w.length===0&&(n.domElement.releasePointerCapture(G.pointerId),n.domElement.removeEventListener("pointermove",re),n.domElement.removeEventListener("pointerup",se)),n.dispatchEvent(i1),r=i.NONE}function ye(G){Ct(G)}function ue(G){let et;switch(G.button){case 0:et=n.mouseButtons.LEFT;break;case 1:et=n.mouseButtons.MIDDLE;break;case 2:et=n.mouseButtons.RIGHT;break;default:et=-1}switch(et){case ja.DOLLY:if(n.enableZoom===!1)return;V(G),r=i.DOLLY;break;case ja.ROTATE:if(G.ctrlKey||G.metaKey||G.shiftKey){if(n.enablePan===!1)return;L(G),r=i.PAN}else{if(n.enableRotate===!1)return;R(G),r=i.ROTATE}break;case ja.PAN:if(G.ctrlKey||G.metaKey||G.shiftKey){if(n.enableRotate===!1)return;R(G),r=i.ROTATE}else{if(n.enablePan===!1)return;L(G),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(yg)}function me(G){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;$(G);break;case i.DOLLY:if(n.enableZoom===!1)return;U(G);break;case i.PAN:if(n.enablePan===!1)return;H(G);break}}function Ne(G){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(G.preventDefault(),n.dispatchEvent(yg),W(G),n.dispatchEvent(i1))}function pn(G){n.enabled===!1||n.enablePan===!1||Z(G)}function B(G){switch(Mt(G),w.length){case 1:switch(n.touches.ONE){case Ka.ROTATE:if(n.enableRotate===!1)return;it(),r=i.TOUCH_ROTATE;break;case Ka.PAN:if(n.enablePan===!1)return;lt(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case Ka.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;vt(),r=i.TOUCH_DOLLY_PAN;break;case Ka.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;mt(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(yg)}function F(G){switch(Mt(G),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;xt(G),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;dt(G),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;yt(G),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Tt(G),n.update();break;default:r=i.NONE}}function ut(G){n.enabled!==!1&&G.preventDefault()}function St(G){w.push(G)}function Ct(G){delete S[G.pointerId];for(let et=0;et<w.length;et++)if(w[et].pointerId==G.pointerId){w.splice(et,1);return}}function Mt(G){let et=S[G.pointerId];et===void 0&&(et=new $t,S[G.pointerId]=et),et.set(G.pageX,G.pageY)}function Jt(G){const et=G.pointerId===w[0].pointerId?w[1]:w[0];return S[et.pointerId]}n.domElement.addEventListener("contextmenu",ut),n.domElement.addEventListener("pointerdown",ne),n.domElement.addEventListener("pointercancel",ye),n.domElement.addEventListener("wheel",Ne,{passive:!1}),this.update()}}class Gf{constructor(){this.meshes=[],this.bodies=[],this.constraints=[]}syncMeshesToBodies(){this.meshes.forEach((t,e)=>{t.position.x=this.bodies[e].position.x,t.position.y=this.bodies[e].position.y,t.position.z=this.bodies[e].position.z,t.quaternion.x=this.bodies[e].quaternion.x,t.quaternion.y=this.bodies[e].quaternion.y,t.quaternion.z=this.bodies[e].quaternion.z,t.quaternion.w=this.bodies[e].quaternion.w})}}class AO extends Gf{constructor(t,e,n,i,r,o,a,l=1,c=.05,u=.1){super(),this.bodies.push(new Ft({mass:l,position:new k(t,e,n),shape:new _u(new k(i/2,r/2,o/2)),material:new yo({friction:c,restitution:u})}));let h=new rn(new bo(i,r,o),a);h.castShadow=!0,h.receiveShadow=!0,h.translateX(t),h.translateY(e),h.translateZ(n),this.meshes.push(h)}rotateY(t){this.bodies[0].quaternion.setFromAxisAngle(new k(0,1,0),t),this.meshes[0].rotateY(t)}}var Da=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function NO(s){var t=s.default;if(typeof t=="function"){var e=function(){return t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(s).forEach(function(n){var i=Object.getOwnPropertyDescriptor(s,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return s[n]}})}),e}function Ui(s,t){this.current=s,this.next=t,this._inNormal=this.inwardsNormal(),this._outNormal=this.outwardsNormal()}Ui.prototype.outwardsNormal=function(){var s=this.inwardsNormal();return[-s[0],-s[1]]};Ui.prototype.inwardsNormal=function(){var s=this.next[0]-this.current[0],t=this.next[1]-this.current[1],e=Math.sqrt(s*s+t*t);if(e===0)throw new Error("Vertices overlap");return[-t/e,s/e]};Ui.prototype.offset=function(s,t){return Ui.offsetEdge(this.current,this.next,s,t)};Ui.prototype.inverseOffset=function(s,t){return Ui.offsetEdge(this.next,this.current,s,t)};Ui.offsetEdge=function(s,t,e,n){return new Ui([s[0]+e,s[1]+n],[t[0]+e,t[1]+n])};Ui.prototype.inverse=function(){return new Ui(this.next,this.current)};var RO=Ui,lC={exports:{}},xi={exports:{}},cC={NORMAL:0,NON_CONTRIBUTING:1,SAME_TRANSITION:2,DIFFERENT_TRANSITION:3},i0={exports:{}};i0.exports=ru;i0.exports.default=ru;function ru(s,t){if(!(this instanceof ru))return new ru(s,t);if(this.data=s||[],this.length=this.data.length,this.compare=t||$O,this.length>0)for(var e=(this.length>>1)-1;e>=0;e--)this._down(e)}function $O(s,t){return s<t?-1:s>t?1:0}ru.prototype={push:function(s){this.data.push(s),this.length++,this._up(this.length-1)},pop:function(){if(this.length!==0){var s=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),s}},peek:function(){return this.data[0]},_up:function(s){for(var t=this.data,e=this.compare,n=t[s];s>0;){var i=s-1>>1,r=t[i];if(e(n,r)>=0)break;t[s]=r,s=i}t[s]=n},_down:function(s){for(var t=this.data,e=this.compare,n=this.length>>1,i=t[s];s<n;){var r=(s<<1)+1,o=r+1,a=t[r];if(o<this.length&&e(t[o],a)<0&&(r=o,a=t[o]),e(a,i)>=0)break;t[s]=a,s=r}t[s]=i}};function qi(){}qi.prototype.clear=function(){this._root=null,this.size=0};qi.prototype.find=function(s){for(var t=this._root;t!==null;){var e=this._comparator(s,t.data);if(e===0)return t.data;t=t.get_child(e>0)}return null};qi.prototype.findIter=function(s){for(var t=this._root,e=this.iterator();t!==null;){var n=this._comparator(s,t.data);if(n===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(n>0)}return null};qi.prototype.lowerBound=function(s){for(var t=this._root,e=this.iterator(),n=this._comparator;t!==null;){var i=n(s,t.data);if(i===0)return e._cursor=t,e;e._ancestors.push(t),t=t.get_child(i>0)}for(var r=e._ancestors.length-1;r>=0;--r)if(t=e._ancestors[r],n(s,t.data)<0)return e._cursor=t,e._ancestors.length=r,e;return e._ancestors.length=0,e};qi.prototype.upperBound=function(s){for(var t=this.lowerBound(s),e=this._comparator;t.data()!==null&&e(t.data(),s)===0;)t.next();return t};qi.prototype.min=function(){var s=this._root;if(s===null)return null;for(;s.left!==null;)s=s.left;return s.data};qi.prototype.max=function(){var s=this._root;if(s===null)return null;for(;s.right!==null;)s=s.right;return s.data};qi.prototype.iterator=function(){return new lc(this)};qi.prototype.each=function(s){for(var t=this.iterator(),e;(e=t.next())!==null;)if(s(e)===!1)return};qi.prototype.reach=function(s){for(var t=this.iterator(),e;(e=t.prev())!==null;)if(s(e)===!1)return};function lc(s){this._tree=s,this._ancestors=[],this._cursor=null}lc.prototype.data=function(){return this._cursor!==null?this._cursor.data:null};lc.prototype.next=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._minNode(s)}else if(this._cursor.right===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.right===t)}else this._ancestors.push(this._cursor),this._minNode(this._cursor.right);return this._cursor!==null?this._cursor.data:null};lc.prototype.prev=function(){if(this._cursor===null){var s=this._tree._root;s!==null&&this._maxNode(s)}else if(this._cursor.left===null){var t;do if(t=this._cursor,this._ancestors.length)this._cursor=this._ancestors.pop();else{this._cursor=null;break}while(this._cursor.left===t)}else this._ancestors.push(this._cursor),this._maxNode(this._cursor.left);return this._cursor!==null?this._cursor.data:null};lc.prototype._minNode=function(s){for(;s.left!==null;)this._ancestors.push(s),s=s.left;this._cursor=s};lc.prototype._maxNode=function(s){for(;s.right!==null;)this._ancestors.push(s),s=s.right;this._cursor=s};var uC=qi,DO=uC;function kl(s){this.data=s,this.left=null,this.right=null,this.red=!0}kl.prototype.get_child=function(s){return s?this.right:this.left};kl.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function Hf(s){this._root=null,this._comparator=s,this.size=0}Hf.prototype=new DO;Hf.prototype.insert=function(s){var t=!1;if(this._root===null)this._root=new kl(s),t=!0,this.size++;else{var e=new kl(void 0),n=0,i=0,r=null,o=e,a=null,l=this._root;for(o.right=this._root;;){if(l===null?(l=new kl(s),a.set_child(n,l),t=!0,this.size++):Js(l.left)&&Js(l.right)&&(l.red=!0,l.left.red=!1,l.right.red=!1),Js(l)&&Js(a)){var c=o.right===r;l===a.get_child(i)?o.set_child(c,ou(r,!i)):o.set_child(c,hC(r,!i))}var u=this._comparator(l.data,s);if(u===0)break;i=n,n=u<0,r!==null&&(o=r),r=a,a=l,l=l.get_child(n)}this._root=e.right}return this._root.red=!1,t};Hf.prototype.remove=function(s){if(this._root===null)return!1;var t=new kl(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=null,o=1;e.get_child(o)!==null;){var a=o;i=n,n=e,e=e.get_child(o);var l=this._comparator(s,e.data);if(o=l>0,l===0&&(r=e),!Js(e)&&!Js(e.get_child(o))){if(Js(e.get_child(!o))){var c=ou(e,o);n.set_child(a,c),n=c}else if(!Js(e.get_child(!o))){var u=n.get_child(!a);if(u!==null)if(!Js(u.get_child(!a))&&!Js(u.get_child(a)))n.red=!1,u.red=!0,e.red=!0;else{var h=i.right===n;Js(u.get_child(a))?i.set_child(h,hC(n,a)):Js(u.get_child(!a))&&i.set_child(h,ou(n,a));var d=i.get_child(h);d.red=!0,e.red=!0,d.left.red=!1,d.right.red=!1}}}}return r!==null&&(r.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this.size--),this._root=t.right,this._root!==null&&(this._root.red=!1),r!==null};function Js(s){return s!==null&&s.red}function ou(s,t){var e=s.get_child(!t);return s.set_child(!t,e.get_child(t)),e.set_child(t,s),s.red=!0,e.red=!1,e}function hC(s,t){return s.set_child(!t,ou(s.get_child(!t),!t)),ou(s,t)}var FO=Hf,LO=uC;function au(s){this.data=s,this.left=null,this.right=null}au.prototype.get_child=function(s){return s?this.right:this.left};au.prototype.set_child=function(s,t){s?this.right=t:this.left=t};function qf(s){this._root=null,this._comparator=s,this.size=0}qf.prototype=new LO;qf.prototype.insert=function(s){if(this._root===null)return this._root=new au(s),this.size++,!0;for(var t=0,e=null,n=this._root;;){if(n===null)return n=new au(s),e.set_child(t,n),ret=!0,this.size++,!0;if(this._comparator(n.data,s)===0)return!1;t=this._comparator(n.data,s)<0,e=n,n=n.get_child(t)}};qf.prototype.remove=function(s){if(this._root===null)return!1;var t=new au(void 0),e=t;e.right=this._root;for(var n=null,i=null,r=1;e.get_child(r)!==null;){n=e,e=e.get_child(r);var o=this._comparator(s,e.data);r=o>0,o===0&&(i=e)}return i!==null?(i.data=e.data,n.set_child(n.right===e,e.get_child(e.left===null)),this._root=t.right,this.size--,!0):!1};var PO=qf,OO={RBTree:FO,BinTree:PO},r0=function(t,e,n){return(t[0]-n[0])*(e[1]-n[1])-(e[0]-n[0])*(t[1]-n[1])},r1=r0,zO=cC;function dC(s,t,e,n,i){this.left=t,this.point=s,this.otherEvent=e,this.isSubject=n,this.type=i||zO.NORMAL,this.inOut=!1,this.otherInOut=!1,this.prevInResult=null,this.inResult=!1,this.resultInOut=!1}dC.prototype={isBelow:function(s){return this.left?r1(this.point,this.otherEvent.point,s)>0:r1(this.otherEvent.point,this.point,s)>0},isAbove:function(s){return!this.isBelow(s)},isVertical:function(){return this.point[0]===this.otherEvent.point[0]}};var BO=dC,UO=r0,fC=function(t,e){var n=t.point,i=e.point;return n[0]>i[0]?1:n[0]<i[0]?-1:n[1]!==i[1]?n[1]>i[1]?1:-1:VO(t,e,n)};function VO(s,t,e,n){return s.left!==t.left?s.left?1:-1:UO(e,s.otherEvent.point,t.otherEvent.point)!==0?s.isBelow(t.otherEvent.point)?-1:1:!s.isSubject&&t.isSubject?1:-1}var pC=function(t,e){return t[0]===e[0]&&t[1]===e[1]},o1=r0,a1=fC,wg=pC,WO=function(t,e){if(t===e)return 0;if(o1(t.point,t.otherEvent.point,e.point)!==0||o1(t.point,t.otherEvent.point,e.otherEvent.point)!==0)return wg(t.point,e.point)?t.isBelow(e.otherEvent.point)?-1:1:t.point[0]===e.point[0]?t.point[1]<e.point[1]?-1:1:a1(t,e)===1?e.isAbove(t.point)?-1:1:t.isBelow(e.point)?-1:1;if(t.isSubject===e.isSubject){if(wg(t.point,e.point))return wg(t.otherEvent.point,e.otherEvent.point)?0:t.contourId>e.contourId?1:-1}else return t.isSubject?-1:1;return a1(t,e)===1?1:-1},l1=1e-9;function kd(s,t){return s[0]*t[1]-s[1]*t[0]}function Dc(s,t){return s[0]*t[0]+s[1]*t[1]}var GO=function(s,t,e,n,i){var r=[t[0]-s[0],t[1]-s[1]],o=[n[0]-e[0],n[1]-e[1]];function a(b,w,S){return[b[0]+w*S[0],b[1]+w*S[1]]}var l=[e[0]-s[0],e[1]-s[1]],c=kd(r,o),u=c*c,h=Dc(r,r),d=Dc(o,o);if(u>l1*h*d){var f=kd(l,o)/c;if(f<0||f>1)return null;var p=kd(l,r)/c;return p<0||p>1||i?null:[a(s,f,r)]}var g=Dc(l,l);if(c=kd(l,r),u=c*c,u>l1*h*g)return null;var m=Dc(r,l)/h,x=m+Dc(r,o)/h,v=Math.min(m,x),y=Math.max(m,x);return v<=1&&y>=0?v===1?i?null:[a(s,v>0?v:0,r)]:y===0?i?null:[a(s,y<1?y:1,r)]:i&&v===0&&y===1?null:[a(s,v>0?v:0,r),a(s,y<1?y:1,r)]:null},xa=0,Ul=1,va=2,Su=3,nf=[],ea=cC,HO=i0.exports,qO=OO.RBTree,sf=BO,Vl=fC,XO=WO,jO=GO,tr=pC,c1=Math.max,Qg=Math.min;function KO(s,t,e,n,i,r){var o=new sf(s,!1,void 0,e),a=new sf(t,!1,o,e);o.otherEvent=a,o.contourId=a.contourId=n,Vl(o,a)>0?a.left=!0:o.left=!0,r[0]=Qg(r[0],s[0]),r[1]=Qg(r[1],s[1]),r[2]=c1(r[2],s[0]),r[3]=c1(r[3],s[1]),i.push(o),i.push(a)}var tx=0;function ex(s,t,e,n,i){var r,o;if(typeof s[0][0]=="number")for(r=0,o=s.length-1;r<o;r++)KO(s[r],s[r+1],t,e+1,n,i);else for(r=0,o=s.length;r<o;r++)tx++,ex(s[r],t,tx,n,i)}function mC(s,t,e,n){var i=new HO(null,Vl);return tx=0,ex(s,!0,0,i,e),ex(t,!1,0,i,n),i}function vl(s,t,e,n){t===null?(s.inOut=!1,s.otherInOut=!0):s.isSubject===t.isSubject?(s.inOut=!t.inOut,s.otherInOut=t.otherInOut):(s.inOut=!t.otherInOut,s.otherInOut=t.isVertical()?!t.inOut:t.inOut),t&&(s.prevInResult=!u1(t,n)||t.isVertical()?t.prevInResult:t),s.inResult=u1(s,n)}function u1(s,t){switch(s.type){case ea.NORMAL:switch(t){case xa:return!s.otherInOut;case Ul:return s.otherInOut;case va:return s.isSubject&&s.otherInOut||!s.isSubject&&!s.otherInOut;case Su:return!0}case ea.SAME_TRANSITION:return t===xa||t===Ul;case ea.DIFFERENT_TRANSITION:return t===va;case ea.NON_CONTRIBUTING:return!1}return!1}function jd(s,t,e){var n=jO(s.point,s.otherEvent.point,t.point,t.otherEvent.point),i=n?n.length:0;if(i===0||i===1&&(tr(s.point,t.point)||tr(s.otherEvent.point,t.otherEvent.point)))return 0;if(i===2&&s.isSubject===t.isSubject)return s.contourId===t.contourId&&console.warn("Edges of the same polygon overlap",s.point,s.otherEvent.point,t.point,t.otherEvent.point),0;if(i===1)return!tr(s.point,n[0])&&!tr(s.otherEvent.point,n[0])&&Ar(s,n[0],e),!tr(t.point,n[0])&&!tr(t.otherEvent.point,n[0])&&Ar(t,n[0],e),1;var r=[],o=!1,a=!1;return tr(s.point,t.point)?o=!0:Vl(s,t)===1?r.push(t,s):r.push(s,t),tr(s.otherEvent.point,t.otherEvent.point)?a=!0:Vl(s.otherEvent,t.otherEvent)===1?r.push(t.otherEvent,s.otherEvent):r.push(s.otherEvent,t.otherEvent),o&&a||o?(s.type=ea.NON_CONTRIBUTING,t.type=s.inOut===t.inOut?ea.SAME_TRANSITION:ea.DIFFERENT_TRANSITION,o&&!a&&Ar(r[0].otherEvent,r[1].point,e),2):a?(Ar(r[0],r[1].point,e),3):r[0]!==r[3].otherEvent?(Ar(r[0],r[1].point,e),Ar(r[1],r[2].point,e),3):(Ar(r[0],r[1].point,e),Ar(r[3].otherEvent,r[2].point,e),3)}function Ar(s,t,e){var n=new sf(t,!1,s,s.isSubject),i=new sf(t,!0,s.otherEvent,s.isSubject);return tr(s.point,s.otherEvent.point)&&console.warn("what is that?",s),n.contourId=i.contourId=s.contourId,Vl(i,s.otherEvent)>0&&(s.otherEvent.left=!0,i.left=!1),s.otherEvent.otherEvent=i,s.otherEvent=n,e.push(i),e.push(n),e}function gC(s,t,e,n,i,r){for(var a=[],c,u,o=new qO(XO),a=[],l=Qg(n[2],i[2]),c,u;s.length;){var h=s.pop();if(a.push(h),r===xa&&h.point[0]>l||r===va&&h.point[0]>n[2])break;if(h.left){if(o.insert(h),u=o.findIter(h),c=o.findIter(h),h.iterator=o.findIter(h),!c||!u){console.log("brute");var d=YO(o);c=d[0],u=d[1]}if(c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),vl(h,c.data(),o,r),u.data()&&jd(h,u.data(),s)===2&&(vl(h,c.data(),o,r),vl(h,u.data(),o,r)),c.data()&&jd(c.data(),h,s)===2){var f=o.findIter(c.data());f.data()!==o.min()?f.prev():(f=o.findIter(o.max()),f.next()),vl(c.data(),f.data(),o,r),vl(h,c.data(),o,r)}}else{if(h=h.otherEvent,u=o.findIter(h),c=o.findIter(h),!(c&&u))continue;c.data()!==o.min()?c.prev():(c=o.iterator(),c.prev(),c.next()),u.next(),o.remove(h),u.data()&&c.data()&&jd(c.data(),u.data(),s)}}return a}function YO(s,t){for(var e=s.iterator(),n=s.iterator(),i=s.iterator(),r;(r=i.next())!==null&&(e.next(),n.next(),r!==event););return[e,n]}function ZO(s,t,e){var n=s[t];s[t]=s[e],s[e]=n}function JO(s){return s.reverse()}function h1(s){return Object.prototype.toString.call(s)==="[object Array]"}function d1(s,t){return h1(s[0])&&!h1(s[0][0])&&(s=[s]),s[t]=[],s}function QO(s){var t,e,n,i=[];for(e=0,n=s.length;e<n;e++)t=s[e],(t.left&&t.inResult||!t.left&&t.otherEvent.inResult)&&i.push(t);for(var r=!1;!r;)for(r=!0,e=0,n=i.length;e<n;e++)e+1<n&&Vl(i[e],i[e+1])===1&&(ZO(i,e,e+1),r=!1);for(e=0,n=i.length;e<n;e++)i[e].pos=e;for(e=0,n=i.length;e<n;e++)if(!i[e].left){var o=i[e].pos;i[e].pos=i[e].otherEvent.pos,i[e].otherEvent.pos=o}return i}function tz(s){var t,e,n=QO(s),i=Array(n.length),r=[],o=[],a=[],l={};for(t=0,e=n.length;t<e;t++)if(!i[t]){var c=[];r.push(c);var u=r.length-1;if(o.push(0),a.push(-1),n[t].prevInResult){var h=n[t].prevInResult.contourId;n[t].prevInResult.resultInOut?l[h]&&(d1(r[a[h]],u),a[u]=a[h],o[u]=o[h],l[u]=!0):(d1(r[h],u),a[u]=h,o[u]=o[h]+1,l[u]=!0)}var d=t,f=n[t].point;for(c.push(f);d>=t;)i[d]=!0,n[d].left?(n[d].resultInOut=!1,n[d].contourId=u):(n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u),d=n[d].pos,i[d]=!0,c.push(n[d].point),d=ez(d,n,i);d=d===-1?t:d,i[d]=i[n[d].pos]=!0,n[d].otherEvent.resultInOut=!0,n[d].otherEvent.contourId=u,o[u]&1&&JO(c)}return r}function ez(s,t,e){for(var n=s+1,i=t.length;n<i&&tr(t[n].point,t[s].point);)if(e[n])n=n+1;else return n;for(n=s-1;e[n];)n=n-1;return n}function nz(s,t,e){var n=null;return s.length*t.length===0&&(e===xa?n=nf:e===va?n=s:(e===Ul||e===Su)&&(n=s.length===0?t:s)),n}function sz(s,t,e,n,i){var r=null;return(e[0]>n[2]||n[0]>e[2]||e[1]>n[3]||n[1]>e[3])&&(i===xa?r=nf:i===va?r=s:(i===Ul||i===Su)&&(r=s.concat(t))),r}function Cu(s,t,e){var n=nz(s,t,e);if(n)return n===nf?null:n;var i=[1/0,1/0,-1/0,-1/0],r=[1/0,1/0,-1/0,-1/0],o=mC(s,t,i,r);if(n=sz(s,t,i,r,e),n)return n===nf?null:n;var a=gC(o,s,t,i,r,e);return tz(a)}xi.exports=Cu;xi.exports.union=function(s,t){return Cu(s,t,Ul)};xi.exports.diff=function(s,t){return Cu(s,t,va)};xi.exports.xor=function(s,t){return Cu(s,t,Su)};xi.exports.intersection=function(s,t){return Cu(s,t,xa)};xi.exports.operations={INTERSECTION:xa,DIFFERENCE:va,UNION:Ul,XOR:Su};xi.exports.fillQueue=mC;xi.exports.computeFields=vl;xi.exports.subdivideSegments=gC;xi.exports.divideSegment=Ar;xi.exports.possibleIntersection=jd;(function(s){s.exports=xi.exports})(lC);var Iu={},iz=Iu.isArray=Array.isArray||function(s){return Object.prototype.toString.call(s)==="[object Array]"},_g=Iu.isNonEmptyArray=function(s){return iz(s)&&s.length};Iu.equals=function(t,e){return t[0]===e[0]&&t[1]===e[1]};Iu.orientRings=function s(t,e,n){e=e||0;var i,r;if(_g(t)&&typeof t[0][0]=="number"){var o=0,a=t;for(i=0,r=a.length;i<r;i++){var l=a[i],c=a[(i+1)%r];o+=l[0]*c[1],o-=c[0]*l[1]}(!n&&o>0||n&&o<0)&&a.reverse()}else for(i=0,r=t.length;i<r;i++)s(t[i],e+1,i>0);if(e===0&&_g(t)&&_g(t[0])&&typeof t[0][0][0]=="number"){var u=t[0].slice(0,1)[0];t[0].pop(),t[0].push([u[0],u[1]])}return t};var rz=RO,lu=lC.exports,o0=Iu,cu=o0.isArray,xC=o0.equals,cc=o0.orientRings;function Hn(s,t){this.vertices=null,this.edges=null,this._closed=!1,this._distance=0,s&&this.data(s),this._arcSegments=t!==void 0?t:5}Hn.prototype.data=function(s){if(this._edges=[],!cu(s))throw new Error("Offset requires at least one coodinate to work with");return cu(s)&&typeof s[0]=="number"?this.vertices=s:(this.vertices=cc(s),this._processContour(this.vertices,this._edges)),this};Hn.prototype._processContour=function(s,t){var e,n;if(cu(s[0])&&typeof s[0][0]=="number")for(n=s.length,xC(s[0],s[n-1])&&(n-=1),e=0;e<n;e++)t.push(new rz(s[e],s[(e+1)%n]));else for(e=0,n=s.length;e<n;e++)t.push([]),this._processContour(s[e],t[t.length-1])};Hn.prototype.arcSegments=function(s){return this._arcSegments=s,this};Hn.prototype.validate=function(s){var t=s.length;return typeof s[0]=="number"?[s]:(s[0][0]===s[t-1][0]&&s[0][1]===s[t-1][1]&&t>1&&(s=s.slice(0,t-1),this._closed=!0),s)};Hn.prototype.createArc=function(s,t,e,n,i,r,o){var a=Math.PI*2,l=Math.atan2(n[1]-t[1],n[0]-t[0]),c=Math.atan2(i[1]-t[1],i[0]-t[0]);r%2===0&&(r-=1),l<0&&(l+=a),c<0&&(c+=a);var u=l>c?l-c:l+a-c,h=(o?-u:a-u)/r;s.push(n);for(var d=1;d<r;++d)u=l+h*d,s.push([t[0]+Math.cos(u)*e,t[1]+Math.sin(u)*e]);return s.push(i),s};Hn.prototype.distance=function(s,t){return this._distance=s||0,this};Hn.degreesToUnits=function(s,t){switch(t){case"miles":s=s/69.047;break;case"feet":s=s/364568;break;case"kilometers":s=s/111.12;break;case"meters":case"metres":s=s/111120;break}return s};Hn.prototype.ensureLastPoint=function(s){return xC(s[0],s[s.length-1])||s.push([s[0][0],s[0][1]]),s};Hn.prototype.offset=function(s){return this.distance(s),this._distance===0?this.vertices:this._distance>0?this.margin(this._distance):this.padding(-this._distance)};Hn.prototype._offsetSegment=function(s,t,e,n){for(var i=[],r=[e.offset(e._inNormal[0]*n,e._inNormal[1]*n),e.inverseOffset(e._outNormal[0]*n,e._outNormal[1]*n)],o=0,a=2;o<a;o++){var l=r[o],c=r[(o+a-1)%a];this.createArc(i,o===0?s:t,n,c.next,l.current,this._arcSegments,!0)}return i};Hn.prototype.margin=function(s){if(this.distance(s),typeof this.vertices[0]=="number")return this.offsetPoint(this._distance);if(s===0)return this.vertices;var t=this.offsetLines(this._distance);return t=lu.union(this.vertices,t),cc(t)};Hn.prototype.padding=function(s){if(this.distance(s),this._distance===0)return this.ensureLastPoint(this.vertices);if(this.vertices.length===2&&typeof this.vertices[0]=="number")return this.vertices;var t=this.offsetLines(this._distance),e=lu.diff(this.vertices,t);return cc(e)};Hn.prototype.offsetLine=function(s){return s===0?this.vertices:cc(this.offsetLines(s))};Hn.prototype.offsetLines=function(s){if(s<0)throw new Error("Cannot apply negative margin to the line");var t;if(this.distance(s),cu(this.vertices[0])&&typeof this.vertices[0][0]!="number")for(var e=0,n=this._edges.length;e<n;e++)t=e===0?this.offsetContour(this.vertices[e],this._edges[e]):lu.union(t,this.offsetContour(this.vertices[e],this._edges[e]));else t=this.vertices.length===1?this.offsetPoint():this.offsetContour(this.vertices,this._edges);return t};Hn.prototype.offsetContour=function(s,t){var e,n,i;if(cu(s[0])&&typeof s[0][0]=="number")for(n=0,i=s.length-1;n<i;n++){var r=this.ensureLastPoint(this._offsetSegment(s[n],s[n+1],t[n],this._distance));e=n===0?[this.ensureLastPoint(r)]:lu.union(e,this.ensureLastPoint(r))}else for(n=0,i=t.length;n<i;n++)e=n===0?this.offsetContour(s[n],t[n]):lu.union(e,this.offsetContour(s[n],t[n]));return e};Hn.prototype.offsetPoint=function(s){this.distance(s);var t=this._arcSegments*2,e=[],n=this.vertices,i=this._distance,r=0;t%2===0&&t++;for(var o=0;o<t;o++)r+=2*Math.PI/t,e.push([n[0]+i*Math.cos(r),n[1]+i*Math.sin(r)]);return cc([this.ensureLastPoint(e)])};Hn.orientRings=cc;var oz=Hn;const a0=4,f1=16,vC=.19,az=new bo(.04,.04,vC),lz=new wu({color:16777215}),cz=new YS({color:5329233,wireframe:!1}),uz=new wu({color:16753920}),hz=new wu({color:65280});class p1 extends Gf{constructor(t,e=1,n=.15){super(),this.roadSpline=new VS(t,!1,"catmullrom",.5),this.roadWidth=e,this.roadLength=this.roadSpline.getLength();let i=new oz,r=new YS({color:16771584,wireframe:!1});const o=new Ft({mass:0,material:new yo({friction:.15,restitution:.25})}),a=this.roadSpline.getSpacedPoints(Math.floor(this.roadLength/n)).map(y=>[y.x,y.z]),l=i.data(a).arcSegments(20).offsetLine(e/2).map(y=>y.map(b=>new K(b[0],0,b[1]))),c=new qS(l[0].map(y=>new $t(y.x,y.z)));for(let y=0;y<l.length;y++){const b=l[y];y>0&&c.holes.push(new Kg(b.map(w=>new $t(w.x,w.z))));for(let w=1;w<b.length;w++){let S=b[w].clone().sub(b[w-1]),C=b[w].clone().add(b[w-1]).divideScalar(2),_=new AO(C.x,C.y+.1,C.z,S.length(),.2,.01,r,0);_.rotateY(Math.atan2(-S.z,S.x)),_.meshes[0].layers.enable(a0),_.meshes[0].receiveShadow=!1,o.addShape(_.bodies[0].shapes[0],_.bodies[0].position,_.bodies[0].quaternion),this.meshes.push(_.meshes[0])}}let u=new t0(c),h=new rn(u,cz);h.rotateX(Math.PI/2),h.scale.setZ(-1),h.translateZ(-.01),h.receiveShadow=!0,this.meshes.push(h);let d=this.roadSpline.getLength(),f=Math.floor(d/vC/2);for(let y=1;y<f;y+=2){let b=y/f,w=this.roadSpline.getPointAt(b),S=this.roadSpline.getTangentAt(b),C=new rn(az,lz);C.receiveShadow=!0,C.castShadow=!1,C.position.x=w.x,C.position.y=w.y,C.position.z=w.z,C.rotateY(Math.atan2(S.x,S.z)),this.meshes.push(C)}const p=new tf(this.roadWidth/2,16);p.rotateX(-Math.PI/2),p.translate(t[0].x,.025,t[0].z);const g=new rn(p,uz);this.meshes.push(g);const m=new tf(this.roadWidth/2,16);m.rotateX(-Math.PI/2),this.finishX=t[t.length-1].x,this.finishZ=t[t.length-1].z,m.translate(this.finishX,.025,this.finishZ);const x=new rn(m,hz);this.meshes.push(x),o.collisionFilterGroup=f1,o.collisionFilterMask=~f1,this.bodies.push(o),this.barrrierBody=o,this.startX=t[0].x,this.startZ=t[0].z;const v=this.roadSpline.getTangentAt(0);this.startRotation=-Math.atan2(-v.z,v.x)+Math.PI/2,this.endX=t[t.length-1].x,this.endZ=t[t.length-1].z}isFinished(t,e){return(this.finishX-t)**2+(this.finishZ-e)**2<this.roadWidth**2}syncMeshesToBodies(){}}const dz=new wu({color:16777215});class fz extends Gf{constructor(t=0,e=100,n=100){super(),this.ylevel=t;const i=new zf(e,n),r=new rn(i,dz);r.rotation.x=-Math.PI/2,r.position.y=t,r.layers.enable(a0),this.mesh=r,this.meshes.push(r);const o=new iP,a=new Ft({mass:0,material:new yo({friction:.12,restitution:.5})});a.addShape(o),a.quaternion.setFromAxisAngle(new k(1,0,0),-Math.PI/2),a.position.y=t,this.body=a,this.bodies.push(a)}syncMeshesToBodies(){}}class pz{constructor(t){te(this,"canvas");te(this,"scene");te(this,"renderer");te(this,"gameObjects");te(this,"world");te(this,"controls");te(this,"camera");te(this,"cameraPosition");te(this,"cameraQuaternion");te(this,"resizeFunction");te(this,"callback");te(this,"ground");te(this,"raceTrack");this.canvas=t,this.createCamera(),this.scene=new hL,this.addLighting(),this.createRenderer(),this.enableAutoResizer(),this.setupControls(),this.createPhyiscsWorld(),this.callback=()=>{};let e=new KL;const n=()=>{const i=Math.min(e.getDelta(),.1);i>0&&this.update(i)};this.renderer.setAnimationLoop(n),this.gameObjects=[],this.ground=new fz,this.addGameObject(this.ground)}update(t){this.world.step(t),this.gameObjects.forEach(n=>n.syncMeshesToBodies()),this.controls.update(),this.cameraPosition.lerp(this.camera.position,1-.9**(t/.016)),this.cameraQuaternion.slerp(this.camera.quaternion,1-.9**(t/.016));const e=this.camera.clone();e.position.copy(this.cameraPosition),e.quaternion.copy(this.cameraQuaternion),this.callback(t),this.renderer.render(this.scene,e)}requestCallbackBeforeRender(t){this.callback=t}addGameObject(t){this.gameObjects.push(t),t.meshes.forEach(e=>this.scene.add(e)),t.bodies.forEach(e=>this.world.addBody(e)),t.constraints.forEach(e=>this.world.addConstraint(e))}removeGameObject(t){this.gameObjects=this.gameObjects.filter(e=>e!==t),t.meshes.forEach(e=>this.scene.remove(e)),t.bodies.forEach(e=>this.world.removeBody(e)),t.constraints.forEach(e=>this.world.removeConstraint(e))}addLighting(){this.scene.add(new jL(4210752));const t=new XL(16777215,.6);t.position.set(-1.1,1,.9),t.castShadow=!0,t.shadow.mapSize.width=1024,t.shadow.mapSize.height=1024,this.scene.add(t)}createRenderer(){this.renderer=new BS({antialias:!0,canvas:this.canvas}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=yS}createCamera(){this.camera=new ei(70,window.innerWidth/window.innerHeight,.01,100),this.camera.position.z=6,this.camera.position.y=3,this.camera.position.x=6,this.cameraPosition=this.camera.position.clone(),this.cameraQuaternion=this.camera.quaternion.clone()}createPhyiscsWorld(){this.world=new _O,this.world.gravity.set(0,-9.82,0),this.world.allowSleep=!0}setGravity(t,e,n){this.world.gravity.set(t,e,n)}enableAutoResizer(){if(this.resizeFunction)return;const t=()=>{this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.renderer.setSize(this.canvas.offsetWidth,this.canvas.offsetHeight,!1),this.camera.aspect=this.canvas.offsetWidth/this.canvas.offsetHeight,this.camera.updateProjectionMatrix()};this.resizeFunction=t,window.addEventListener("resize",t),t()}disableAutoResizer(){this.resizeFunction&&window.removeEventListener("resize",this.resizeFunction),this.resizeFunction=void 0}setupControls(){this.controls=new kO(this.camera,this.renderer.domElement),this.controls.enableDamping=!1}}const dl=[];function mz(s,t=en){let e;const n=new Set;function i(a){if(gi(s,a)&&(s=a,e)){const l=!dl.length;for(const c of n)c[1](),dl.push(c,s);if(l){for(let c=0;c<dl.length;c+=2)dl[c][0](dl[c+1]);dl.length=0}}}function r(a){i(a(s))}function o(a,l=en){const c=[a,l];return n.add(c),n.size===1&&(e=t(i)||en),a(s),()=>{n.delete(c),n.size===0&&(e(),e=null)}}return{set:i,update:r,subscribe:o}}const bC=mz(null);function gz(s){let t;return{c(){t=jt("canvas"),wt(t,"class","svelte-1v9nuep")},m(e,n){Ht(e,t,n),s[1](t)},p:en,i:en,o:en,d(e){e&&Gt(t),s[1](null)}}}function xz(s,t,e){let n,i;dA(()=>{i=new pz(n),bC.set(i)});function r(o){Og[o?"unshift":"push"](()=>{n=o,e(0,n)})}return[n,r]}class vz extends xr{constructor(t){super(),gr(this,t,xz,gz,gi,{})}}function bz(s){let t,e,n,i=s[0].brushSize+"",r,o,a,l,c;return{c(){t=jt("label"),e=Ke("Road width: "),n=jt("b"),r=Ke(i),o=he(),a=jt("input"),wt(t,"for","steps-range"),wt(t,"class","block mb-2 text-sm font-medium text-gray-300"),wt(a,"id","steps-range"),wt(a,"type","range"),wt(a,"min","0.8"),wt(a,"max","2"),wt(a,"step","0.1"),wt(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(u,h){Ht(u,t,h),Bt(t,e),Bt(t,n),Bt(n,r),Ht(u,o,h),Ht(u,a,h),Qs(a,s[0].brushSize),l||(c=[Yn(a,"change",s[1]),Yn(a,"input",s[1])],l=!0)},p(u,[h]){h&1&&i!==(i=u[0].brushSize+"")&&ui(r,i),h&1&&Qs(a,u[0].brushSize)},i:en,o:en,d(u){u&&Gt(t),u&&Gt(o),u&&Gt(a),l=!1,Ur(c)}}}function yz(s,t,e){let{mode:n}=t;function i(){n.brushSize=Lr(this.value),e(0,n)}return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class wz extends xr{constructor(t){super(),gr(this,t,yz,bz,gi,{mode:0})}}function m1(s){let t,e,n,i=s[0].ground.body.material.friction+"",r,o,a,l,c,u,h,d=s[0].raceTrack.barrrierBody.material.friction+"",f,p,g,m,x;return{c(){t=jt("label"),e=Ke("Ground friction: "),n=jt("b"),r=Ke(i),o=he(),a=jt("input"),l=he(),c=jt("label"),u=Ke("Barrier friction: "),h=jt("b"),f=Ke(d),p=he(),g=jt("input"),wt(t,"for","steps-range"),wt(t,"class","block mb-2 text-sm font-medium text-gray-300"),wt(a,"id","steps-range"),wt(a,"type","range"),wt(a,"min","0.05"),wt(a,"max","1"),wt(a,"step","0.02"),wt(a,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg"),wt(c,"for","steps-range"),wt(c,"class","block my-2 text-sm font-medium text-gray-300"),wt(g,"id","steps-range"),wt(g,"type","range"),wt(g,"min","0.0"),wt(g,"max","1"),wt(g,"step","0.02"),wt(g,"class","w-full h-2 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 rounded-lg appearance-none cursor-pointer range-lg")},m(v,y){Ht(v,t,y),Bt(t,e),Bt(t,n),Bt(n,r),Ht(v,o,y),Ht(v,a,y),Qs(a,s[0].ground.body.material.friction),Ht(v,l,y),Ht(v,c,y),Bt(c,u),Bt(c,h),Bt(h,f),Ht(v,p,y),Ht(v,g,y),Qs(g,s[0].raceTrack.barrrierBody.material.friction),m||(x=[Yn(a,"change",s[1]),Yn(a,"input",s[1]),Yn(g,"change",s[2]),Yn(g,"input",s[2])],m=!0)},p(v,y){y&1&&i!==(i=v[0].ground.body.material.friction+"")&&ui(r,i),y&1&&Qs(a,v[0].ground.body.material.friction),y&1&&d!==(d=v[0].raceTrack.barrrierBody.material.friction+"")&&ui(f,d),y&1&&Qs(g,v[0].raceTrack.barrrierBody.material.friction)},d(v){v&&Gt(t),v&&Gt(o),v&&Gt(a),v&&Gt(l),v&&Gt(c),v&&Gt(p),v&&Gt(g),m=!1,Ur(x)}}}function _z(s){let t,e=s[0]!==null&&m1(s);return{c(){e&&e.c(),t=Gx()},m(n,i){e&&e.m(n,i),Ht(n,t,i)},p(n,[i]){n[0]!==null?e?e.p(n,i):(e=m1(n),e.c(),e.m(t.parentNode,t)):e&&(e.d(1),e=null)},i:en,o:en,d(n){e&&e.d(n),n&&Gt(t)}}}function Sz(s,t,e){let{gameWorld:n}=t;function i(){n.ground.body.material.friction=Lr(this.value),e(0,n)}function r(){n.raceTrack.barrrierBody.material.friction=Lr(this.value),e(0,n)}return s.$$set=o=>{"gameWorld"in o&&e(0,n=o.gameWorld)},[n,i,r]}class yC extends xr{constructor(t){super(),gr(this,t,Sz,_z,gi,{gameWorld:0})}}function g1(s,t,e){const n=s.slice();return n[1]=t[e],n[3]=e,n}function x1(s){let t,e,n,i,r=s[0].sensorData.length+"",o,a,l,c,u,h,d,f=s[0].sensorData,p=[];for(let g=0;g<f.length;g+=1)p[g]=v1(g1(s,f,g));return{c(){t=jt("div"),e=jt("span"),e.textContent="Sensors",n=he(),i=jt("span"),o=Ke(r),a=Ke(" sensors"),l=he();for(let g=0;g<p.length;g+=1)p[g].c();c=he(),u=jt("div"),u.innerHTML='<span class="text-base font-medium text-blue-700 dark:text-white">Velocity: <span id="velocity-element"></span></span>',h=he(),d=jt("hr"),wt(e,"class","text-base font-medium text-blue-700 dark:text-white"),wt(i,"class","text-xs font-medium my-auto text-blue-700 dark:text-white"),wt(t,"class","flex justify-between mb-1"),wt(u,"class","flex justify-between mt-4 mb-1"),wt(d,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(g,m){Ht(g,t,m),Bt(t,e),Bt(t,n),Bt(t,i),Bt(i,o),Bt(i,a),Ht(g,l,m);for(let x=0;x<p.length;x+=1)p[x].m(g,m);Ht(g,c,m),Ht(g,u,m),Ht(g,h,m),Ht(g,d,m)},p(g,m){if(m&1&&r!==(r=g[0].sensorData.length+"")&&ui(o,r),m&1){f=g[0].sensorData;let x;for(x=0;x<f.length;x+=1){const v=g1(g,f,x);p[x]?p[x].p(v,m):(p[x]=v1(v),p[x].c(),p[x].m(c.parentNode,c))}for(;x<p.length;x+=1)p[x].d(1);p.length=f.length}},d(g){g&&Gt(t),g&&Gt(l),mS(p,g),g&&Gt(c),g&&Gt(u),g&&Gt(h),g&&Gt(d)}}}function v1(s){let t,e,n=s[1].distance.toFixed(2)+"",i;return{c(){t=jt("div"),e=jt("div"),i=Ke(n),wt(e,"id","arrow-length-indicator-"+s[3]),wt(e,"class","bg-blue-600 mb-px bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full"),Fl(e,"width",s[1].distance*100+"%"),wt(t,"class","w-full bg-gray-200 rounded-full dark:bg-gray-700")},m(r,o){Ht(r,t,o),Bt(t,e),Bt(e,i)},p(r,o){o&1&&n!==(n=r[1].distance.toFixed(2)+"")&&ui(i,n),o&1&&Fl(e,"width",r[1].distance*100+"%")},d(r){r&&Gt(t)}}}function Cz(s){let t,e=s[0].car&&x1(s);return{c(){e&&e.c(),t=Gx()},m(n,i){e&&e.m(n,i),Ht(n,t,i)},p(n,[i]){n[0].car?e?e.p(n,i):(e=x1(n),e.c(),e.m(t.parentNode,t)):e&&(e.d(1),e=null)},i:en,o:en,d(n){e&&e.d(n),n&&Gt(t)}}}function Iz(s,t,e){let{mode:n}=t;return s.$$set=i=>{"mode"in i&&e(0,n=i.mode)},[n]}class wC extends xr{constructor(t){super(),gr(this,t,Iz,Cz,gi,{mode:0})}}function Tz(s){let t,e,n,i,r,o,a,l,c,u,h,d,f,p,g,m,x,v,y;return{c(){t=jt("label"),e=jt("input"),n=he(),i=jt("div"),r=he(),o=jt("span"),o.textContent="Chase camera",a=he(),l=jt("br"),c=he(),u=jt("label"),h=jt("input"),d=he(),f=jt("div"),p=he(),g=jt("span"),g.textContent="Visualize sensors",m=he(),x=jt("hr"),wt(e,"type","checkbox"),e.__value="",e.value=e.__value,wt(e,"id","chase-mode-toggle"),wt(e,"class","sr-only peer"),wt(i,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),wt(o,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),wt(t,"for","chase-mode-toggle"),wt(t,"class","inline-flex relative items-center cursor-pointer mb-4"),wt(h,"type","checkbox"),h.__value="",h.value=h.__value,wt(h,"id","show-sensors-toggle"),wt(h,"class","sr-only peer"),wt(f,"class","w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[4px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),wt(g,"class","ml-3 text-sm font-medium text-gray-900 dark:text-gray-300"),wt(u,"for","show-sensors-toggle"),wt(u,"class","inline-flex relative items-center cursor-pointer"),wt(x,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(b,w){Ht(b,t,w),Bt(t,e),e.checked=s[0].chaseMode,Bt(t,n),Bt(t,i),Bt(t,r),Bt(t,o),Bt(t,a),Ht(b,l,w),Ht(b,c,w),Ht(b,u,w),Bt(u,h),h.checked=s[0].showSensors,Bt(u,d),Bt(u,f),Bt(u,p),Bt(u,g),Ht(b,m,w),Ht(b,x,w),v||(y=[Yn(e,"change",s[1]),Yn(h,"change",s[2])],v=!0)},p(b,[w]){w&1&&(e.checked=b[0].chaseMode),w&1&&(h.checked=b[0].showSensors)},i:en,o:en,d(b){b&&Gt(t),b&&Gt(l),b&&Gt(c),b&&Gt(u),b&&Gt(m),b&&Gt(x),v=!1,Ur(y)}}}function Ez(s,t,e){let{mode:n}=t;function i(){n.chaseMode=this.checked,e(0,n)}function r(){n.showSensors=this.checked,e(0,n)}return s.$$set=o=>{"mode"in o&&e(0,n=o.mode)},[n,i,r]}class _C extends xr{constructor(t){super(),gr(this,t,Ez,Tz,gi,{mode:0})}}function Mz(s){let t,e,n,i,r,o,a,l,c,u,h,d;return t=new _C({props:{mode:s[0]}}),n=new wC({props:{mode:s[0]}}),r=new yC({props:{gameWorld:s[0].gameWorld}}),{c(){lr(t.$$.fragment),e=he(),lr(n.$$.fragment),i=he(),lr(r.$$.fragment),o=he(),a=jt("hr"),l=he(),c=jt("button"),c.textContent="Reset car",wt(a,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),wt(c,"type","button"),wt(c,"class","block grow mx-auto focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-bold rounded-lg text-md px-5 py-2.5 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900")},m(f,p){Fi(t,f,p),Ht(f,e,p),Fi(n,f,p),Ht(f,i,p),Fi(r,f,p),Ht(f,o,p),Ht(f,a,p),Ht(f,l,p),Ht(f,c,p),u=!0,h||(d=Yn(c,"click",s[1]),h=!0)},p(f,[p]){const g={};p&1&&(g.mode=f[0]),t.$set(g);const m={};p&1&&(m.mode=f[0]),n.$set(m);const x={};p&1&&(x.gameWorld=f[0].gameWorld),r.$set(x)},i(f){u||(Os(t.$$.fragment,f),Os(n.$$.fragment,f),Os(r.$$.fragment,f),u=!0)},o(f){hi(t.$$.fragment,f),hi(n.$$.fragment,f),hi(r.$$.fragment,f),u=!1},d(f){Li(t,f),f&&Gt(e),Li(n,f),f&&Gt(i),Li(r,f),f&&Gt(o),f&&Gt(a),f&&Gt(l),f&&Gt(c),h=!1,d()}}}function kz(s,t,e){let{mode:n}=t;const i=()=>{n.respawnCar()};return s.$$set=r=>{"mode"in r&&e(0,n=r.mode)},[n,i]}class Az extends xr{constructor(t){super(),gr(this,t,kz,Mz,gi,{mode:0})}}function Nz(s){let t;return{c(){t=Ke("Train panel")},m(e,n){Ht(e,t,n)},p:en,i:en,o:en,d(e){e&&Gt(t)}}}function Rz(s,t,e){let{mode:n}=t;return s.$$set=i=>{"mode"in i&&e(0,n=i.mode)},[n]}class $z extends xr{constructor(t){super(),gr(this,t,Rz,Nz,gi,{mode:0})}}const b1=[0,-15,15,-30,30,-45,45,-60,60,-75,75,-90,90].map(s=>s*Math.PI/180).sort(function(s,t){return s-t}),Qi=8;class SC extends Gf{constructor(t,e,n,i,r,o=1,a=.25,l=.1){super();const c=new yo({friction:a,restitution:l}),u=new bo(.1,.1,.2),h=new rn(u,i);h.castShadow=!0,h.receiveShadow=!0,h.position.x=t,h.position.y=e,h.position.z=n,h.updateMatrix(),this.meshes.push(h),this.carBodyMesh=h;const d=new _u(new k(.05,.05,.1)),f=new Ft({mass:o/2,allowSleep:!1,collisionFilterGroup:Qi,collisionFilterMask:~Qi});f.addShape(d),f.position.x=h.position.x,f.position.y=h.position.y,f.position.z=h.position.z,this.bodies.push(f);const p=new ta(.033,.033,.02,16);p.rotateZ(Math.PI/2);const g=new rn(p,r);g.castShadow=!0,g.receiveShadow=!0,g.position.x=-.1+h.position.x,g.position.y=-.05+h.position.y,g.position.z=-.1+h.position.z,this.meshes.push(g),this.wheelLFMesh=g;const m=new Td(.033),x=new Ft({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:Qi,collisionFilterMask:~Qi});x.addShape(m),x.position.x=g.position.x,x.position.y=g.position.y,x.position.z=g.position.z,this.bodies.push(x);const v=new ta(.033,.033,.02,16);v.rotateZ(Math.PI/2);const y=new rn(v,r);y.castShadow=!0,y.receiveShadow=!0,y.position.x=.1+h.position.x,y.position.y=-.05+h.position.y,y.position.z=-.1+h.position.z,this.meshes.push(y),this.wheelRFMesh=y;const b=new Td(.033),w=new Ft({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:Qi,collisionFilterMask:~Qi});w.addShape(b),w.position.x=y.position.x,w.position.y=y.position.y,w.position.z=y.position.z,this.bodies.push(w);const S=new ta(.04,.04,.033);S.rotateZ(Math.PI/2);const C=new rn(S,r);C.castShadow=!0,C.receiveShadow=!0,C.position.x=-.1+h.position.x,C.position.y=-.05+h.position.y,C.position.z=.1+h.position.z,this.meshes.push(C),this.wheelLBMesh=C;const _=new Td(.04),I=new Ft({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:Qi,collisionFilterMask:~Qi});I.addShape(_),I.position.x=C.position.x,I.position.y=C.position.y,I.position.z=C.position.z,this.bodies.push(I);const T=new ta(.04,.04,.033);T.rotateZ(Math.PI/2);const N=new rn(T,r);N.castShadow=!0,N.receiveShadow=!0,N.position.x=.1+h.position.x,N.position.y=-.05+h.position.y,N.position.z=.1+h.position.z,this.meshes.push(N),this.wheelRBMesh=N;const P=new Td(.04),E=new Ft({mass:o/8,allowSleep:!1,material:c,collisionFilterGroup:Qi,collisionFilterMask:~Qi});E.addShape(P),E.position.x=N.position.x,E.position.y=N.position.y,E.position.z=N.position.z,this.bodies.push(E);const M=new k(1,0,0),A=new k(1,0,0),R=new k(1,0,0),V=new k(1,0,0);this.constraintLF=new Id(f,x,{pivotA:new k(-.1,-.05,-.1),axisA:M,maxForce:.99}),this.constraints.push(this.constraintLF),this.constraintRF=new Id(f,w,{pivotA:new k(.1,-.05,-.1),axisA:A,maxForce:.99}),this.constraints.push(this.constraintRF),this.constraintLB=new Id(f,I,{pivotA:new k(-.1,-.05,.1),axisA:R,maxForce:.99}),this.constraints.push(this.constraintLB),this.constraintRB=new Id(f,E,{pivotA:new k(.1,-.05,.1),axisA:V,maxForce:.99}),this.constraints.push(this.constraintRB),this.accelMotorForce=.004,this.brakeMotorForce=1,this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.enableMotor(),this.constraintRB.enableMotor()}getSensorRays(){const t=this.getForwardDir(),e=this.getSideDir();let n=this.carBodyMesh.position.clone().add(t.clone().multiplyScalar(.1));return b1.map(i=>{let r=t.clone().multiplyScalar(Math.cos(i)).add(e.clone().multiplyScalar(Math.sin(i))),o=n.clone().add(e.clone().multiplyScalar(.05*Math.sin(i))),a=new JS(o,r,.01,1);return a.layers.set(a0),a})}getSensorData(t){return this.getSensorRays().map(n=>{let i=n.intersectObjects(t.scene.children),r=i.length>0?i[0].distance/n.far:1,o=n.ray.origin,a=n.ray.direction;return{distance:r,origin:o,direction:a}})}static get sensorNumber(){return b1.length}getForwardVelocity(){let t=this.getForwardDir();t.y=0,t.normalize();let e=this.bodies[0].velocity;return t.x*e.x+t.z*e.z}getPosition(){return this.carBodyMesh.position.clone()}getForwardDir(){let t=this.wheelLFMesh.position.clone().sub(this.wheelLBMesh.position).normalize(),e=this.wheelRFMesh.position.clone().sub(this.wheelRBMesh.position).normalize();return t.clone().add(e).divideScalar(2)}getSideDir(){let t=this.wheelLBMesh.position.clone().sub(this.wheelRBMesh.position).normalize(),e=this.wheelLFMesh.position.clone().sub(this.wheelRFMesh.position).normalize();return t.clone().add(e).divideScalar(2)}rotateY(t){const e=this.getPosition();this.bodies.forEach(n=>{const i=new K(n.position.x,n.position.y,n.position.z).sub(e);i.applyAxisAngle(new K(0,1,0),t),n.position.set(i.x+e.x,i.y+e.y,i.z+e.z),n.quaternion=n.quaternion.mult(new mn().setFromAxisAngle(new k(0,1,0),-t))})}applyInput(t,e,n,i,r){t&&!n&&(this.constraintLB.setMotorSpeed(100),this.constraintRB.setMotorSpeed(100)),n&&!t&&(this.constraintLB.setMotorSpeed(-20),this.constraintRB.setMotorSpeed(-20)),(!t&&!n||t&&n)&&(this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0)),e&&!i&&(this.constraintLF.axisA.z=-.25,this.constraintRF.axisA.z=-.25),i&&!e&&(this.constraintLF.axisA.z=.25,this.constraintRF.axisA.z=.25),(!e&&!i||e&&i)&&(this.constraintLF.axisA.z=0,this.constraintRF.axisA.z=0),r?(this.constraintLB.setMotorMaxForce(this.brakeMotorForce),this.constraintRB.setMotorMaxForce(this.brakeMotorForce),this.constraintLB.setMotorSpeed(0),this.constraintRB.setMotorSpeed(0),this.constraintLF.enableMotor(),this.constraintRF.enableMotor(),this.constraintLF.setMotorMaxForce(this.brakeMotorForce),this.constraintRF.setMotorMaxForce(this.brakeMotorForce),this.constraintLF.setMotorSpeed(0),this.constraintRF.setMotorSpeed(0)):(this.constraintLF.disableMotor(),this.constraintRF.disableMotor(),this.constraintLB.setMotorMaxForce(this.accelMotorForce),this.constraintRB.setMotorMaxForce(this.accelMotorForce))}}const Dz=new GL,Fz=new wu({color:2236962});class CC{constructor(t){te(this,"gameWorld");te(this,"car");te(this,"keyupHandler");te(this,"keydownHandler");te(this,"arrowHelpers",[]);te(this,"sensorData",[]);te(this,"chaseMode",!0);te(this,"W",!1);te(this,"A",!1);te(this,"S",!1);te(this,"D",!1);te(this,"SPACE",!1);te(this,"_showSensors",!1);this.gameWorld=t,this.keydownHandler=e=>{switch(e.key){case"w":this.W=!0,e.preventDefault();break;case"a":this.A=!0,e.preventDefault();break;case"s":this.S=!0,e.preventDefault();break;case"d":this.D=!0,e.preventDefault();break;case" ":this.SPACE=!0,e.preventDefault();break}},this.keyupHandler=e=>{switch(e.key){case"w":this.W=!1,e.preventDefault();break;case"a":this.A=!1,e.preventDefault();break;case"s":this.S=!1,e.preventDefault();break;case"d":this.D=!1,e.preventDefault();break;case" ":this.SPACE=!1,e.preventDefault();break}}}update(t){var e;if((e=this.car)==null||e.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.car&&(this.sensorData=this.car.getSensorData(this.gameWorld),this.sensorData.forEach((n,i)=>{const r=this.arrowHelpers[i];r.setLength(n.distance,.05,.03),r.setDirection(n.direction),r.position.copy(n.origin),r.updateMatrix();const o=document.getElementById("arrow-length-indicator-"+i);o&&(o.style.width=n.distance*100+"%",o.innerText=n.distance.toFixed(2))})),this.car&&(document.getElementById("velocity-element").innerText=this.car.getForwardVelocity().toFixed(2)),this.chaseMode&&this.car){this.gameWorld.controls.target=this.car.getPosition(),this.gameWorld.controls.target.y+=.2;let n=this.car.getForwardDir();n.y=0,n.normalize(),n.multiplyScalar(-.5),n.y=.2,this.gameWorld.camera.position.copy(this.car.getPosition()),this.gameWorld.camera.position.add(n)}}get showSensors(){return this._showSensors}set showSensors(t){this._showSensors=t,this.arrowHelpers.forEach(e=>{e.visible=t})}removeCar(){this.car&&this.gameWorld.removeGameObject(this.car),delete this.car,this.arrowHelpers.forEach(t=>{this.gameWorld.scene.remove(t),t.dispose()}),this.arrowHelpers=[],this.sensorData=[]}respawnCar(){this.removeCar(),this.car=new SC(this.gameWorld.raceTrack.startX,.4,this.gameWorld.raceTrack.startZ,Dz,Fz,5,.25,.1),this.car.rotateY(this.gameWorld.raceTrack.startRotation),this.gameWorld.addGameObject(this.car),this.arrowHelpers=this.car.getSensorRays().map(t=>{const e=t.ray.direction;e.normalize();const n=t.ray.origin,i=e.length(),r=16776960,o=new YL(e,n,i,r);return o.visible=this.showSensors,this.gameWorld.scene.add(o),o}),this.sensorData=this.car.getSensorData(this.gameWorld)}activate(){this.W=this.A=this.S=this.D=this.SPACE=!1,this.respawnCar(),document.addEventListener("keydown",this.keydownHandler),document.addEventListener("keyup",this.keyupHandler)}deactivate(){this.removeCar(),document.removeEventListener("keydown",this.keydownHandler),document.removeEventListener("keyup",this.keyupHandler)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz=1e-7,Pz=1e-4;class IC{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class l0{refCount(t){return ys("refCount")}incRef(t){return ys("incRef")}timerAvailable(){return!0}time(t){return ys("time")}read(t){return ys("read")}readSync(t){return ys("readSync")}readToGPU(t,e){return ys("readToGPU")}numDataIds(){return ys("numDataIds")}disposeData(t,e){return ys("disposeData")}write(t,e,n){return ys("write")}move(t,e,n,i,r){return ys("move")}createTensorFromTexture(t,e,n){return ys("createTensorFromTexture")}memory(){return ys("memory")}floatPrecision(){return ys("floatPrecision")}epsilon(){return this.floatPrecision()===32?Lz:Pz}dispose(){return ys("dispose")}}function ys(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(s){let t=s.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,bl(s,t,e)}function ba(s,t,e){return Math.max(s,Math.min(t,e))}function c0(s){return s%2===0?s:s+1}function bl(s,t,e){const n=s[t];s[t]=s[e],s[e]=n}function zz(s){let t=0;for(let e=0;e<s.length;e++)t+=s[e];return t}function D(s,t){if(!s)throw new Error(typeof t=="string"?t:t())}function vi(s,t,e=""){D(ke(s,t),()=>e+` Shapes ${s} and ${t} must match`)}function TC(s){D(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Wl(s,t=[],e=!1){if(t==null&&(t=[]),Array.isArray(s)||Vi(s)&&!e)for(let n=0;n<s.length;++n)Wl(s[n],t,e);else t.push(s);return t}function ht(s){if(s.length===0)return 1;let t=s[0];for(let e=1;e<s.length;e++)t*=s[e];return t}function ke(s,t){if(s===t)return!0;if(s==null||t==null||s.length!==t.length)return!1;for(let e=0;e<s.length;e++)if(s[e]!==t[e])return!1;return!0}function Gl(s){return s%1===0}function nx(s){const t=Math.ceil(Math.sqrt(s));return[t,Math.ceil(s/t)]}function Al(s,t){return t<=s.length?s:s+" ".repeat(t-s.length)}function y1(s,t=i=>0,e,n){return new Promise((i,r)=>{let o=0;const a=()=>{if(s()){i();return}o++;const l=t(o);if(e!=null&&o>=e){r();return}n!=null?n(a,l):setTimeout(a,l)};a()})}function EC(s,t){let e=1,n=-1;for(let r=0;r<s.length;++r)if(s[r]>=0)e*=s[r];else if(s[r]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${r}`);n=r}else if(s[r]<0)throw Error(`Shapes can not be < 0. Found ${s[r]} at dim ${r}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${s}`);return s}if(e===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const i=s.slice();return i[n]=t/e,i}function pe(s,t){const e=t.length;return s=s==null?t.map((n,i)=>i):[].concat(s),D(s.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${s}`),D(s.every(n=>Gl(n)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(n=>n<0?e+n:n)}function wo(s,t){const e=[],n=[],i=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||i?null:pe(t,s).sort();let o=0;for(let a=0;a<s.length;++a){if(r!=null){if(r[o]===a&&s[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${s[a]}' is not 1`);(r[o]==null||r[o]>a)&&s[a]===1&&(e.push(s[a]),n.push(a)),r[o]<=a&&o++}s[a]!==1&&(e.push(s[a]),n.push(a))}return{newShape:e,keptDims:n}}function Gn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${s}`);return e}function gn(s,t){let e=null;if(s==null||s==="float32")e=new Float32Array(t);else if(s==="int32")e=new Int32Array(t);else if(s==="bool")e=new Uint8Array(t);else if(s==="string")e=new Array(t);else throw new Error(`Unknown data type ${s}`);return e}function Bz(s,t){for(let e=0;e<s.length;e++){const n=s[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function Uz(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function MC(s,t){return!(t==="complex64"||t==="float32"&&s!=="complex64"||t==="int32"&&s!=="float32"&&s!=="complex64"||t==="bool"&&s==="bool")}function Vi(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}function sx(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function Vz(s){if(s==null)return 0;let t=0;return s.forEach(e=>t+=e.length),t}function Tu(s){return typeof s=="string"||s instanceof String}function Wz(s){return typeof s=="boolean"}function ix(s){return typeof s=="number"}function Eu(s){return Array.isArray(s)?Eu(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray?"int32":ix(s)?"float32":Tu(s)?"string":Wz(s)?"bool":"float32"}function rx(s){return!!(s&&s.constructor&&s.call&&s.apply)}function ox(s,t){for(let e=t;e<s;++e)if(s%e===0)return e;return s}function Zt(s){const t=s.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=s[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*s[n+1];return e}function kC(s,t,e,n=!1){const i=new Array;if(t.length===1){const r=t[0]*(n?2:1);for(let o=0;o<r;o++)i[o]=e[s+o]}else{const r=t[0],o=t.slice(1),a=o.reduce((l,c)=>l*c)*(n?2:1);for(let l=0;l<r;l++)i[l]=kC(s+l*a,o,e,n)}return i}function Pi(s,t,e=!1){if(s.length===0)return t[0];const n=s.reduce((i,r)=>i*r)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${s}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return kC(0,s,t,e)}function u0(s,t){const e=Qn(s,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function Qn(s,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${t}`)}function AC(s,t){const e=s.reduce((n,i)=>n*i,1);if(t==null||t==="float32")return Pi(s,new Float32Array(e));if(t==="int32")return Pi(s,new Int32Array(e));if(t==="bool")return Pi(s,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function NC(s){s.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function ur(s,t,e){if(t===0)return 0;if(t===1)return s[0];let n=s[s.length-1];for(let i=0;i<s.length-1;++i)n+=e[i]*s[i];return n}function uc(s,t,e){if(t===0)return[];if(t===1)return[s];const n=new Array(t);for(let i=0;i<n.length-1;++i)n[i]=Math.floor(s/e[i]),s-=n[i]*e[i];return n[n.length-1]=s,n}function h0(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w1="tfjsflags";class Gz{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Hz,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){const i=this.urlFlags[t];at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${i}.`),this.set(t,i)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(h0(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);w1 in t&&t[w1].split(",").forEach(n=>{const[i,r]=n.split(":");this.urlFlags[i]=Xz(i,r)})}}function Hz(s){const t={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(qz(t,n[0],n[1]),n.join("="))),t}function qz(s,t,e){s[decodeURIComponent(t)]=decodeURIComponent(e||"")}function Xz(s,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${s}.`)}function at(){return RC}let RC=null;function jz(s){RC=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Sg;function $C(){if(Sg==null){let s;if(typeof window<"u")s=window;else if(typeof global<"u")s=global;else if(typeof process<"u")s=process;else if(typeof self<"u")s=self;else throw new Error("Could not find a global object");Sg=s}return Sg}function Kz(){const s=$C();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function d0(s,t){const e=Kz();if(e.has(s))return e.get(s);{const n=t();return e.set(s,n),e.get(s)}}const Xf="Abs",Mu="Acos",ku="Acosh",hc="Add",f0="AddN",p0="All",m0="Any",jf="ArgMax",Kf="ArgMin",Au="Asin",Nu="Asinh",Ru="Atan",$u="Atanh",Du="Atan2",Yf="AvgPool",g0="AvgPoolGrad",Zf="AvgPool3D",x0="AvgPool3DGrad",Jf="BatchMatMul",Qf="BatchToSpaceND",v0="Bincount",Yz="BroadcastTo",DC="BroadcastArgs",Fu="Cast",Lu="Ceil",Pu="ClipByValue",b0="Complex",tp="ComplexAbs",ep="Concat",np="Conv2D",y0="Conv2DBackpropFilter",sp="Conv2DBackpropInput",ip="Conv3D",w0="Conv3DBackpropFilterV2",_0="Conv3DBackpropInputV2",Ou="Cos",zu="Cosh",S0="Cumprod",rp="Cumsum",C0="CropAndResize",I0="DenseBincount",T0="DepthToSpace",op="DepthwiseConv2dNative",E0="DepthwiseConv2dNativeBackpropFilter",M0="DepthwiseConv2dNativeBackpropInput",FC="Diag",ap="Dilation2D",ax="Dilation2DBackpropInput",lx="Dilation2DBackpropFilter",Bu="RealDiv",LC="Einsum",Uu="Elu",k0="EluGrad",Vu="Erf",lp="Equal",Wu="Exp",cp="ExpandDims",Gu="Expm1",A0="FFT",N0="Fill",R0="FlipLeftRight",Hu="Floor",qu="FloorDiv",up="FusedBatchNorm",hp="GatherV2",PC="GatherNd",dp="Greater",Xu="GreaterEqual",ju="Identity",$0="IFFT",D0="Imag",Ku="IsFinite",Yu="IsInf",Zu="IsNan",fp="LeakyRelu",pp="Less",mp="LessEqual",OC="LinSpace",Ju="Log",Qu="Log1p",gp="LogicalAnd",xp="LogicalNot",vp="LogicalOr",Zz="LogSoftmax",bp="LRN",F0="LRNGrad",yp="Max",th="Maximum",wp="MaxPool",L0="MaxPoolGrad",_p="MaxPool3D",P0="MaxPool3DGrad",zC="MaxPoolWithArgmax",Sp="Mean",Cp="Min",eh="Minimum",Ip="MirrorPad",nh="Mod",BC="Multinomial",sh="Multiply",Tp="Neg",Ep="NotEqual",O0="NonMaxSuppressionV3",z0="NonMaxSuppressionV4",B0="NonMaxSuppressionV5",Mp="OnesLike",kp="OneHot",Ap="Pack",Np="PadV2",ih="Pow",Rp="Prelu",$p="Prod",UC="RaggedGather",VC="RaggedRange",WC="RaggedTensorToTensor",U0="Range",V0="Real",rh="Reciprocal",oh="Relu",Dp="Reshape",Fp="ResizeNearestNeighbor",W0="ResizeNearestNeighborGrad",Lp="ResizeBilinear",G0="ResizeBilinearGrad",ah="Relu6",Pp="Reverse",lh="Round",ch="Rsqrt",GC="ScatterNd",HC="SearchSorted",Op="Select",uh="Selu",zp="Slice",hh="Sin",dh="Sinh",fh="Sign",ph="Sigmoid",mh="Softplus",gh="Sqrt",Bp="Sum",Up="SpaceToBatchND",Vp="SplitV",Wp="Softmax",H0="SparseFillEmptyRows",q0="SparseReshape",X0="SparseSegmentMean",j0="SparseSegmentSum",qC="SparseToDense",xh="SquaredDifference",K0="Square",Y0="StridedSlice",Z0="StringNGrams",J0="StringSplit",Q0="StringToHashBucketFast",vh="Sub",bh="Tan",yh="Tanh",wh="Tile",tv="TopK",ev="Transform",Nl="Transpose",nv="Unique",Gp="Unpack",Hp="UnsortedSegmentSum",qp="ZerosLike",_h="Step",Jz="FromPixels",sv="RotateWithOffset",rf="_FusedMatMul",of="FusedConv2D",XC="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(...s){at().getBool("IS_TEST")||at().getBool("PROD")||console.warn(...s)}function Qz(...s){at().getBool("IS_TEST")||at().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const af=d0("kernelRegistry",()=>new Map),cx=d0("gradRegistry",()=>new Map);function _1(s,t){const e=KC(s,t);return af.get(e)}function S1(s){return cx.get(s)}function C1(s){const t=af.entries(),e=[];for(;;){const{done:n,value:i}=t.next();if(n)break;const[r,o]=i,[a]=r.split("_");a===s&&e.push(o)}return e}function jC(s){const{kernelName:t,backendName:e}=s,n=KC(t,e);af.has(n)&&Ls(`The kernel '${t}' for backend '${e}' is already registered`),af.set(n,s)}function tB(s){const{kernelName:t}=s;cx.has(t)&&at().getBool("DEBUG")&&Ls(`Overriding the gradient for '${t}'`),cx.set(t,s)}function KC(s,t){return`${t}_${s}`}var ux=qe,ri=null;try{ri=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function qe(s,t,e){this.low=s|0,this.high=t|0,this.unsigned=!!e}qe.prototype.__isLong__;Object.defineProperty(qe.prototype,"__isLong__",{value:!0});function Ns(s){return(s&&s.__isLong__)===!0}qe.isLong=Ns;var I1={},T1={};function Fa(s,t){var e,n,i;return t?(s>>>=0,(i=0<=s&&s<256)&&(n=T1[s],n)?n:(e=Xe(s,(s|0)<0?-1:0,!0),i&&(T1[s]=e),e)):(s|=0,(i=-128<=s&&s<128)&&(n=I1[s],n)?n:(e=Xe(s,s<0?-1:0,!1),i&&(I1[s]=e),e))}qe.fromInt=Fa;function oi(s,t){if(isNaN(s))return t?na:ai;if(t){if(s<0)return na;if(s>=YC)return QC}else{if(s<=-M1)return Cs;if(s+1>=M1)return JC}return s<0?oi(-s,t).neg():Xe(s%Hl|0,s/Hl|0,t)}qe.fromNumber=oi;function Xe(s,t,e){return new qe(s,t,e)}qe.fromBits=Xe;var lf=Math.pow;function iv(s,t,e){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return ai;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=s.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return iv(s.substring(1),t,e).neg();for(var i=oi(lf(e,8)),r=ai,o=0;o<s.length;o+=8){var a=Math.min(8,s.length-o),l=parseInt(s.substring(o,o+a),e);if(a<8){var c=oi(lf(e,a));r=r.mul(c).add(oi(l))}else r=r.mul(i),r=r.add(oi(l))}return r.unsigned=t,r}qe.fromString=iv;function Xi(s,t){return typeof s=="number"?oi(s,t):typeof s=="string"?iv(s,t):Xe(s.low,s.high,typeof t=="boolean"?t:s.unsigned)}qe.fromValue=Xi;var E1=1<<16,eB=1<<24,Hl=E1*E1,YC=Hl*Hl,M1=YC/2,k1=Fa(eB),ai=Fa(0);qe.ZERO=ai;var na=Fa(0,!0);qe.UZERO=na;var Cl=Fa(1);qe.ONE=Cl;var ZC=Fa(1,!0);qe.UONE=ZC;var hx=Fa(-1);qe.NEG_ONE=hx;var JC=Xe(-1,2147483647,!1);qe.MAX_VALUE=JC;var QC=Xe(-1,-1,!0);qe.MAX_UNSIGNED_VALUE=QC;var Cs=Xe(0,-2147483648,!1);qe.MIN_VALUE=Cs;var Et=qe.prototype;Et.toInt=function(){return this.unsigned?this.low>>>0:this.low};Et.toNumber=function(){return this.unsigned?(this.high>>>0)*Hl+(this.low>>>0):this.high*Hl+(this.low>>>0)};Et.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Cs)){var e=oi(t),n=this.div(e),i=n.mul(e).sub(this);return n.toString(t)+i.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var r=oi(lf(t,6),this.unsigned),o=this,a="";;){var l=o.div(r),c=o.sub(l.mul(r)).toInt()>>>0,u=c.toString(t);if(o=l,o.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};Et.getHighBits=function(){return this.high};Et.getHighBitsUnsigned=function(){return this.high>>>0};Et.getLowBits=function(){return this.low};Et.getLowBitsUnsigned=function(){return this.low>>>0};Et.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Cs)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};Et.isZero=function(){return this.high===0&&this.low===0};Et.eqz=Et.isZero;Et.isNegative=function(){return!this.unsigned&&this.high<0};Et.isPositive=function(){return this.unsigned||this.high>=0};Et.isOdd=function(){return(this.low&1)===1};Et.isEven=function(){return(this.low&1)===0};Et.equals=function(t){return Ns(t)||(t=Xi(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};Et.eq=Et.equals;Et.notEquals=function(t){return!this.eq(t)};Et.neq=Et.notEquals;Et.ne=Et.notEquals;Et.lessThan=function(t){return this.comp(t)<0};Et.lt=Et.lessThan;Et.lessThanOrEqual=function(t){return this.comp(t)<=0};Et.lte=Et.lessThanOrEqual;Et.le=Et.lessThanOrEqual;Et.greaterThan=function(t){return this.comp(t)>0};Et.gt=Et.greaterThan;Et.greaterThanOrEqual=function(t){return this.comp(t)>=0};Et.gte=Et.greaterThanOrEqual;Et.ge=Et.greaterThanOrEqual;Et.compare=function(t){if(Ns(t)||(t=Xi(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};Et.comp=Et.compare;Et.negate=function(){return!this.unsigned&&this.eq(Cs)?Cs:this.not().add(Cl)};Et.neg=Et.negate;Et.add=function(t){Ns(t)||(t=Xi(t));var e=this.high>>>16,n=this.high&65535,i=this.low>>>16,r=this.low&65535,o=t.high>>>16,a=t.high&65535,l=t.low>>>16,c=t.low&65535,u=0,h=0,d=0,f=0;return f+=r+c,d+=f>>>16,f&=65535,d+=i+l,h+=d>>>16,d&=65535,h+=n+a,u+=h>>>16,h&=65535,u+=e+o,u&=65535,Xe(d<<16|f,u<<16|h,this.unsigned)};Et.subtract=function(t){return Ns(t)||(t=Xi(t)),this.add(t.neg())};Et.sub=Et.subtract;Et.multiply=function(t){if(this.isZero())return ai;if(Ns(t)||(t=Xi(t)),ri){var e=ri.mul(this.low,this.high,t.low,t.high);return Xe(e,ri.get_high(),this.unsigned)}if(t.isZero())return ai;if(this.eq(Cs))return t.isOdd()?Cs:ai;if(t.eq(Cs))return this.isOdd()?Cs:ai;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(k1)&&t.lt(k1))return oi(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,i=this.high&65535,r=this.low>>>16,o=this.low&65535,a=t.high>>>16,l=t.high&65535,c=t.low>>>16,u=t.low&65535,h=0,d=0,f=0,p=0;return p+=o*u,f+=p>>>16,p&=65535,f+=r*u,d+=f>>>16,f&=65535,f+=o*c,d+=f>>>16,f&=65535,d+=i*u,h+=d>>>16,d&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=o*l,h+=d>>>16,d&=65535,h+=n*u+i*c+r*l+o*a,h&=65535,Xe(f<<16|p,h<<16|d,this.unsigned)};Et.mul=Et.multiply;Et.divide=function(t){if(Ns(t)||(t=Xi(t)),t.isZero())throw Error("division by zero");if(ri){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?ri.div_u:ri.div_s)(this.low,this.high,t.low,t.high);return Xe(e,ri.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?na:ai;var n,i,r;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return na;if(t.gt(this.shru(1)))return ZC;r=na}else{if(this.eq(Cs)){if(t.eq(Cl)||t.eq(hx))return Cs;if(t.eq(Cs))return Cl;var o=this.shr(1);return n=o.div(t).shl(1),n.eq(ai)?t.isNegative()?Cl:hx:(i=this.sub(t.mul(n)),r=n.add(i.div(t)),r)}else if(t.eq(Cs))return this.unsigned?na:ai;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=ai}for(i=this;i.gte(t);){n=Math.max(1,Math.floor(i.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),l=a<=48?1:lf(2,a-48),c=oi(n),u=c.mul(t);u.isNegative()||u.gt(i);)n-=l,c=oi(n,this.unsigned),u=c.mul(t);c.isZero()&&(c=Cl),r=r.add(c),i=i.sub(u)}return r};Et.div=Et.divide;Et.modulo=function(t){if(Ns(t)||(t=Xi(t)),ri){var e=(this.unsigned?ri.rem_u:ri.rem_s)(this.low,this.high,t.low,t.high);return Xe(e,ri.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};Et.mod=Et.modulo;Et.rem=Et.modulo;Et.not=function(){return Xe(~this.low,~this.high,this.unsigned)};Et.and=function(t){return Ns(t)||(t=Xi(t)),Xe(this.low&t.low,this.high&t.high,this.unsigned)};Et.or=function(t){return Ns(t)||(t=Xi(t)),Xe(this.low|t.low,this.high|t.high,this.unsigned)};Et.xor=function(t){return Ns(t)||(t=Xi(t)),Xe(this.low^t.low,this.high^t.high,this.unsigned)};Et.shiftLeft=function(t){return Ns(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Xe(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Xe(0,this.low<<t-32,this.unsigned)};Et.shl=Et.shiftLeft;Et.shiftRight=function(t){return Ns(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Xe(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Xe(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};Et.shr=Et.shiftRight;Et.shiftRightUnsigned=function(t){if(Ns(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var n=this.low;return Xe(n>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?Xe(e,0,this.unsigned):Xe(e>>>t-32,0,this.unsigned)};Et.shru=Et.shiftRightUnsigned;Et.shr_u=Et.shiftRightUnsigned;Et.toSigned=function(){return this.unsigned?Xe(this.low,this.high,!1):this};Et.toUnsigned=function(){return this.unsigned?this:Xe(this.low,this.high,!0)};Et.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};Et.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};Et.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};qe.fromBytes=function(t,e,n){return n?qe.fromBytesLE(t,e):qe.fromBytesBE(t,e)};qe.fromBytesLE=function(t,e){return new qe(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};qe.fromBytesBE=function(t,e){return new qe(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const nB=lA({__proto__:null,default:ux},[ux]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo=ux||nB;function Xp(s){return Xo.fromString(s,!0,16)}const tI=Xp("c3a5c85c97cb3127"),Go=Xp("b492b66fbe98f273"),is=Xp("9ae16a3b2f90404f");function dx(s){return s.xor(s.shru(47))}function eI(s,t,e){const n=s.slice(t,t+e);return Xo.fromBytes(Array.from(n),!0,!0)}function Ue(s,t){return eI(s,t,8)}function A1(s,t){return eI(s,t,4)}function Rn(s,t){return t===0?s:s.shru(t).or(s.shl(64-t))}function ro(s,t,e=Xp("9ddfea08eb382d69")){let n=s.xor(t).mul(e);n=n.xor(n.shru(47));let i=t.xor(n).mul(e);return i=i.xor(i.shru(47)),i=i.mul(e),i}function sB(s,t,e,n,i,r){i=i.add(s),r=Rn(r.add(i).add(n),21);const o=i;return i=i.add(t),i=i.add(e),r=r.add(Rn(i,44)),[i.add(n),r.add(o)]}function Ad(s,t,e,n){return sB(Ue(s,t),Ue(s,t+8),Ue(s,t+16),Ue(s,t+24),e,n)}function iB(s,t=s.length){if(t>=8){const e=is.add(t*2),n=Ue(s,0).add(is),i=Ue(s,t-8),r=Rn(i,37).mul(e).add(n),o=Rn(n,25).add(i).mul(e);return ro(r,o,e)}if(t>=4){const e=is.add(t*2),n=A1(s,0);return ro(n.shl(3).add(t),A1(s,t-4),e)}if(t>0){const e=s[0],n=s[t>>1],i=s[t-1],r=e+(n<<8),o=t+(i<<2);return dx(is.mul(r).xor(tI.mul(o))).mul(is)}return is}function rB(s,t=s.length){const e=is.add(t*2),n=Ue(s,0).mul(Go),i=Ue(s,8),r=Ue(s,t-8).mul(e),o=Ue(s,t-16).mul(is);return ro(Rn(n.add(i),43).add(Rn(r,30)).add(o),n.add(Rn(i.add(is),18)).add(r),e)}function oB(s,t=s.length){const e=is.add(t*2),n=Ue(s,0).mul(is),i=Ue(s,8),r=Ue(s,t-8).mul(e),o=Ue(s,t-16).mul(is),a=Rn(n.add(i),43).add(Rn(r,30)).add(o),l=ro(a,n.add(Rn(i.add(is),18)).add(r),e),c=Ue(s,16).mul(e),u=Ue(s,24),h=a.add(Ue(s,t-32)).mul(e),d=l.add(Ue(s,t-24)).mul(e);return ro(Rn(c.add(u),43).add(Rn(h,30)).add(d),c.add(Rn(u.add(n),18)).add(h),e)}function aB(s,t=s.length){const e=Xo.fromNumber(81,!0);if(t<=32)return t<=16?iB(s,t):rB(s,t);if(t<=64)return oB(s,t);let n=e,i=e.mul(Go).add(113),r=dx(i.mul(is).add(113)).mul(is),o=[Xo.UZERO,Xo.UZERO],a=[Xo.UZERO,Xo.UZERO];n=n.mul(is).add(Ue(s,0));let l=0;const c=(t-1>>6)*64,u=c+(t-1&63)-63;do n=Rn(n.add(i).add(o[0]).add(Ue(s,l+8)),37).mul(Go),i=Rn(i.add(o[1]).add(Ue(s,l+48)),42).mul(Go),n=n.xor(a[1]),i=i.add(o[0]).add(Ue(s,l+40)),r=Rn(r.add(a[0]),33).mul(Go),o=Ad(s,l,o[1].mul(Go),n.add(a[0])),a=Ad(s,l+32,r.add(a[1]),i.add(Ue(s,l+16))),[r,n]=[n,r],l+=64;while(l!==c);const h=Go.add(r.and(255).shl(1));return l=u,a[0]=a[0].add(t-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),n=Rn(n.add(i).add(o[0]).add(Ue(s,l+8)),37).mul(h),i=Rn(i.add(o[1]).add(Ue(s,l+48)),42).mul(h),n=n.xor(a[1].mul(9)),i=i.add(o[0].mul(9).add(Ue(s,l+40))),r=Rn(r.add(a[0]),33).mul(h),o=Ad(s,l,o[1].mul(h),n.add(a[0])),a=Ad(s,l+32,r.add(a[1]),i.add(Ue(s,l+16))),[r,n]=[n,r],ro(ro(o[0],a[0],h).add(dx(i).mul(tI)).add(r),ro(o[1],a[1],h).add(n),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _o(s,t){return t==="string"?oo(s):La([s],t)}function lB(s,t){return s instanceof Float32Array&&t==="float32"||s instanceof Int32Array&&t==="int32"||s instanceof Uint8Array&&t==="bool"}function La(s,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=Wl(s)),at().getBool("DEBUG")&&Bz(s,t),lB(s,t))return s;if(t==null||t==="float32"||t==="complex64")return new Float32Array(s);if(t==="int32")return new Int32Array(s);if(t==="bool"){const e=new Uint8Array(s.length);for(let n=0;n<e.length;++n)Math.round(s[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Kn(){return at().platform.now()}function oo(s,t="utf-8"){return t=t||"utf-8",at().platform.encode(s,t)}function co(s,t="utf-8"){return t=t||"utf-8",at().platform.decode(s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cB{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new hB)}profileKernel(t,e,n){let i;const r=()=>{i=n()};let o;const a=Kn();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const c of i)c.dataSync();o=Promise.resolve({kernelMs:Kn()-a})}if(at().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<i.length;c++){const u=i[c];u.data().then(h=>{uB(h,u.dtype,t)})}return{kernelName:t,outputs:i,inputs:e,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:i,inputs:r,extraInfo:o}=t;n.forEach(a=>{Promise.all([a.data(),i,o]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],r,l[2])})})}}function uB(s,t,e){if(t!=="float32")return!1;for(let n=0;n<s.length;n++){const i=s[n];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${e}'`),!0}return!1}class hB{logKernelProfile(t,e,n,i,r,o){const a=typeof i=="number"?Al(`${i}ms`,9):i.error,l=Al(t,25),c=e.rank,u=e.size,h=Al(e.shape.toString(),14);let d="";for(const f in r){const p=r[f];if(p!=null){const g=p.shape||e.shape,m=g.length;d+=`${f}: ${m}D ${m>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(s,t,e){const n={},i={};for(let l=0;l<t.length;l++)n[t[l].id]=!0;for(let l=0;l<s.length;l++){const c=s[l],u=c.inputs;for(const h in u){const d=u[h];let f=!1;for(let p=0;p<t.length;p++)if(n[d.id]){c.outputs.forEach(g=>n[g.id]=!0),f=!0,i[c.id]=!0;break}if(f)break}}const r={};r[e.id]=!0;const o={};for(let l=s.length-1;l>=0;l--){const c=s[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(r[c.outputs[h].id]){for(const d in u)r[u[d].id]=!0,o[c.id]=!0;break}}const a=[];for(let l=0;l<s.length;l++){const c=s[l];if(i[c.id]&&o[c.id]){const u={};for(const d in c.inputs){const f=c.inputs[d];n[f.id]&&(u[d]=f)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function fB(s,t,e,n){for(let i=t.length-1;i>=0;i--){const r=t[i],o=[];if(r.outputs.forEach(l=>{const c=s[l.id];c!=null?o.push(c):o.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(o);for(const l in r.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=e(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=r.inputs[l];if(!ke(c.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(s[u.id]==null)s[u.id]=c;else{const h=s[u.id];s[u.id]=n(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N1=20,Fc=3,Cg=7;function pB(s,t,e,n){const i=Zt(t),r=mB(s,t,e,i),o=t.length,a=Kd(s,t,e,i,r),l=["Tensor"];return n&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${o}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function mB(s,t,e,n){const i=ht(t),r=n[n.length-1],o=new Array(r).fill(0),a=t.length,l=e==="complex64"?Uc(s):s;if(a>1)for(let c=0;c<i/r;c++){const u=c*r;for(let h=0;h<r;h++)o[h]=Math.max(o[h],Bc(l[u+h],0,e).length)}return o}function Bc(s,t,e){let n;return Array.isArray(s)?n=`${parseFloat(s[0].toFixed(Cg))} + ${parseFloat(s[1].toFixed(Cg))}j`:Tu(s)?n=`'${s}'`:e==="bool"?n=nI(s):n=parseFloat(s.toFixed(Cg)).toString(),Al(n,t)}function nI(s){return s===0?"false":"true"}function Kd(s,t,e,n,i,r=!0){const o=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){const g=Uc(s);return[Bc(g[0],0,e)]}return e==="bool"?[nI(s[0])]:[s[0].toString()]}if(l===1){if(a>N1){const m=Fc*o;let x=Array.from(s.slice(0,m)),v=Array.from(s.slice((a-Fc)*o,a*o));return e==="complex64"&&(x=Uc(x),v=Uc(v)),["["+x.map((y,b)=>Bc(y,i[b],e)).join(", ")+", ..., "+v.map((y,b)=>Bc(y,i[a-Fc+b],e)).join(", ")+"]"]}return["["+(e==="complex64"?Uc(s):Array.from(s)).map((m,x)=>Bc(m,i[x],e)).join(", ")+"]"]}const c=t.slice(1),u=n.slice(1),h=n[0]*o,d=[];if(a>N1){for(let g=0;g<Fc;g++){const m=g*h,x=m+h;d.push(...Kd(s.slice(m,x),c,e,u,i,!1))}d.push("...");for(let g=a-Fc;g<a;g++){const m=g*h,x=m+h;d.push(...Kd(s.slice(m,x),c,e,u,i,g===a-1))}}else for(let g=0;g<a;g++){const m=g*h,x=m+h;d.push(...Kd(s.slice(m,x),c,e,u,i,g===a-1))}const f=l===2?",":"";d[0]="["+d[0]+f;for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+f;let p=`,
`;for(let g=2;g<l;g++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":p),d}function Uc(s){const t=[];for(let e=0;e<s.length;e+=2)t.push([s[e],s[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zn{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=ht(t),n!=null){const i=n.length;D(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||gn(e,this.size),this.strides=Zt(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const i of t){if(i<0||i>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let n=t[t.length-1];for(let i=0;i<t.length-1;++i)n+=this.strides[i]*t[i];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Mi().makeTensor(this.values,this.shape,this.dtype)}}let Mi=null,yl=null;function gB(s){Mi=s}function xB(s){yl=s}class Ye{constructor(t,e,n,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ht(t),this.strides=Zt(t),this.dataId=n,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return yl.buffer(this.shape,this.dtype,t)}bufferSync(){return yl.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Pi(this.shape,t,this.dtype==="complex64")}arraySync(){return Pi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Mi().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(n=>co(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Mi().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Mi().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>co(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Mi().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Mi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return yl.print(this,t)}clone(){return this.throwIfDisposed(),yl.clone(this)}toString(t=!1){const e=this.dataSync();return pB(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),yl.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Mi().makeVariable(this,t,e,n)}}Object.defineProperty(Ye,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function ct(){return d0("Tensor",()=>Ye)}ct();class cf extends Ye{constructor(t,e,n,i){super(t.shape,t.dtype,t.dataId,i),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!ke(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Mi().disposeTensor(this),this.dataId=t.dataId,Mi().incRef(this,null)}dispose(){Mi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(cf,Symbol.hasInstance,{value:s=>s instanceof Ye&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var R1;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(R1||(R1={}));var fx;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(fx||(fx={}));var px;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(px||(px={}));var mx;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(mx||(mx={}));var gx;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})(gx||(gx={}));const vB={float32:mx,int32:fx,bool:px,complex64:gx};function Ts(s,t){if(s==="string"||t==="string"){if(s==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${s} with ${t}`)}return vB[s][t]}function rv(s){return Ts(s,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(s,t){if(s.dtype===t.dtype)return[s,t];const e=Ts(s.dtype,t.dtype);return[s.cast(e),t.cast(e)]}function ov(s,t){return t.some(e=>e.id===s.id)}function uo(s){const t=[];return sI(s,t,new Set),t}function sI(s,t,e){if(s==null)return;if(s instanceof Ye){t.push(s);return}if(!bB(s))return;const n=s;for(const i in n){const r=n[i];e.has(r)||(e.add(r),sI(r,t,e))}}function bB(s){return Array.isArray(s)||typeof s=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ig(s){return s.kernelName!=null}class $1{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class ql{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new $1}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Ls(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new cB(this.backendInstance),!0}setupRegisteredKernels(){C1(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){C1(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(n&&!(n instanceof l0)&&typeof n.then=="function"){const i=++this.pendingBackendInitId,r=n.then(o=>i<this.pendingBackendInitId?!1:(this.registry[t]=o,this.pendingBackendInit=null,!0)).catch(o=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Ls(`Initialization of backend ${t} failed`),Ls(o.stack||o.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return Ls(`Initialization of backend ${t} failed`),Ls(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:i,asyncInit:r}=this.initializeBackend(n);if(r||i)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),i=n.backend,r=this.readSync(e),o=i.refCount(e);i.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let i;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(i),()=>(i=e(),i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),i))}scopedRun(t,e,n){t();try{const i=n();return e(),i}catch(i){throw e(),i}}nextTensorId(){return ql.nextTensorId++}nextVariableId(){return ql.nextVariableId++}clone(t){const e=j.runKernel(ju,{x:t}),n={x:t},i=o=>({x:()=>{const a="float32",l={x:o},c={dtype:a};return j.runKernel(Fu,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[e],i,r,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(_1(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const i=this.backend.numDataIds();let r=0;n.forEach(l=>{r+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=i-e-r-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const i=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=Ig(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ig(t)){const{kernelName:p,inputs:g,attrs:m}=t;this.backendName==null&&this.backend;const x=_1(p,this.backendName);D(x!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const v=this.backend.numDataIds();l=x.kernelFunc({inputs:g,attrs:m,backend:this.backend});const y=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,v,y);const b=y.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(i){const w=this.getTensorsForGradient(p,g,b);n=this.saveTensorsForBackwardMode(w)}return b}}else{const{forwardFunc:p}=t,g=m=>{!i||(n=m.map(x=>this.keep(this.clone(x))))};a=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,g));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,m,x),x}}const{inputs:u,attrs:h}=t,d=Ig(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),i&&this.addTapeNode(c,u,e,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:e.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){const i=S1(t);if(i!=null){const r=i.inputsToSave||[],o=i.outputsToSave||[];let a;i.saveAllInputs?(D(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(c=>e[c])):a=r.map(c=>e[c]);const l=n.filter((c,u)=>o[u]);return a.concat(l)}return[]}makeTensor(t,e,n,i){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",i=i||this.backend;let r=t;n==="string"&&Tu(t[0])&&(r=t.map(l=>oo(l)));const o=i.write(r,e,n),a=new Ye(e,n,o,this.nextTensorId());if(this.trackTensor(a,i),n==="string"){const l=this.state.tensorInfo.get(o),c=Vz(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(t,e,n,i){n=n||"float32";const r={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(r,i)}makeTensorFromTensorInfo(t,e){const{dataId:n,shape:i,dtype:r}=t,o=new Ye(i,r,n,this.nextTensorId());return this.trackTensor(o,e),o}makeVariable(t,e=!0,n,i){n=n||this.nextVariableId().toString(),i!=null&&i!==t.dtype&&(t=t.cast(i));const r=new cf(t,e,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*sx(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof cf||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const n=t.size*sx(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,i,r,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},l=S1(t);l!=null&&(i=l.gradFunc),i!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=n[h],f=Qn(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return u}),i(c.length>1?c:c[0],r,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=uo(t),n=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const o=this.state.activeScope.track[r];!o.kept&&!n.has(o.id)&&o.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===i.id&&this.track(r)})}gradients(t,e,n,i=!1){if(D(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));D(r instanceof Ye,()=>"The result y returned by f() must be a tensor.");const o=dB(this.state.activeTape,e,r);if(!i&&o.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=n==null?yB(r.shape):n,fB(a,o,c=>this.tidy(c),wB);const l=e.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(t){return D(rx(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{D(e.every(a=>a instanceof Ye),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n;const i={};e.forEach((a,l)=>{i[l]=a});const r=(a,l)=>(n=t(...e,l),D(n.value instanceof Ye,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(rx(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o=(a,l)=>{const c=n.gradFunc(a,l),u=Array.isArray(c)?c:[c];D(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(u.every(d=>d instanceof Ye),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:o,inputs:i})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Kn(),n=await this.backend.time(t);return n.wallMs=Kn()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new $1;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ql.nextTensorId=0;ql.nextVariableId=0;function yB(s){const t=u0(ht(s),"float32");return j.makeTensor(t,s,"float32")}function iI(){const s=$C();if(s._tfengine==null){const t=new Gz(s);s._tfengine=new ql(t)}return jz(s._tfengine.ENV),gB(()=>s._tfengine),s._tfengine}const j=iI();function wB(s,t){const e={a:s,b:t};return j.runKernel(hc,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(){return typeof navigator<"u"&&navigator!=null}function rI(s){if(s||_B()){if(s||(s=navigator),s.product==="ReactNative")return!0;const t=s.userAgent||s.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=s;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function oI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Es=at();Es.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Es.registerFlag("IS_BROWSER",()=>oI());Es.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Es.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Es.registerFlag("PROD",()=>!1);Es.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Es.getBool("DEBUG"));Es.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Es.registerFlag("IS_TEST",()=>!1);Es.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Es.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Es.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Es.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Es.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jp(s,t){let e=s;if(Vi(s))return t==="string"?[]:[s.length];if(typeof s=="object"&&"texture"in s){const i=s.channels||"RGBA";return[s.height,s.width*i.length]}if(!Array.isArray(s))return[];const n=[];for(;Array.isArray(e)||Vi(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(s)&&at().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&aI(s,n,[]),n}function aI(s,t,e){if(e=e||[],!Array.isArray(s)&&!Vi(s)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${s.length} elements`),D(s.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${s.length} elements`);const n=t.slice(1);for(let i=0;i<s.length;++i)aI(s[i],n,e.concat(i))}function D1(s,t,e,n){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==t||s==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${s} tensor, but got ${t} tensor`)}}function O(s,t,e,n="numeric"){if(s instanceof Ye)return D1(n,s.dtype,t,e),s;let i=Eu(s);if(i!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(i=n),D1(n,i,t,e),s==null||!Vi(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const l=s==null?"null":s.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const r=jp(s,i);!Vi(s)&&!Array.isArray(s)&&(s=[s]);const a=i!=="string"?La(s,i):Wl(s,[],!0);return j.makeTensor(a,r,i)}function lI(s,t,e,n="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((r,o)=>O(r,`${t}[${o}]`,e,n))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SB="__op";function Y(s){const t=Object.keys(s);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const n=s[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+SB;const i=(...r)=>{j.startScope(e);try{const o=n(...r);return h0(o)&&console.error("Cannot return a Promise inside of tidy."),j.endScope(o),o}catch(o){throw j.endScope(null),o}};return Object.defineProperty(i,"name",{value:e,configurable:!0}),i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(s,t){const e=O(s,"real","complex"),n=O(t,"imag","complex");vi(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);const i={real:e,imag:n};return j.runKernel(b0,i)}const Xl=Y({complex_:CB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kp(s,t,e,n){if(n==null&&(n=Eu(s)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof s=="object"&&"texture"in s){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return s.channels=s.channels||"RGBA",j.backend.createTensorFromTexture(s,t||e,n)}if(!Vi(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){NC(t);const i=ht(t),r=ht(e);D(i===r,()=>`Based on the provided shape, [${t}], the tensor should have ${i} values but has ${r}`);for(let o=0;o<e.length;++o){const a=e[o],l=o===e.length-1?a!==ht(t.slice(o)):!0;D(e[o]===t[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Vi(s)&&!Array.isArray(s)&&(s=[s]),t=t||e,s=n!=="string"?La(s,n):Wl(s,[],!0),j.makeTensor(s,t,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(s,t,e){const n=jp(s,e);return Kp(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F1=4;async function L1(s,t){const e=[],n=[],i=Array.isArray(s)?s.map(o=>o.name):Object.keys(s);for(let o=0;o<i.length;++o){const a=i[o],l=Array.isArray(s)?s[o].tensor:s[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((m,x)=>m+x.length,0)+F1*d.length,p=new Uint8Array(f);let g=0;for(let m=0;m<d.length;m++){const x=d[m],v=new Uint8Array(new Uint32Array([x.length]).buffer);p.set(v,g),g+=F1,p.set(x,g),g+=x.length}h(p)});n.push(u)}else n.push(l.data());t!=null&&(c.group=t),e.push(c)}const r=await Promise.all(n);return{data:IB(r),specs:e}}function IB(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let t=0;const e=[];s.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const n=new Uint8Array(t);let i=0;return e.forEach(r=>{n.set(new Uint8Array(r.buffer),i),i+=r.byteLength}),n.buffer}const lv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function P1(s){return lv?Buffer.byteLength(s):new Blob([s]).size}function TB(s){if(lv)return Buffer.from(s).toString("base64");const t=new Uint8Array(s);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function EB(s){if(lv){const n=Buffer.from(s,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const t=atob(s),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function cI(s){if(s.length===1)return s[0];let t=0;s.forEach(i=>{t+=i.byteLength});const e=new Uint8Array(t);let n=0;return s.forEach(i=>{e.set(new Uint8Array(i),n),n+=i.byteLength}),e.buffer}function uI(s,t){const e={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:t};return s.signature!=null&&(e.signature=s.signature),s.userDefinedMetadata!=null&&(e.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(e.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(e.initializerSignature=s.initializerSignature),s.trainingConfig!=null&&(e.trainingConfig=s.trainingConfig),e}function MB(s,t,e){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=e}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(n.initializerSignature=s.initializerSignature),n}async function kB(s,t){let e,n;return s.weightsManifest!=null&&([e,n]=await t(s.weightsManifest)),MB(s,e,n)}function Yp(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:P1(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:P1(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:s.weightData.byteLength}}function AB(s){const t=[];for(const e of s)t.push(...e.weights);return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class An{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return An.instance==null&&(An.instance=new An),An.instance}static registerSaveRouter(t){An.getInstance().saveRouters.push(t)}static registerLoadRouter(t){An.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return An.getHandlers(t,"save")}static getLoadHandlers(t,e){return An.getHandlers(t,"load",e)}static getHandlers(t,e,n){const i=[];return(e==="load"?An.getInstance().loadRouters:An.getInstance().saveRouters).forEach(o=>{const a=o(t,n);a!==null&&i.push(a)}),i}}const NB=s=>An.getSaveHandlers(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xx="tensorflowjs",vx=1,sa="models_store",eo="model_info_store";function hI(){if(!at().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window>"u"?self:window,t=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function bx(s){const t=s.result;t.createObjectStore(sa,{keyPath:"modelPath"}),t.createObjectStore(eo,{keyPath:"modelPath"})}class ya{constructor(t){if(this.indexedDB=hI(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,i)=>{const r=this.indexedDB.open(xx,vx);r.onupgradeneeded=()=>bx(r),r.onsuccess=()=>{const o=r.result;if(e==null){const a=o.transaction(sa,"readonly"),c=a.objectStore(sa).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=u=>(o.close(),i(c.error)),a.oncomplete=()=>o.close()}else{const a=Yp(e),l=o.transaction(eo,"readwrite");let c=l.objectStore(eo);const u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;u.onsuccess=()=>{h=o.transaction(sa,"readwrite");const f=h.objectStore(sa).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});f.onsuccess=()=>n({modelArtifactsInfo:a}),f.onerror=p=>{c=l.objectStore(eo);const g=c.delete(this.modelPath);g.onsuccess=()=>(o.close(),i(f.error)),g.onerror=m=>(o.close(),i(f.error))}},u.onerror=d=>(o.close(),i(u.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},r.onerror=o=>i(r.error)})}}ya.URL_SCHEME="indexeddb://";const dI=s=>at().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(ya.URL_SCHEME)?RB(s.slice(ya.URL_SCHEME.length)):null;An.registerSaveRouter(dI);An.registerLoadRouter(dI);function RB(s){return new ya(s)}function $B(s){return s.startsWith(ya.URL_SCHEME)?s.slice(ya.URL_SCHEME.length):s}class DB{constructor(){this.indexedDB=hI()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(xx,vx);n.onupgradeneeded=()=>bx(n),n.onsuccess=()=>{const i=n.result,r=i.transaction(eo,"readonly"),a=r.objectStore(eo).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},a.onerror=l=>(i.close(),e(a.error)),r.oncomplete=()=>i.close()},n.onerror=i=>e(n.error)})}async removeModel(t){return t=$B(t),new Promise((e,n)=>{const i=this.indexedDB.open(xx,vx);i.onupgradeneeded=()=>bx(i),i.onsuccess=()=>{const r=i.result,o=r.transaction(eo,"readwrite"),a=o.objectStore(eo),l=a.get(t);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=a.delete(t),h=()=>{c=r.transaction(sa,"readwrite");const f=c.objectStore(sa).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=p=>n(l.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),n(l.error))}},l.onerror=u=>(r.close(),n(l.error)),o.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},i.onerror=r=>n(i.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr="/",wl="tensorflowjs_models",fI="info",FB="model_topology",LB="weight_specs",PB="weight_data",OB="model_metadata";function pI(s){return{info:[wl,s,fI].join(Dr),topology:[wl,s,FB].join(Dr),weightSpecs:[wl,s,LB].join(Dr),weightData:[wl,s,PB].join(Dr),modelMetadata:[wl,s,OB].join(Dr)}}function mI(s){for(const t of Object.values(s))window.localStorage.removeItem(t)}function zB(s){const t=s.split(Dr);if(t.length<3)throw new Error(`Invalid key format: ${s}`);return t.slice(1,t.length-1).join(Dr)}function BB(s){return s.startsWith(wa.URL_SCHEME)?s.slice(wa.URL_SCHEME.length):s}class wa{constructor(t){if(!at().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=pI(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),i=Yp(t);try{this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,TB(t.weightData));const r={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:i}}catch{throw mI(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(i==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=i;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=EB(o),e}}wa.URL_SCHEME="localstorage://";const gI=s=>at().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(wa.URL_SCHEME)?UB(s.slice(wa.URL_SCHEME.length)):null;An.registerSaveRouter(gI);An.registerLoadRouter(gI);function UB(s){return new wa(s)}class VB{constructor(){D(at().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=wl+Dr,n=Dr+fI;for(let i=0;i<this.LS.length;++i){const r=this.LS.key(i);if(r.startsWith(e)&&r.endsWith(n)){const o=zB(r);t[o]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=BB(t);const e=pI(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const n=JSON.parse(this.LS.getItem(e.info));return mI(e),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O1="://";class nr{constructor(){this.managers={}}static getInstance(){return nr.instance==null&&(nr.instance=new nr),nr.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(O1)&&(t=t.slice(0,t.indexOf(O1))),D(t.length>0,()=>"scheme must not be an empty string.");const n=nr.getInstance();D(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=nr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(nr.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WB{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!at().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();const i=this.functionRefs[n.data.index];i(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(at().get("IS_BROWSER")){at().setPlatform("browser",new WB);try{nr.registerManager(wa.URL_SCHEME,new VB)}catch{}try{nr.registerManager(ya.URL_SCHEME,new DB)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB={importFetch:()=>require("node-fetch")};let Tg;class HB{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return at().global.fetch!=null?at().global.fetch(t,e):(Tg==null&&(Tg=GB.importFetch()),Tg(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}}at().get("IS_NODE")&&!at().get("IS_BROWSER")&&at().setPlatform("node",new HB);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(s,t="float32",e){return t=t||"float32",NC(s),new Zn(s,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(s,t){const e=O(s,"x","cast");if(!Uz(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const n={x:e},i={dtype:t};return j.runKernel(Fu,n,i)}const Nt=Y({cast_:qB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(s){const e={x:O(s,"x","clone","string_or_numeric")};return j.runKernel(ju,e)}const aa=Y({clone_:XB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(s,t=!1){console.log(s.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */iI();const KB={buffer:fe,cast:Nt,clone:aa,print:jB};xB(KB);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YB="model",ZB=".json",JB=".weights.bin";function z1(s){return new Promise(t=>setTimeout(t)).then(s)}class _a{constructor(t){if(!at().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(_a.URL_SCHEME)&&(t=t.slice(_a.URL_SCHEME.length)),(t==null||t.length===0)&&(t=YB),this.modelJsonFileName=t+ZB,this.weightDataFileName=t+JB}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],i=uI(t,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=r,await z1(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=e,await z1(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Yp(t)}}}}_a.URL_SCHEME="downloads://";const QB=s=>at().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(_a.URL_SCHEME)?t4(s.slice(_a.URL_SCHEME.length)):null;An.registerSaveRouter(QB);function t4(s="model"){return new _a(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(s,t,e,n){o(s),e=e==null?0:e,n=n==null?1:n,a(e,n);let i=0;const r=l=>(l.then(c=>{const u=e+ ++i/s.length*(n-e);return t(u),c}),l);function o(l){D(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),D(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),D(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(s.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function e4(s,t){t==null&&(t={});const e=t.fetchFunc==null?at().platform.fetch:t.fetchFunc,n=s.map(h=>e(h,t.requestInit,{isBinary:!0})),i=0,r=.5,a=(t.onProgress==null?await Promise.all(n):await B1(n,t.onProgress,i,r)).map(h=>h.arrayBuffer()),l=.5,c=1;return t.onProgress==null?await Promise.all(a):await B1(a,t.onProgress,l,c)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4="application/octet-stream",s4="application/json";class cv{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(D(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=at().platform.fetch,D(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&D(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],i=uI(t,n);e.body.append("model.json",new Blob([JSON.stringify(i)],{type:s4}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:n4}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Yp(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const n=e.modelTopology,i=e.weightsManifest;if(n==null&&i==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return kB(e,r=>this.loadWeights(r))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,i]=i4(e),r=this.weightPathPrefix||n,o=AB(t),a=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):a.push(r+h+i);this.weightUrlConverter&&a.push(...await Promise.all(l));const c=await e4(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,cI(c)]}}cv.URL_SCHEME_REGEX=/^https?:\/\//;function i4(s){const t=s.lastIndexOf("/"),e=s.lastIndexOf("?"),n=s.substring(0,t),i=e>t?s.substring(e):"";return[n+"/",i]}function U1(s){return s.match(cv.URL_SCHEME_REGEX)!=null}const xI=(s,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(s)?e=s.every(n=>U1(n)):e=U1(s),e)return r4(s,t)}return null};An.registerSaveRouter(xI);An.registerLoadRouter(xI);function r4(s,t){return new cv(s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(s,t,e=!1,n=!1){let i=O(s,"a","matMul"),r=O(t,"b","matMul");[i,r]=un(i,r);const o={a:i,b:r},a={transposeA:e,transposeB:n};return j.runKernel(Jf,o,a)}const Me=Y({matMul_:o4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(s,t,e=1,n=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:O(s,"indices","oneHot","int32")},a={dtype:i,depth:t,onValue:e,offValue:n};return j.runKernel(kp,o,a)}const vI=Y({oneHot_:a4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function er(){return j}function yx(){return j.memory()}function st(s,t){return j.tidy(s,t)}function de(s){uo(s).forEach(e=>e.dispose())}function fr(s){return j.keep(s)}function l4(s){return j.setBackend(s)}function bI(s,t,e=1){return j.registerBackend(s,t,e)}function c4(){return j.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(s){const e={input:O(s,"input","imag")};return j.runKernel(D0,e)}const uv=Y({imag_:u4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h4(s){const e={x:O(s,"x","neg")};return j.runKernel(Tp,e)}const nn=Y({neg_:h4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(s){const e={input:O(s,"input","real")};return j.runKernel(V0,e)}const uf=Y({real_:d4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(s,t,e){const n=O(s,"x","transpose");if(t==null&&(t=n.shape.map((o,a)=>a).reverse()),D(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(o=>{D(o>=0&&o<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();const i={x:n},r={perm:t};return n.dtype==="complex64"?st(()=>{let o=uf(n),a=uv(n);return o=j.runKernel(Nl,{x:o},r),a=j.runKernel(Nl,{x:a},r),e&&(a=nn(a)),Xl(o,a)}):j.runKernel(Nl,i,r)}const _e=Y({transpose_:f4});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jl(s,t){const e=s.length,n=[];for(let i=0;i<e;i++){const r=e-1-i,o=s[r]||1;(t[t.length-1-i]||1)>1&&o===1&&n.unshift(r)}return n}function En(s,t){const e=[];for(let n=0;n<t.length;n++){const i=s[s.length-n-1],r=t.length-n-1,o=t[r];(i==null||i===1&&o>1)&&e.unshift(r)}return e}function ae(s,t){const e=[],n=Math.max(s.length,t.length);for(let i=0;i<n;i++){let r=s[s.length-i-1];r==null&&(r=1);let o=t[t.length-i-1];if(o==null&&(o=1),r===1)e.unshift(o);else if(o===1)e.unshift(r);else if(r!==o){const a=`Operands could not be broadcast together with shapes ${s} and ${t}.`;throw Error(a)}else e.unshift(r)}return e}function hv(s,t){const e=s.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(ht(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const i=t.shape,r=i[i.length-1];let o=1;for(let h=0;h<i.length-1;++h)o*=i[h];const a=s.shape,l=i.slice();l.pop();let c=1;for(let h=r;h<e;++h)c*=a[h],l.push(a[h]);const u=[...Zt(s.shape).map(h=>h/c),1].slice(0,r);return[l,o,c,u]}function yI(s,t,e){const n=t.rank>1?t.shape[t.rank-1]:1,i=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${s}, sliceDim: ${n}, and batchDim: ${i}.`;if(e.rank<i)throw new Error(r+` update.rank < ${i}. `);if(s.length<n+(e.rank-i))throw new Error(r+` Output shape length < ${n+(e.rank-i)}`);if(e.rank!==i+s.length-n)throw new Error(r+` update.rank != ${i+s.length-n}`);for(let o=0;o<i;++o)if(e.shape[o]!==t.shape[o])throw new Error(r+` updates.shape[${o}] (${e.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<e.rank-i;++o)if(e.shape[o+i]!==s[o+n])throw new Error(r+` updates.shape[${o+i}] (${e.shape[o+i]}) != shape[${o+i}] (${s[o+i]})`)}function p4(s,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}yI(e,t,s)}function Sh(s,t,e){const n=t.shape.length,i=n>1?t.shape[n-1]:1,r=e.length;let o=1;for(let h=i;h<r;++h)o*=e[h];const a=i<1?1:i,l=ht(t.shape)/a,c=[...Zt(e.slice(0,i)),1],u=ht(e);return{sliceRank:i,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wx=-2,m4=-1;function dv(s,t,e){const n=s.shape.length;D(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),D(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let i=0;i<n;++i)D(t[i]+e[i]<=s.shape[i],()=>`Error in slice${n}D: begin[${i}] + size[${i}] (${t[i]+e[i]}) would overflow input.shape[${i}] (${s.shape[i]})`)}function g4(s){const t=[];let e=0;for(;s>0;)s&1&&t.push(e),s/=2,e++;return t}function fv(s,t,e){const n=[];for(let i=0;i<s.length;i++)n[i]=Math.ceil((t[i]-s[i])/e[i]);return n}function wI(s,t,e,n){const i=[...s];for(let r=i.length;r<n.length;r++)i.push(1);for(let r=0;r<e;r++)r===0?i[t]=1:(i.splice(t,0,1),i.pop());return i}function _I(s,t,e){return e<=s?e:e-(t-1)}function SI(s,t){const e=[];for(let n=0;n<s;n++)e.push(t+n);return e}function x4(s,t,e,n,i,r,o,a,l){const c=s.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(t.length&&e>0){const f=t[0],p=e+1;u=CI(o,f,p,n,s),h=II(a,f,p,i,s),d=wI(r,f,p,s)}else for(let f=0;f<c;f++)u[f]=EI(o,n,r,s,f,l),h[f]=MI(a,i,r,s,f,l),d[f]=TI(r,f,l);return{begin:u,end:h,strides:d}}function CI(s,t,e,n,i){const r=[...i],o=SI(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=0;else{const l=_I(t,e,a);let c=n[l];s&1<<l&&(c=0),r[a]=c}return r}function II(s,t,e,n,i){const r=[...i],o=SI(e,t);for(let a=0;a<r.length;a++)if(o.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const l=_I(t,e,a);let c=n[l];s&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[a]=c}for(let a=0;a<r.length;a++){const l=i[a];r[a]<0&&(r[a]+=l),r[a]=ba(0,r[a],i[a])}return r}function TI(s,t,e){let n=s[t];return(e&1<<t||n==null)&&(n=1),n}function EI(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),o=ba(0,o,l-1),o}function MI(s,t,e,n,i,r){let o=t[i];const a=e[i]||1;(s&1<<i||r&1<<i||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=n[i];return o<0&&(o+=l),a>0?o=ba(0,o,l):o=ba(-1,o,l-1),o}function pv(s,t,e){let n=e.length;for(let i=0;i<e.length;i++)if(e[i]>1){n=i;break}for(let i=n+1;i<e.length;i++)if(t[i]>0||e[i]!==s[i])return!1;return!0}function mv(s,t){let e=s.length>0?s[s.length-1]:1;for(let n=0;n<s.length-1;n++)e+=s[n]*t[n];return e}function Zp(s,t,e){let n;const i=s.shape.length;typeof t=="number"?n=[t,...new Array(i-1).fill(0)]:t.length<i?n=t.concat(new Array(i-t.length).fill(0)):n=t.slice(),n.forEach(o=>{D(o!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(i).fill(-1):typeof e=="number"?r=[e,...new Array(i-1).fill(-1)]:e.length<i?r=e.concat(new Array(i-e.length).fill(-1)):r=e,r=r.map((o,a)=>o>=0?o:(D(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),s.shape[a]-n[a])),[n,r]}function gv(s,t,e,n,i,r,o,a,l){let c;if(n==null?(c=new Array(t.length),c.fill(1)):c=n,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let y=0;y<h.dims;y++)u&&(1<<y&a)!==0&&h.numAddAxisAfterEllipsis++,1<<y&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:s.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};v4(h,d);let f=!0,p=!0,g=!0;const m=[],x=[];for(let y=0;y<s.length;++y){if(d.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<y),w=s[y];if(w===-1){m.push(b?1:-1);continue}const S=[d.beginMask&1<<y,d.endMask&1<<y],C=[d.strides[y]>0?0:-1,d.strides[y]>0?w:w-1];if(b&&d.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&d.strides[y]===1;const _=!!(d.beginMask&1<<y&&d.endMask&1<<y);if(d.beginValid&&d.endValid){if(b){const P=d.begin[y]<0?w+d.begin[y]:d.begin[y];if(d.begin[y]=P,d.end[y]=d.begin[y]+1,P<0||P>=w)throw Error(`slice index ${d.begin[y]} of dimension ${y} out of bounds.`)}else d.begin[y]=V1(d.begin[y],0,d.strides[y],w,S,C),d.end[y]=V1(d.end[y],1,d.strides[y],w,S,C);const N=d.strides[y]===1&&d.begin[y]===0&&d.end[y]===w;f=f&&N,p=p&&(y===0&&d.strides[y]===1||N)}else f=f&&d.strides[y]===1&&_,p=p&&(y===0&&d.strides[y]===1||_);let I,T=!1;if(d.beginValid&&d.endValid?(I=d.end[y]-d.begin[y],T=!0):b?(I=1,T=!0):_&&w>=0&&(d.strides[y]<0?I=-w:I=w,T=!0),T){let N;I===0||I<0!=d.strides[y]<0?N=0:N=Math.trunc(I/d.strides[y])+(I%d.strides[y]!==0?1:0),m.push(N)}else m.push(-1)}for(let y=0;y<d.finalShapeGatherIndices.length;++y){const b=d.finalShapeGatherIndices[y];b>=0?x.push(m[b]):b===wx&&x.push(1)}return{finalShapeSparse:x.filter((y,b)=>d.finalShapeGatherIndices[b]!==wx),finalShape:x,isIdentity:f,sliceDim0:p,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function v4(s,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=s.begin!=null,t.endValid=s.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<s.dims;n++)if(1<<n&s.ellipsisMask){const i=Math.min(t.dims-(s.dims-n)+1+s.numAddAxisAfterEllipsis,t.dims);for(;e<i;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&s.newAxisMask)t.finalShapeGatherIndices.push(wx),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);s.begin!=null&&(t.begin[e]=s.begin[n]),s.end!=null&&(t.end[e]=s.end[n]),t.strides[e]=s.strides[n],s.beginMask&1<<n&&(t.beginMask|=1<<e),s.endMask&1<<n&&(t.endMask|=1<<e),s.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(m4),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function V1(s,t,e,n,i,r){if(i[t])return e>0?r[t]:r[t+1&1];{const o=s<0?n+s:s;return o<r[0]?r[0]:o>r[1]?r[1]:o}}const b4=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:dv,maskToAxes:g4,computeOutShape:fv,stridesWithElidedDims:wI,getNormalizedAxes:x4,startIndicesWithElidedDims:CI,stopIndicesWithElidedDims:II,stridesForAxis:TI,startForAxis:EI,stopForAxis:MI,isSliceContinous:pv,computeFlatOffset:mv,parseSliceParams:Zp,sliceInfo:gv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dc{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class ni{constructor(){this.classNameMap={}}static getMap(){return ni.instance==null&&(ni.instance=new ni),ni.instance}static register(t){ni.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function bt(s){D(s.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),D(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ni.register(s)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(s,t){let e=O(s,"a","add"),n=O(t,"b","add");[e,n]=un(e,n);const i={a:e,b:n};return j.runKernel(hc,i)}const _t=Y({add_:y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(s,t){let e=O(s,"a","floorDiv"),n=O(t,"b","floorDiv");[e,n]=un(e,n);const i={a:e,b:n};return j.runKernel(qu,i)}const kI=Y({floorDiv_:w4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _4(s,t){let e=O(s,"a","div"),n=O(t,"b","div");if([e,n]=un(e,n),e.dtype==="int32"&&n.dtype==="int32")return kI(e,n);const i={a:e,b:n},r={};return j.runKernel(Bu,i,r)}const Yt=Y({div_:_4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(s,t){let e=O(s,"a","mul"),n=O(t,"b","mul");[e,n]=un(e,n);const i={a:e,b:n};return j.runKernel(sh,i)}const q=Y({mul_:S4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(s){const t=O(s,"x","abs");if(t.dtype==="complex64"){const e={x:t};return j.runKernel(tp,e)}else{const e={x:t};return j.runKernel(Xf,e)}}const Nn=Y({abs_:C4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(s){const e={x:O(s,"x","acos")};return j.runKernel(Mu,e)}const T4=Y({acos_:I4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(s){const e={x:O(s,"x","acosh")};return j.runKernel(ku,e)}const M4=Y({acosh_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(s,t=null,e=!1){const i={x:O(s,"x","all","bool")},r={axis:t,keepDims:e};return j.runKernel(p0,i,r)}const AI=Y({all_:k4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(s,t=null,e=!1){const i={x:O(s,"x","any","bool")},r={axis:t,keepDims:e};return j.runKernel(m0,i,r)}const _x=Y({any_:A4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(s,t=0){const n={x:O(s,"x","argMax")},i={axis:t};return j.runKernel(jf,n,i)}const uu=Y({argMax_:N4});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(s,t=0){const n={x:O(s,"x","argMin")},i={axis:t};return j.runKernel(Kf,n,i)}const $4=Y({argMin_:R4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(s){const e={x:O(s,"x","asin")};return j.runKernel(Au,e)}const F4=Y({asin_:D4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(s){const e={x:O(s,"x","asinh")};return j.runKernel(Nu,e)}const P4=Y({asinh_:L4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(s){const e={x:O(s,"x","atan")};return j.runKernel(Ru,e)}const z4=Y({atan_:O4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(s,t){let e=O(s,"a","atan2"),n=O(t,"b","atan2");[e,n]=un(e,n);const i={a:e,b:n};return j.runKernel(Du,i)}const U4=Y({atan2_:B4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(s){const e={x:O(s,"x","atanh")};return j.runKernel($u,e)}const W4=Y({atanh_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ch(s,t,e,n,i="NHWC",r){const o=s[3],a=[...t,o],l=Wr(i);return qn(s,a,e,r,n,null,null,l)}function bi(s,t,e,n,i,r,o="channelsLast"){const[a,l]=hf(t);let c;if(o==="channelsLast")c=[a,l,s[3],s[3]];else if(o==="channelsFirst")c=[a,l,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return qn(s,c,e,n,i,r,!1,o)}function Vr(s,t,e,n,i,r,o="NDHWC"){const[a,l,c]=Sx(t);let u,h;if(o==="NDHWC")h="channelsLast",u=[a,l,c,s[4],s[4]];else if(o==="NCDHW")h="channelsFirst",u=[a,l,c,s[1],s[1]];else throw new Error(`Unknown dataFormat ${o}`);return So(s,u,e,n,i,!1,h,r)}function qn(s,t,e,n,i,r,o=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=s;else if(a==="channelsFirst")[l,h,c,u]=s;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,p]=t,[g,m]=hf(e),[x,v]=hf(n),y=Rl(d,x),b=Rl(f,v),{padInfo:w,outHeight:S,outWidth:C}=q4(i,c,u,g,m,y,b,r,a),_=o?p*h:p;let I;return a==="channelsFirst"?I=[l,_,S,C]:a==="channelsLast"&&(I=[l,S,C,_]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:S,outWidth:C,outChannels:_,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:f,effectiveFilterHeight:y,effectiveFilterWidth:b,dilationHeight:x,dilationWidth:v,inShape:s,outShape:I,filterShape:t}}function So(s,t,e,n,i,r=!1,o="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h,d]=s;else if(o==="channelsFirst")[l,d,c,u,h]=s;else throw new Error(`Unknown dataFormat ${o}`);const[f,p,g,,m]=t,[x,v,y]=Sx(e),[b,w,S]=Sx(n),C=Rl(f,b),_=Rl(p,w),I=Rl(g,S),{padInfo:T,outDepth:N,outHeight:P,outWidth:E}=X4(i,c,u,h,x,v,y,C,_,I,a),M=r?m*d:m;let A;return o==="channelsFirst"?A=[l,M,N,P,E]:o==="channelsLast"&&(A=[l,N,P,E,M]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:N,outHeight:P,outWidth:E,outChannels:M,padInfo:T,strideDepth:x,strideHeight:v,strideWidth:y,filterDepth:f,filterHeight:p,filterWidth:g,effectiveFilterDepth:C,effectiveFilterHeight:_,effectiveFilterWidth:I,dilationDepth:b,dilationHeight:w,dilationWidth:S,inShape:s,outShape:A,filterShape:t}}function G4(s,t,e,n,i){n==null&&(n=xv(s,t,e));const r=s[0],o=s[1],a=la((r-t+2*n)/e+1,i),l=la((o-t+2*n)/e+1,i);return[a,l]}function H4(s,t,e,n,i,r){i==null&&(i=xv(s,t,n));const o=s[0],a=s[1],l=s[2],c=la((o-t+2*i)/n+1,r),u=la((a-t+2*i)/n+1,r),h=la((l-t+2*i)/n+1,r);return[c,u,h,e]}function xv(s,t,e,n=1){const i=Rl(t,n);return Math.floor((s[0]*(e-1)-e+i)/2)}function hf(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function Sx(s){return typeof s=="number"?[s,s,s]:s}function Rl(s,t){return t<=1?s:s+(s-1)*(t-1)}function q4(s,t,e,n,i,r,o,a,l){let c,u,h;if(typeof s=="number"){c={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const f=G4([t,e],r,n,s,a);u=f[0],h=f[1]}else if(s==="same"){u=Math.ceil(t/n),h=Math.ceil(e/i);const d=Math.max(0,(u-1)*n+r-t),f=Math.max(0,(h-1)*i+o-e),p=Math.floor(d/2),g=d-p,m=Math.floor(f/2),x=f-m;c={top:p,bottom:g,left:m,right:x,type:"SAME"}}else if(s==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-r+1)/n),h=Math.ceil((e-o+1)/i);else if(typeof s=="object"){const d=l==="channelsLast"?s[1][0]:s[2][0],f=l==="channelsLast"?s[1][1]:s[2][1],p=l==="channelsLast"?s[2][0]:s[3][0],g=l==="channelsLast"?s[2][1]:s[3][1];c={top:d,bottom:f,left:p,right:g,type:d===0&&f===0&&p===0&&g===0?"VALID":"EXPLICIT"},u=la((t-r+d+f)/n+1,a),h=la((e-o+p+g)/i+1,a)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:c,outHeight:u,outWidth:h}}function X4(s,t,e,n,i,r,o,a,l,c,u){let h,d,f,p;if(typeof s=="number"){h={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const m=H4([t,e,n,1],a,1,i,s,u);d=m[0],f=m[1],p=m[2]}else if(s==="same"){d=Math.ceil(t/i),f=Math.ceil(e/r),p=Math.ceil(n/o);const g=(d-1)*i+a-t,m=(f-1)*r+l-e,x=(p-1)*o+c-n,v=Math.floor(g/2),y=g-v,b=Math.floor(m/2),w=m-b,S=Math.floor(x/2),C=x-S;h={top:b,bottom:w,left:S,right:C,front:v,back:y,type:"SAME"}}else if(s==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-a+1)/i),f=Math.ceil((e-l+1)/r),p=Math.ceil((n-c+1)/o);else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function la(s,t){if(!t)return Math.trunc(s);switch(t){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${t}`)}}function Sa(s){const[t,e,n]=hf(s);return t===1&&e===1&&n===1}function ts(s,t){return Sa(s)||Sa(t)}function Wr(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}function xs(s,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(Gl(t),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(i=>{D(Gl(i),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${e} but got pad ${i}.`)})});else throw Error(`Error in ${s}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(s,t){const n={x:O(s,"x","reshape","string_or_numeric")},i={shape:t};return j.runKernel(Dp,n,i)}const Q=Y({reshape_:j4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(s,t,e,n,i){const r=O(s,"x","avgPool","float32"),o=1;D(ts(e,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);let a=r,l=!1;r.rank===3&&(l=!0,a=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),xs("avgPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i};let h=j.runKernel(Yf,c,u);return h=Nt(h,r.dtype),l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const vv=Y({avgPool_:K4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(s,t,e,n,i,r="NDHWC"){const o=O(s,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),D(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),xs("avgPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r};let h=j.runKernel(Zf,c,u);return h=Nt(h,a.dtype),l?Q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Z4=Y({avgPool3d_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(s,t=0){D(s.length>=1,()=>"Pass at least one tensor to concat");const e=lI(s,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return aa(e[0]);const n=e,i={axis:t};return j.runKernel(ep,n,i)}const Jn=Y({concat_:J4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(s){const e={x:O(s,"x","sigmoid","float32")};return j.runKernel(ph,e)}const fc=Y({sigmoid_:Q4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(s,t,e){const n=O(s,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");const i={x:n},r={begin:t,size:e};return j.runKernel(zp,i,r)}const Oe=Y({slice_:tU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(s){const e={x:O(s,"x","tanh","float32")};return j.runKernel(yh,e)}const bv=Y({tanh_:eU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(s,t,e){const n=O(s,"x","batchToSpaceND"),i=t.reduce((a,l)=>a*l);D(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(n.shape[0]%i===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`);const r={x:n},o={blockShape:t,crops:e};return j.runKernel(Qf,r,o)}const yv=Y({batchToSpaceND_:nU});function sU(s){let t;return s.rank===0||s.rank===1?t=Q(s,[1,1,1,s.size]):s.rank===2?t=Q(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?t=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]):t=s,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iU(s,t,e,n,i,r){r==null&&(r=.001);const o=O(s,"x","batchNorm"),a=O(t,"mean","batchNorm"),l=O(e,"variance","batchNorm");let c;i!=null&&(c=O(i,"scale","batchNorm"));let u;n!=null&&(u=O(n,"offset","batchNorm")),D(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:sU(o),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:r},p=j.runKernel(up,d,f);return Q(p,o.shape)}const Jp=Y({batchNorm_:iU});function rU(s,t,e,n,i,r){const o=O(s,"x","batchNorm"),a=O(t,"mean","batchNorm"),l=O(e,"variance","batchNorm");let c;i!=null&&(c=O(i,"scale","batchNorm"));let u;return n!=null&&(u=O(n,"offset","batchNorm")),D(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),D(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&D(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Jp(o,a,l,u,c,r)}const oU=Y({batchNorm2d_:rU});function aU(s,t,e,n,i,r){const o=O(s,"x","batchNorm"),a=O(t,"mean","batchNorm"),l=O(e,"variance","batchNorm");let c;i!=null&&(c=O(i,"scale","batchNorm"));let u;return n!=null&&(u=O(n,"offset","batchNorm")),D(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),D(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&D(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Jp(o,a,l,u,c,r)}const lU=Y({batchNorm3d_:aU});function cU(s,t,e,n,i,r){const o=O(s,"x","batchNorm"),a=O(t,"mean","batchNorm"),l=O(e,"variance","batchNorm");let c;i!=null&&(c=O(i,"scale","batchNorm"));let u;return n!=null&&(u=O(n,"offset","batchNorm")),D(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),D(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&D(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Jp(o,a,l,u,c,r)}const uU=Y({batchNorm4d_:cU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(s,t,e){const n=O(s,"x","bincount"),i=O(t,"weights","bincount");D(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(i.size===n.size||i.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${i.shape}.`);const r={x:n,weights:i},o={size:e};return j.runKernel(v0,r,o)}const dU=Y({bincount_:hU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(s,t){let e=O(s,"broadcastTo","x");const n=e.shape;if(t.some(c=>!(c>0)||c%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=Q(e,c)}const i=e.shape,r=Array.from(t);for(let c=t.length-1;c>=0;c--)if(i[c]===t[c])r[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(r.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return aa(e);const a={x:e},l={reps:r};return j.runKernel(wh,a,l)}const Jc=Y({broadcastTo_:fU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pU(s){const e={x:O(s,"x","ceil","float32")};return j.runKernel(Lu,e)}const mU=Y({ceil_:pU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ih(s,t,e){const n={shape:s,value:t,dtype:e};return j.runKernel(N0,{},n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gU(s,t,e){const n=O(s,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Ih(n.shape,t,n.dtype);const i={x:n},r={clipValueMin:t,clipValueMax:e};return j.runKernel(Pu,i,r)}const Bs=Y({clipByValue_:gU});function xU(s){return Jn(s,0)}const vU=Y({concat1d_:xU});function bU(s,t){return Jn(s,t)}const yU=Y({concat2d_:bU});function wU(s,t){return Jn(s,t)}const _U=Y({concat3d_:wU});function SU(s,t){return Jn(s,t)}const CU=Y({concat4d_:SU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(s,t,e,n,i="NHWC",r=[1,1],o){const a=O(s,"x","conv2d","float32"),l=O(t,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),D(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),xs("conv2d",n,o);const h=i==="NHWC"?c.shape[3]:c.shape[1];D(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),D(ts(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=j.runKernel(np,d,f);return u?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Ca=Y({conv2d_:IU});function TU(s,t,e,n,i="NWC",r=1,o){const a=O(s,"x","conv1d"),l=O(t,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1]])),D(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),D(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),xs("conv1d",n,o),D(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),D(ts(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),D(i==="NWC",()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const h=Q(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Q(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=Ca(d,h,[1,e],n,"NHWC",[1,r],o);return u?Q(m,[m.shape[2],m.shape[3]]):Q(m,[m.shape[0],m.shape[2],m.shape[3]])}const NI=Y({conv1d_:TU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(s,t,e,n,i,r="NHWC",o){D(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let a=s,l=t,c=!1;t.rank===3&&(c=!0,l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,s[0],s[1],s[2]]),D(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),D(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?l.shape[3]:l.shape[1];D(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),D(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),xs("conv2dDerInput",i,o);const d={dy:l,filter:e},f={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,inputShape:a},p=j.runKernel(sp,d,f);return c?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const wv=Y({conv2DBackpropInput_:EU});function MU(s,t,e,n,i,r){const o=O(s,"x","conv2dTranspose"),a=O(t,"filter","conv2dTranspose");return wv(e,o,a,n,i,"NHWC",r)}const RI=Y({conv2dTranspose_:MU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(s,t,e,n,i="NDHWC",r=[1,1,1]){const o=O(s,"x","conv3d"),a=O(t,"filter","conv3d");let l=o,c=!1;o.rank===4&&(c=!0,l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),D(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),D(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),D(ts(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),D(i==="NDHWC",()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`);const u={x:l,filter:a},h={strides:e,pad:n,dataFormat:i,dilations:r},d=j.runKernel(ip,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const AU=Y({conv3d_:kU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(s,t,e,n,i){D(s.length===t.rank,()=>`Length of inShape (${s.length}) and rank of dy (${t.rank}) must match`);let r=s,o=t,a=!1;t.rank===4&&(a=!0,o=Q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,s[0],s[1],s[2],s[3]]);const l=r[4],c=o.shape[4];D(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),D(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),D(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:o,filter:e},h={pad:i,strides:n,inputShape:r},d=j.runKernel(_0,u,h);return a?Q(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const $I=Y({conv3DBackpropInput_:NU});function RU(s,t,e,n,i){const r=O(s,"x","conv3dTranspose"),o=O(t,"filter","conv3dTranspose");return $I(e,r,o,n,i)}const $U=Y({conv3dTranspose_:RU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(s){const e={x:O(s,"x","cos","float32")};return j.runKernel(Ou,e)}const _v=Y({cos_:DU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(s){const e={x:O(s,"x","cosh","float32")};return j.runKernel(zu,e)}const DI=Y({cosh_:FU});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(s,t=0,e=!1,n=!1){const r={x:O(s,"x","cumprod")},o={axis:t,exclusive:e,reverse:n};return j.runKernel(S0,r,o)}const Cx=Y({cumprod_:LU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(s,t=0,e=!1,n=!1){const r={x:O(s,"x","cumsum")},o={axis:t,exclusive:e,reverse:n};return j.runKernel(rp,r,o)}const FI=Y({cumsum_:PU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(s,t,e,n=!1){const i=O(s,"x","denseBincount"),r=O(t,"weights","denseBincount");D(i.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),D(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(r.size===i.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${r.shape}.`);const o={x:i,weights:r},a={size:e,binaryOutput:n};return j.runKernel(I0,o,a)}const W1=Y({denseBincount_:OU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(s,t,e="NHWC"){const n=O(s,"x","depthToSpace","float32"),i=e==="NHWC"?n.shape[1]:n.shape[2],r=e==="NHWC"?n.shape[2]:n.shape[3],o=e==="NHWC"?n.shape[3]:n.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t}  for depthToSpace with input shape
    ${n.shape}`),D(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${n.shape}`),D(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${n.shape}`);const a={x:n},l={blockSize:t,dataFormat:e};return j.runKernel(T0,a,l)}const BU=Y({depthToSpace_:zU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(s,t,e,n,i="NHWC",r=[1,1],o){const a=O(s,"x","depthwiseConv2d","float32"),l=O(t,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),D(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=i==="NHWC"?c.shape[3]:c.shape[1];D(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),xs("depthwiseConv2d",n,o);const d={x:c,filter:l},f={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o},p=j.runKernel(op,d,f);return u?Q(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Sv=Y({depthwiseConv2d_:UU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(s,t,e,n,i=[1,1],r="NHWC"){const o=O(s,"x","dilation2d"),a=O(t,"filter","dilation2d");D(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),D(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),D(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=o,c=!1;o.rank===3&&(l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0);const u={x:l,filter:a},h={strides:e,pad:n,dilations:i},d=j.runKernel(ap,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const WU=Y({dilation2d_:VU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(s,t){let e=O(s,"a","equal","string_or_numeric"),n=O(t,"b","equal","string_or_numeric");[e,n]=un(e,n),ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(lp,i)}const pr=Y({equal_:GU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HU(s,t,e){const n=O(t,"a","where"),i=O(e,"b","where"),r=O(s,"condition","where","bool"),o=ae(ae(r.shape,n.shape),i.shape),a=Jc(r,o),l=Jc(n,o),c=Jc(i,o),u={condition:a,t:l,e:c};return j.runKernel(Op,u)}const Ms=Y({where_:HU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(s){const e={x:O(s,"x","zerosLike")};return j.runKernel(qp,e)}const Ce=Y({zerosLike_:qU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(s,t){let e=O(s,"a","div"),n=O(t,"b","div");[e,n]=un(e,n);const i=Yt(e,n),r=Ce(i),o=pr(n,r);return Ms(o,r,i)}const jU=Y({divNoNan_:XU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(s,t){const e=O(s,"t1","dot"),n=O(t,"t2","dot");D((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);const i=e.rank===1?e.size:e.shape[1],r=n.rank===1?n.size:n.shape[0];if(D(i===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${r}.`),e.rank===1&&n.rank===1){const o=Q(e,[1,-1]),a=Q(n,[-1,1]),l=Me(o,a);return Q(l,[])}else if(e.rank===1&&n.rank===2){const o=Q(e,[1,-1]),a=Q(n,[n.shape[0],n.shape[1]]),l=Me(o,a);return Q(l,[l.size])}else if(e.rank===2&&n.rank===1){const o=Q(n,[-1,1]),a=Me(e,o);return Q(a,[a.size])}else{const o=Q(n,[n.shape[0],n.shape[1]]);return Me(e,o)}}const YU=Y({dot_:KU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZU(s){const e={x:O(s,"x","elu","float32")};return j.runKernel(Uu,e)}const Qp=Y({elu_:ZU});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(s){let t=O(s,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Nt(t,"float32"));const e={x:t};return j.runKernel(Vu,e)}const QU=Y({erf_:JU});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cv(s,t){for(let e=0;e<s.length;++e)if(s[s.length-e-1]!==t-1-e)return!1;return!0}function LI(s,t,e){const n=s.length+t.length,i=[];let r=0,o=0;for(let a=0;a<n;a++)e.indexOf(a)===-1?i.push(s[r++]):i.push(t[o++]);return i}function Pn(s,t){const e=[],n=s.length;for(let r=0;r<n;r++)t.indexOf(r)===-1&&e.push(s[r]);const i=t.map(r=>s[r]);return[e,i]}function hn(s,t){const e=t.map(n=>1);return LI(s,e,t)}function Xn(s,t,e){D(Cv(t,e),()=>`${s} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function sn(s,t){if(Cv(s,t))return null;const e=[];for(let n=0;n<t;++n)s.indexOf(n)===-1&&e.push(n);return s.forEach(n=>e.push(n)),e}function Co(s){return s.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function dn(s,t){const e=[];for(let n=t-s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(s,t=null,e=!1){const i={x:O(s,"x","max")},r={reductionIndices:t,keepDims:e};return j.runKernel(yp,i,r)}const Oi=Y({max_:tV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(s,t=null,e=!1){const i={x:O(s,"x","min")},r={axis:t,keepDims:e};return j.runKernel(Cp,i,r)}const df=Y({min_:eV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(s,t){let e=O(s,"base","pow"),n=O(t,"exp","pow");[e,n]=un(e,n);const i={a:e,b:n};return j.runKernel(ih,i)}const Kl=Y({pow_:nV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(s,t){if((Vi(s)&&t!=="string"||Array.isArray(s))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Vi(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Kp(s,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(s){const e={x:O(s,"x","sqrt","float32")};return j.runKernel(gh,e)}const os=Y({sqrt_:sV});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(s){const t=O(s,"x","square"),e={};return j.runKernel("Square",{x:t},e)}const Ve=Y({square_:iV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(s,t=null,e=!1){let n=O(s,"x","sum");n.dtype==="bool"&&(n=Nt(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return j.runKernel(Bp,i,r)}const Vt=Y({sum_:rV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(s,t="euclidean",e=null,n=!1){s=O(s,"x","norm");const i=PI(s,t,e);let r=i.shape;if(n){const o=pe(e,s.shape);r=hn(i.shape,o)}return Q(i,r)}function PI(s,t,e=null){if(s.rank===0)return Nn(s);if(s.rank!==1&&e===null)return PI(Q(s,[-1]),t,e);if(s.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return Vt(Nn(s),e);if(t===1/0)return Oi(Nn(s),e);if(t===-1/0)return df(Nn(s),e);if(t==="euclidean"||t===2)return os(Vt(Kl(Nn(s),ie(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Oi(Vt(Nn(s),e[0]),e[1]-1);if(t===1/0)return Oi(Vt(Nn(s),e[1]),e[0]);if(t===-1/0)return df(Vt(Nn(s),e[1]),e[0]);if(t==="fro"||t==="euclidean")return os(Vt(Ve(s),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const tm=Y({norm_:oV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(s,t=null,e=!1){return tm(s,"euclidean",t,e)}const lV=Y({euclideanNorm_:aV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(s){const e={x:O(s,"x","exp")};return j.runKernel(Wu,e)}const fi=Y({exp_:cV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(s,t=0){const e=O(s,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");const n={input:e},i={dim:t};return j.runKernel(cp,n,i)}const _s=Y({expandDims_:uV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(s){const e={x:O(s,"x","expm1")};return j.runKernel(Gu,e)}const dV=Y({expm1_:hV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(s,t){const e=O(s,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const n={x:e},i={reps:t};return j.runKernel(wh,n,i)}const Di=Y({tile_:fV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(s,t,e,n="float32"){t==null&&(t=s);const i=fe([s,t],n),r=s<=t?s:t;for(let a=0;a<r;++a)i.set(1,a,a);const o=Q(i.toTensor(),[s,t]);if(e==null)return o;if(e.length===1)return Di(_s(o,0),[e[0],1,1]);if(e.length===2)return Di(_s(_s(o,0),0),[e[0],e[1],1,1]);if(e.length===3)return Di(_s(_s(_s(o,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const OI=Y({eye_:pV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(s){const e={x:O(s,"x","floor","float32")};return j.runKernel(Hu,e)}const em=Y({floor_:mV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(s,t,e=0,n=0){const i=O(s,"x","gather"),r=O(t,"indices","gather","int32"),o={x:i,indices:r},a={axis:e,batchDims:n};return j.runKernel(hp,o,a)}const Iv=Y({gather_:gV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(s,t){let e=O(s,"a","greater","string_or_numeric"),n=O(t,"b","greater","string_or_numeric");[e,n]=un(e,n),ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(dp,i)}const Ws=Y({greater_:xV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(s,t){let e=O(s,"a","greaterEqual","string_or_numeric"),n=O(t,"b","greaterEqual","string_or_numeric");[e,n]=un(e,n),ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(Xu,i)}const Pa=Y({greaterEqual_:vV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(s){const e={x:O(s,"x","isFinite")};return j.runKernel(Ku,e)}const yV=Y({isFinite_:bV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(s){const e={x:O(s,"x","isInf")};return j.runKernel(Yu,e)}const _V=Y({isInf_:wV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(s){const e={x:O(s,"x","isNaN")};return j.runKernel(Zu,e)}const CV=Y({isNaN_:SV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(s,t=.2){const n={x:O(s,"x","leakyRelu")},i={alpha:t};return j.runKernel(fp,n,i)}const Tv=Y({leakyRelu_:IV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(s,t){let e=O(s,"a","less","string_or_numeric"),n=O(t,"b","less","string_or_numeric");[e,n]=un(e,n),ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(pp,i)}const zI=Y({less_:TV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(s,t){let e=O(s,"a","lessEqual","string_or_numeric"),n=O(t,"b","lessEqual","string_or_numeric");[e,n]=un(e,n),ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(mp,i)}const pc=Y({lessEqual_:EV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(s,t=5,e=1,n=1,i=.5){const r=O(s,"x","localResponseNormalization");D(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),D(Gl(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=r,a=!1;r.rank===3&&(a=!0,o=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:o},c={depthRadius:t,bias:e,alpha:n,beta:i},u=j.runKernel(bp,l,c);return a?Q(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const kV=Y({localResponseNormalization_:MV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(s){const e={x:O(s,"x","log","float32")};return j.runKernel(Ju,e)}const pi=Y({log_:AV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(s){const e={x:O(s,"x","log1p")};return j.runKernel(Qu,e)}const Ev=Y({log1p_:NV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(s,t){D(rx(s),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(c=>c instanceof cf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in j.registeredVariables)t.push(j.registeredVariables[c])}const n=e?t.filter(c=>!c.trainable):null,i=t.length;t=t.filter(c=>c.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const r=!0,{value:o,grads:a}=j.gradients(s,t,null,r);D(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return t.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),n!=null&&n.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Ia(s){return j.customGrad(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(s){const e={x:O(s,"x","softplus")};return j.runKernel(mh,e)}const Th=Y({softplus_:$V});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(s){const t=O(s,"x","logSigmoid");return Ia(n=>({value:nn(Th(nn(n))),gradFunc:o=>q(o,fc(nn(n)))}))(t)}const FV=Y({logSigmoid_:DV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(s,t){let e=O(s,"a","sub"),n=O(t,"b","sub");[e,n]=un(e,n);const i={a:e,b:n};return j.runKernel(vh,i)}const Wt=Y({sub_:LV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(s,t=-1){const e=O(s,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Ia((i,r)=>{const a=Oi(i,t,!0),l=Wt(i,a),c=Wt(Nt(l,"float32"),pi(Vt(fi(l),t,!0)));return r([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,p=!0,g=fi(f);return Wt(h,q(Vt(h,t,p),g))}}})(e)}const BI=Y({logSoftmax_:PV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(s,t=null,e=!1){const n=O(s,"x","logSumExp"),i=pe(t,n.shape),r=Oi(n,i,!0),o=Wt(n,r),a=fi(o),l=Vt(a,i),c=pi(l),u=_t(Q(r,c.shape),c);if(e){const h=hn(u.shape,i);return Q(u,h)}return u}const UI=Y({logSumExp_:OV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(s,t){const e=O(s,"a","logicalAnd","bool"),n=O(t,"b","logicalAnd","bool");ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(gp,i)}const zr=Y({logicalAnd_:zV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(s){const e={x:O(s,"x","logicalNot","bool")};return j.runKernel(xp,e)}const Mv=Y({logicalNot_:BV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(s,t){const e=O(s,"a","logicalOr","bool"),n=O(t,"b","logicalOr","bool");ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(vp,i)}const VI=Y({logicalOr_:UV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(s,t){const e=O(s,"a","logicalXor","bool"),n=O(t,"b","logicalXor","bool");return ae(e.shape,n.shape),zr(VI(s,t),Mv(zr(s,t)))}const WV=Y({logicalXor_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(s,t,e,n,i){const r=O(s,"x","maxPool"),o=1;let a=r,l=!1;r.rank===3&&(l=!0,a=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),D(ts(e,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),xs("maxPool",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i},h=j.runKernel(wp,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const kv=Y({maxPool_:GV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(s,t=[1,1,1],e,n,i,r="NDHWC"){const o=O(s,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),D(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),D(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),xs("maxPool3d",n,i);const c={x:a},u={filterSize:t,strides:e,pad:n,dimRoundingMode:i,dataFormat:r},h=j.runKernel(_p,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const qV=Y({maxPool3d_:HV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(s,t){let e=O(s,"a","maximum"),n=O(t,"b","maximum");[e,n]=un(e,n),e.dtype==="bool"&&(e=Nt(e,"int32"),n=Nt(n,"int32")),ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(th,i)}const Io=Y({maximum_:XV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(s,t=null,e=!1){const i={x:O(s,"x","mean")},r={axis:t,keepDims:e};return j.runKernel(Sp,i,r)}const cn=Y({mean_:jV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $n(s,t="float32"){if(t==="complex64"){const n=$n(s,"float32"),i=$n(s,"float32");return Xl(n,i)}const e=Qn(ht(s),t);return j.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function To(s,t="float32"){if(t==="complex64"){const n=To(s,"float32"),i=$n(s,"float32");return Xl(n,i)}const e=u0(ht(s),t);return j.makeTensor(e,s,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(s,t){let e=O(s,"a","minimum"),n=O(t,"b","minimum");[e,n]=un(e,n),e.dtype==="bool"&&(e=Nt(e,"int32"),n=Nt(n,"int32")),ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(eh,i)}const nm=Y({minimum_:KV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(s,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const n=O(s,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);const i=e==="reflect"?1:0;for(let a=0;a<n.rank;a++)D(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[a][0]>=0&&t[a][0]<=n.shape[a]-i&&t[a][1]>=0&&t[a][1]<=n.shape[a]-i,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-i} or less than 0 for input of shape ${n.shape}`);const r={paddings:t,mode:e},o={x:n};return j.runKernel(Ip,o,r)}const ZV=Y({mirrorPad_:YV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(s,t){let e=O(s,"a","mod"),n=O(t,"b","mod");[e,n]=un(e,n);const i={a:e,b:n};return j.runKernel(nh,i)}const QV=Y({mod_:JV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(s,t=null,e=!1){s=O(s,"x","moments");const n=pe(t,s.shape),i=cn(s,n,e);let r=i.shape;e||(r=hn(i.shape,n));const o=Ve(Wt(Nt(s,"float32"),Q(i,r))),a=cn(o,n,e);return{mean:i,variance:a}}const Av=Y({moments_:tW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(s,t){let e=O(s,"a","notEqual","string_or_numeric"),n=O(t,"b","notEqual","string_or_numeric");[e,n]=un(e,n),ae(e.shape,n.shape);const i={a:e,b:n};return j.runKernel(Ep,i)}const hu=Y({notEqual_:eW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(s){const e={x:O(s,"x","onesLike")};return j.runKernel(Mp,e)}const mi=Y({onesLike_:nW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(s,t,e=0){const n=O(s,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:e},r={x:n};return j.runKernel(Np,r,i)}const Nv=Y({pad_:sW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(s,t,e){const n=O(s,"x","spaceToBatchND");D(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(n.shape.reduce((o,a,l)=>l>0&&l<=t.length?o&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:o,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const i={x:n},r={blockShape:t,paddings:e};return j.runKernel(Up,i,r)}const Rv=Y({spaceToBatchND_:iW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(s,t,e,n,i,r,o){i==null&&(i=[1,1]),r==null&&(r=1),n===0&&(n="valid");const a=O(s,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(ts(r,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);const u=bi(l.shape,t,r,i,n),h=[u.dilationHeight,u.dilationWidth];let d;n==="same"?d=aW([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,g]=oW([u.inHeight,u.inWidth],h,d),m=f?n:"valid",x=f?l:Rv(l,h,p),y=(e==="avg"?()=>vv(x,t,r,m,o):()=>kv(x,t,r,m,o))(),b=f?y:yv(y,h,g);return c?Q(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function oW(s,t,e){const n=e.map(u=>u[0]),i=e.map(u=>u[1]),r=s.concat(n,i),o=t.map((u,h)=>(u-r[h]%u)%u),a=i.map((u,h)=>u+o[h]),l=t.map((u,h)=>[n[h],a[h]]),c=t.map((u,h)=>[0,o[h]]);return[l,c]}function aW(s,t){const n=s.map((o,a)=>o+(o-1)*(t[a]-1)).map(o=>o-1),i=n.map(o=>Math.floor(o/2)),r=n.map((o,a)=>o-i[a]);return n.map((o,a)=>[i[a],r[a]])}const lW=Y({pool_:rW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(s,t){const e=O(s,"x","prelu"),n=O(t,"alpha","prelu"),i={x:e,alpha:n};return j.runKernel(Rp,i)}const $v=Y({prelu_:cW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(s,t=null,e=!1){let n=O(s,"x","prod");n.dtype==="bool"&&(n=Nt(n,"int32"));const i={x:n},r={axis:t,keepDims:e};return j.runKernel($p,i,r)}const hW=Y({prod_:uW});var WI={exports:{}};(function(s){(function(t,e,n){function i(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var u=new i(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.alea=o})(Da,s,!1)})(WI);var GI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor128=o})(Da,s,!1)})(GI);var HI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorwow=o})(Da,s,!1)})(HI);var qI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,f;return d=u[h],d^=d>>>7,f=d^d<<24,d=u[h+1&7],f^=d^d>>>10,d=u[h+3&7],f^=d^d>>>3,d=u[h+4&7],f^=d^d<<7,d=u[h+7&7],d=d^d<<13,f^=d^d<<9,u[h]=f,l.i=h+1&7,f};function c(u,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],u.x=f,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function r(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.x&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xorshift7=o})(Da,s,!1)})(qI);var XI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,f,p;return l.w=u=u+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(u^u>>>16)|0};function c(u,h){var d,f,p,g,m,x=[],v=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,v=Math.max(v,h.length)),p=0,g=-32;g<v;++g)h&&(f^=h.charCodeAt((g+32)%h.length)),g===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(m=m+1640531527|0,d=x[g&127]^=f+m,p=d==0?p+1:0);for(p>=128&&(x[(h&&h.length||0)&127]=-1),p=127,g=4*128;g>0;--g)f=x[p+34&127],d=x[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,x[p]=f^d;u.w=m,u.X=x,u.i=p}c(l,a)}function r(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.X&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.xor4096=o})(Da,s,!1)})(XI);var jI={exports:{}};(function(s){(function(t,e,n){function i(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function r(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var c=new i(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&r(u,c),h.state=function(){return r(c,{})}),h}e&&e.exports?e.exports=o:n&&n.amd?n(function(){return o}):this.tychei=o})(Da,s,!1)})(jI);var KI={exports:{}};const dW={},fW=Object.freeze(Object.defineProperty({__proto__:null,default:dW},Symbol.toStringTag,{value:"Module"})),pW=NO(fW);(function(s){(function(t,e,n){var i=256,r=6,o=52,a="random",l=n.pow(i,r),c=n.pow(2,o),u=c*2,h=i-1,d;function f(b,w,S){var C=[];w=w==!0?{entropy:!0}:w||{};var _=x(m(w.entropy?[b,y(e)]:b==null?v():b,3),C),I=new p(C),T=function(){for(var N=I.g(r),P=l,E=0;N<c;)N=(N+E)*i,P*=i,E=I.g(1);for(;N>=u;)N/=2,P/=2,E>>>=1;return(N+E)/P};return T.int32=function(){return I.g(4)|0},T.quick=function(){return I.g(4)/4294967296},T.double=T,x(y(I.S),e),(w.pass||S||function(N,P,E,M){return M&&(M.S&&g(M,I),N.state=function(){return g(I,{})}),E?(n[a]=N,P):N})(T,_,"global"in w?w.global:this==n,w.state)}function p(b){var w,S=b.length,C=this,_=0,I=C.i=C.j=0,T=C.S=[];for(S||(b=[S++]);_<i;)T[_]=_++;for(_=0;_<i;_++)T[_]=T[I=h&I+b[_%S]+(w=T[_])],T[I]=w;(C.g=function(N){for(var P,E=0,M=C.i,A=C.j,R=C.S;N--;)P=R[M=h&M+1],E=E*i+R[h&(R[M]=R[A=h&A+P])+(R[A]=P)];return C.i=M,C.j=A,E})(i)}function g(b,w){return w.i=b.i,w.j=b.j,w.S=b.S.slice(),w}function m(b,w){var S=[],C=typeof b,_;if(w&&C=="object")for(_ in b)try{S.push(m(b[_],w-1))}catch{}return S.length?S:C=="string"?b:b+"\0"}function x(b,w){for(var S=b+"",C,_=0;_<S.length;)w[h&_]=h&(C^=w[h&_]*19)+S.charCodeAt(_++);return y(w)}function v(){try{var b;return d&&(b=d.randomBytes)?b=b(i):(b=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(b)),y(b)}catch{var w=t.navigator,S=w&&w.plugins;return[+new Date,t,S,t.screen,y(e)]}}function y(b){return String.fromCharCode.apply(0,b)}if(x(n.random(),e),s.exports){s.exports=f;try{d=pW}catch{}}else n["seed"+a]=f})(typeof self<"u"?self:Da,[],Math)})(KI);var mW=WI.exports,gW=GI.exports,xW=HI.exports,vW=qI.exports,bW=XI.exports,yW=jI.exports,Oa=KI.exports;Oa.alea=mW;Oa.xor128=gW;Oa.xorwow=xW;Oa.xorshift7=vW;Oa.xor4096=bW;Oa.tychei=yW;var Eh=Oa;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YI{constructor(t,e,n,i,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=r||Math.random();this.random=Eh.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let t,e,n=!1;for(;!n;){let i,r,o;do i=2*this.random()-1,r=2*this.random()-1,o=i*i+r*r;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*i*a,e=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class wW{constructor(t=0,e=1,n,i){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=n,i==null&&(i=Math.random()),typeof i=="number"&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Eh.alea(i)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _W(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);const r=new YI(t,e,n,!1,i),o=fe(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const SW=Y({randomNormal_:_W});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(s,t=0,e=1,n="float32",i){const r=fe(s,n),o=new wW(t,e,null,i);for(let a=0;a<r.values.length;a++)r.values[a]=o.nextValue();return r.toTensor()}const sm=Y({randomUniform_:CW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ff(s,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");const i={start:s,stop:t,step:e,dtype:n};return j.runKernel(U0,{},i)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(s){const e={x:O(s,"x","reciprocal")};return j.runKernel(rh,e)}const TW=Y({reciprocal_:IW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EW(s){const e={x:O(s,"x","relu")};return j.runKernel(oh,e)}const Gr=Y({relu_:EW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MW(s){const e={x:O(s,"x","relu6")};return j.runKernel(ah,e)}const ZI=Y({relu6_:MW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(s,t){const n={x:O(s,"x","reverse")},i={dims:t};return j.runKernel(Pp,n,i)}const Ta=Y({reverse_:kW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(s){const e={x:O(s,"x","round")};return j.runKernel(lh,e)}const JI=Y({round_:AW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(s){const e={x:O(s,"x","rsqrt","float32")};return j.runKernel(ch,e)}const QI=Y({rsqrt_:NW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(s){const e={x:O(s,"x","selu")};return j.runKernel(uh,e)}const tT=Y({selu_:RW});function $W(s,t,e,n,i,r=[1,1],o="NHWC"){const a=O(s,"x","separableConv2d"),l=O(t,"depthwiseFilter","separableConv2d"),c=O(e,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=Q(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),D(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),D(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),D(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],f=l.shape[3];D(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const p=Sv(u,l,n,i,o,r),m=Ca(p,c,1,"valid",o);return h?Q(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const eT=Y({separableConv2d_:$W});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(s){const e={x:O(s,"x","sign")};return j.runKernel(fh,e)}const FW=Y({sign_:DW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LW(s){const e={x:O(s,"x","sin","float32")};return j.runKernel(hh,e)}const nT=Y({sin_:LW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(s){const e={x:O(s,"x","sinh")};return j.runKernel(dh,e)}const sT=Y({sinh_:PW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(s,t,e){const n=O(s,"x","slice1d");return D(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Oe(n,[t],[e])}const Dv=Y({slice1d_:OW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zW(s,t,e){const n=O(s,"x","slice2d");return D(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}const iT=Y({slice2d_:zW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(s,t,e){const n=O(s,"x","slice3d");return D(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}const Fv=Y({slice3d_:BW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(s,t,e){const n=O(s,"x","slice4d");return D(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Oe(n,t,e)}const pf=Y({slice4d_:UW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VW(s,t=-1){const e=O(s,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const n={logits:e},i={dim:t};return j.runKernel(Wp,n,i)}const Lv=Y({softmax_:VW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WW(s){D(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const t={input:s};return j.runKernel(A0,t)}const rT=Y({fft_:WW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(s){D(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const t={input:s};return j.runKernel($0,t)}const Ix=Y({ifft_:GW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HW(s){const t=s.shape[s.shape.length-1],e=s.size/t;let n;if(t<=2){const i=Q(s,[e,t]);n=Ix(i)}else{const i=[e,2*(t-1)],r=Q(uf(s),[e,t]),o=Q(uv(s),[e,t]),a=Ta(Oe(r,[0,1],[e,t-2]),1),l=q(Ta(Oe(o,[0,1],[e,t-2]),1),ie(-1)),c=Jn([r,a],1),u=Jn([o,l],1),h=Q(Xl(c,u),[i[0],i[1]]);n=Ix(h)}if(n=uf(n),s.rank===3&&s.shape[0]!==0){const i=n,r=s.shape[0];n=Q(n,[r,n.shape[0]/r,n.shape[1]]),i.dispose()}return n}const qW=Y({irfft_:HW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(s,t,e=0){const i={x:O(s,"x","split")},r={numOrSizeSplits:t,axis:e};return j.runKernel(Vp,i,r)}const zs=Y({split_:XW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(s,t){D(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let e=s.shape[s.shape.length-1];const n=s.size/e;let i;if(t!=null&&t<e){const p=s.shape.map(m=>0),g=s.shape.map(m=>m);g[s.shape.length-1]=t,i=Oe(s,p,g),e=t}else if(t!=null&&t>e){const p=s.shape.map(g=>g);p[s.shape.length-1]=t-e,i=Jn([s,$n(p)],s.shape.length-1),e=t}else i=s;const r=Ce(i),o=Q(Xl(i,r),[n,e]),a=rT(o),l=Math.floor(e/2)+1,c=uf(a),u=uv(a),h=zs(c,[l,e-l],c.shape.length-1),d=zs(u,[l,e-l],u.shape.length-1),f=i.shape.slice();return f[i.shape.length-1]=l,Q(Xl(h[0],d[0]),f)}const oT=Y({rfft_:jW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KW(s,t){let e=O(s,"a","squaredDifference"),n=O(t,"b","squaredDifference");[e,n]=un(e,n),ae(e.shape,n.shape);const i={a:e,b:n},r={};return j.runKernel(xh,i,r)}const aT=Y({squaredDifference_:KW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(s,t){const e=O(s,"x","squeeze","string_or_numeric");return Q(e,wo(e.shape,t).newShape)}const Mh=Y({squeeze_:YW});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(s,t=0){const e=lI(s,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const n=e,i={axis:t};return j.runKernel(Ap,n,i)}const ho=Y({stack_:ZW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JW(s,t=0){const n={x:O(s,"x","step")},i={alpha:t};return j.runKernel(_h,n,i)}const kh=Y({step_:JW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QW(s,t,e,n,i=0,r=0,o=0,a=0,l=0){const u={x:O(s,"x","stridedSlice","string_or_numeric")},h={begin:t,end:e,strides:n,beginMask:i,endMask:r,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return j.runKernel(Y0,u,h)}const tG=Y({stridedSlice_:QW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(s){const e={x:O(s,"x","tan","float32")};return j.runKernel(bh,e)}const nG=Y({tan_:eG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(s,t){TC(s);const e=jp(s,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Kp(s,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yd(s,t,e){if(TC(s),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const n=jp(s,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Kp(s,t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(s,t=1,e=!0){const n=O(s,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const i=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const r={x:n},o={k:t,sorted:e},[a,l]=j.runKernel(tv,r,o);return{values:a,indices:l}}const iG=Y({topk_:sG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(s,t=0,e=1,n,i){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new YI(t,e,n,!0,i),o=fe(s,n);for(let a=0;a<o.values.length;a++)o.values[a]=r.nextValue();return o.toTensor()}const lT=Y({truncatedNormal_:rG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(s,t=0){const e=O(s,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");const n={x:e},i={axis:t},[r,o]=j.runKernel(nv,n,i);return{values:r,indices:o}}const aG=Y({unique_:oG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(s,t,e){const n=O(s,"x","unsortedSegmentSum"),i=O(t,"segmentIds","unsortedSegmentSum","int32");D(Gl(e),()=>"numSegments must be of dtype int");const r={x:n,segmentIds:i},o={numSegments:e};return j.runKernel(Hp,r,o)}const cT=Y({unsortedSegmentSum_:lG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(s,t=0){const e=O(s,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const n={value:e},i={axis:t};return j.runKernel(Gp,n,i)}const Yl=Y({unstack_:cG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(s,t=!0,e,n){return j.makeVariable(s,t,e,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(s,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const n=fe(s,"int32"),i=fe([e.length,s.length],"int32");for(let r=0;r<e.length;r++){const o=n.indexToLoc(e[r]),a=r*s.length;i.values.set(o,a)}return i.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hG(s,t){if(t==null)return s.shape.slice();if(ke(s.shape,t))return t;if(s.shape.length===t.length){const e=[];for(let n=0;n<s.shape.length;n++)t[n]==null&&s.shape[n]!=null?e.push(s.shape[n]):e.push(t[n]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(s,t,e,n){const i=O(s,"x","dropout");if(D(i.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return s instanceof Ye?i.clone():i;const r=hG(i,e),o=1-t,a=Yt(em(_t(sm(r,0,1,"float32",n),o)),o);return q(i,a)}const fG=Y({dropout_:dG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function hT(s,t,e){const n=1-s%2,i=new Float32Array(s);for(let r=0;r<s;++r){const o=2*Math.PI*r/(s+n-1);i[r]=t-e*Math.cos(o)}return Is(i,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(s,t,e,n,i,r="NHWC",o){let a=s;s.rank===3&&(a=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),D(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?l.shape[3]:l.shape[1];D(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),D(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),xs("conv2dDerFilter",i,o);const h={x:a,dy:l},d={strides:n,pad:i,dataFormat:r,dimRoundingMode:o,filterShape:e};return j.runKernel(y0,h,d)}const Pv=Y({conv2DBackpropFilter_:mG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(s,t,e){if(e==null||e==="linear")return s;if(e==="relu")return q(s,kh(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function zv(s,t){let e=t;const n=En(s.shape,t.shape);return n.length>0&&(e=Vt(e,n)),Q(e,s.shape)}function Bv(s,t,e,n){if(t==="linear")return s;if(t==="relu")return Gr(s);if(t==="elu")return Qp(s);if(t==="relu6")return ZI(s);if(t==="prelu")return $v(s,e);if(t==="leakyrelu")return Tv(s,n);if(t==="sigmoid")return fc(s);throw new Error(`Unknown fused activation ${t}.`)}const Uv=(s,t)=>!(s>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG({x:s,filter:t,strides:e,pad:n,dataFormat:i="NHWC",dilations:r=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",Uv(j.state.gradientDepth,l)===!1){D(i==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=Ca(s,t,e,n,i,r,o);return a!=null&&(S=_t(S,a)),Bv(S,l,c,u)}const h=O(s,"x","conv2d","float32"),d=O(t,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=Q(h,[1,h.shape[0],h.shape[1],h.shape[2]])),D(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),D(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),xs("fused conv2d",n,o);const g=i==="NHWC"?f.shape[3]:f.shape[1];D(d.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`),D(ts(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const m=qn(f.shape,d.shape,e,r,n,o);let x;a!=null&&(x=O(a,"bias","fused conv2d"),[x]=un(x,h),i==="NHWC"?ae(m.outShape,x.shape):(D(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),D(x.shape.length===0||x.shape[0]===m.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let v;if(c!=null){const S=c.shape;if(D(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)D(S[0]===1||S[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${m.outChannels}).`);else if(S.length===3)try{ae(S,m.outShape)}catch{const _=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(_)}v=O(c,"prelu weights","fused conv2d")}const y=(S,C)=>{D(i==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);const[_,I,T,N]=C,P=Ov(S,T,l);D(Sa(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const E=wv(I.shape,P,_,e,n),M=Pv(I,P,_.shape,e,n),A=[E,M];if(N!=null){const R=zv(N,P);A.push(R)}return A},b={x:f,filter:d,bias:x,preluActivationWeights:v},w={strides:e,pad:n,dataFormat:i,dilations:r,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?Ia((C,_,I)=>{let T=j.runKernel(of,b,w);return I([_,C,T]),p&&(T=Q(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:y}})(f,d):Ia((C,_,I,T)=>{let N=j.runKernel(of,b,w);return T([_,C,N,I]),p&&(N=Q(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:y}})(f,d,x)}const xG=Y({fusedConv2d_:gG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(s,t,e,n,i,r=[1,1],o){let a=s;s.rank===3&&(a=Q(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=t;l.rank===3&&(l=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:a,dy:l},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,filterShape:e};return j.runKernel(E0,c,u)}const bG=Y({depthwiseConv2dNativeBackpropFilter_:vG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(s,t,e,n,i,r=[1,1],o){let a=t,l=!1;t.rank===3&&(l=!0,a=Q(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:a,filter:e},u={strides:n,pad:i,dimRoundingMode:o,dilations:r,inputShape:s},h=j.runKernel(M0,c,u);return l?Q(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const wG=Y({depthwiseConv2dNativeBackpropInput_:yG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G({a:s,b:t,transposeA:e=!1,transposeB:n=!1,bias:i,activation:r="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(Uv(j.state.gradientDepth,r)===!1){let N=Me(s,t,e,n);return i!=null&&(N=_t(N,i)),Bv(N,r,o,a)}let l=O(s,"a","fused matMul"),c=O(t,"b","fused matMul");[l,c]=un(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=n?c.shape[c.rank-1]:c.shape[c.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?c.shape[c.rank-2]:c.shape[c.rank-1],p=l.shape.slice(0,-2),g=c.shape.slice(0,-2),m=ht(p),x=ht(g);D(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${n} must match.`);const y=ae(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),b=e?Q(l,[m,u,d]):Q(l,[m,d,u]),w=n?Q(c,[x,f,h]):Q(c,[x,h,f]);let S;i!=null&&(S=O(i,"bias","fused matMul"),[S]=un(S,l),ae(y,S.shape));let C;o!=null&&(C=O(o,"prelu weights","fused matMul"));const _=(N,P)=>{const[E,M,A,R]=P,V=Ov(Q(N,A.shape),A,r);let L,$;if(!e&&!n?(L=Me(V,M,!1,!0),$=Me(E,V,!0,!1)):!e&&n?(L=Me(V,M,!1,!1),$=Me(V,E,!0,!1)):e&&!n?(L=Me(M,V,!1,!0),$=Me(E,V,!1,!1)):(L=Me(M,V,!0,!0),$=Me(V,E,!0,!0)),i!=null){const U=zv(R,V);return[L,$,U]}else return[L,$]},I={a:b,b:w,bias:S,preluActivationWeights:C},T={transposeA:e,transposeB:n,activation:r,leakyreluAlpha:a};return i==null?Ia((P,E,M)=>{const A=j.runKernel(rf,I,T);return M([P,E,A]),{value:Q(A,y),gradFunc:_}})(b,w):Ia((P,E,M,A)=>{const R=j.runKernel(rf,I,T);return A([P,E,R,M]),{value:Q(R,y),gradFunc:_}})(b,w,S)}const G1=Y({fusedMatMul_:_G});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(s){return hT(s,.54,.46)}const yct=Y({hammingWindow_:SG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(s){return hT(s,.5,.5)}const IG=Y({hannWindow_:CG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(s,t,e,n=!1,i=0){let r=0;const o=[];for(;r+t<=s.size;)o.push(Oe(s,r,t)),r+=e;if(n)for(;r<s.size;){const a=r+t-s.size,l=Jn([Oe(s,r,t-a),Ih([a],i)]);o.push(l),r+=e}return o.length===0?Yd([],[0,t]):Q(Jn(o),[o.length,t])}const EG=Y({frame_:TG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(s,t,e,n,i=IG){n==null&&(n=pG(t));const r=EG(s,t,e),o=q(r,i(t));return oT(o,n)}const wct=Y({stft_:MG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(s,t,e,n,i="bilinear",r=0){const o=O(s,"image","cropAndResize"),a=O(t,"boxes","cropAndResize","float32"),l=O(e,"boxInd","cropAndResize","int32"),c=a.shape[0];D(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),D(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),D(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),D(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),D(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),D(i==="bilinear"||i==="nearest",()=>`method must be bilinear or nearest, but was ${i}`);const u={image:o,boxes:a,boxInd:l},h={method:i,extrapolationValue:r,cropSize:n};return j.runKernel(C0,u,h)}const AG=Y({cropAndResize_:kG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NG(s){const t=O(s,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return j.runKernel(R0,e,{})}const RG=Y({flipLeftRight_:NG});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(s){const t=O(s,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);const i=new Array(t.rank);return i.fill(1,0,e),i[e]=3,Di(t,i)}const DG=Y({grayscaleToRGB_:$G});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FG(s,t,e=0,n=.5){const i=O(s,"image","rotateWithOffset","float32");D(i.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`);const r={image:i},o={radians:t,fillValue:e,center:n};return j.runKernel(sv,r,o)}const LG=Y({rotateWithOffset_:FG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mc(s,t,e,n,i,r){n==null&&(n=.5),i==null&&(i=Number.NEGATIVE_INFINITY),r==null&&(r=0);const o=s.shape[0];return e=Math.min(e,o),D(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),D(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),D(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),D(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=O(s,"boxes","nonMaxSuppression","float32"),o=O(t,"scores","nonMaxSuppression","float32"),a=mc(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l={maxOutputSize:e,iouThreshold:n,scoreThreshold:i};return j.runKernel(O0,{boxes:r,scores:o},l)}const OG=Y({nonMaxSuppression_:PG});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(s,t,e){const n=BG(s,t,e),i=n<0?-(n+1):n;s.splice(i,0,t)}function BG(s,t,e){return VG(s,t,e||UG)}function UG(s,t){return s>t?1:s<t?-1:0}function VG(s,t,e){let n=0,i=s.length,r=0,o=!1;for(;n<i;){r=n+(i-n>>>1);const a=e(t,s[r]);a>0?n=r+1:(i=r,o=!a)}return o?n:-n-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vv(s,t,e,n,i){return Hv(s,t,e,n,i,0)}function Wv(s,t,e,n,i,r){return Hv(s,t,e,n,i,0,!1,r,!0)}function Gv(s,t,e,n,i,r){return Hv(s,t,e,n,i,r,!0)}function Hv(s,t,e,n,i,r,o=!1,a=!1,l=!1){const c=[];for(let m=0;m<t.length;m++)t[m]>i&&c.push({score:t[m],boxIndex:m,suppressBeginIndex:0});c.sort(H1);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<e&&c.length>0;){const m=c.pop(),{score:x,boxIndex:v,suppressBeginIndex:y}=m;if(x<i)break;let b=!1;for(let w=h.length-1;w>=y;--w){const S=WG(s,v,h[w]);if(S>=n){b=!0;break}if(m.score=m.score*GG(n,u,S),m.score<=i)break}m.suppressBeginIndex=h.length,b||(m.score===x?(h.push(v),d.push(m.score)):m.score>i&&zG(c,m,H1))}const f=h.length,p=e-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const g={selectedIndices:h};return o&&(g.selectedScores=d),l&&(g.validOutputs=f),g}function WG(s,t,e){const n=s.subarray(t*4,t*4+4),i=s.subarray(e*4,e*4+4),r=Math.min(n[0],n[2]),o=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),c=Math.min(i[0],i[2]),u=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),d=Math.max(i[1],i[3]),f=(a-r)*(l-o),p=(h-c)*(d-u);if(f<=0||p<=0)return 0;const g=Math.max(r,c),m=Math.max(o,u),x=Math.min(a,h),v=Math.min(l,d),y=Math.max(x-g,0)*Math.max(v-m,0);return y/(f+p-y)}function GG(s,t,e){const n=Math.exp(t*e*e);return e<=s?n:0}function H1(s,t){return s.score-t.score||s.score===t.score&&t.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY){const r=O(s,"boxes","nonMaxSuppressionAsync"),o=O(t,"scores","nonMaxSuppressionAsync"),a=mc(r,o,e,n,i);e=a.maxOutputSize,n=a.iouThreshold,i=a.scoreThreshold;const l=await Promise.all([r.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:h}=Vv(c,u,e,n,i);return r!==s&&r.dispose(),o!==t&&o.dispose(),Is(h,"int32")}const qG=HG;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=O(s,"boxes","nonMaxSuppression"),a=O(t,"scores","nonMaxSuppression"),l=mc(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:o,scores:a},u={maxOutputSize:e,iouThreshold:n,scoreThreshold:i,softNmsSigma:r},h=j.runKernel(B0,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const jG=Y({nonMaxSuppressionWithScore_:XG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function KG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=0){const o=O(s,"boxes","nonMaxSuppressionAsync"),a=O(t,"scores","nonMaxSuppressionAsync"),l=mc(o,a,e,n,i,r);e=l.maxOutputSize,n=l.iouThreshold,i=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=Gv(u,h,e,n,i,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Is(d,"int32"),selectedScores:Is(f)}}const YG=KG;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=O(s,"boxes","nonMaxSuppression"),a=O(t,"scores","nonMaxSuppression"),l=mc(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},p=j.runKernel(z0,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const JG=Y({nonMaxSuppressionPadded_:ZG});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function QG(s,t,e,n=.5,i=Number.NEGATIVE_INFINITY,r=!1){const o=O(s,"boxes","nonMaxSuppressionAsync"),a=O(t,"scores","nonMaxSuppressionAsync"),l=mc(o,a,e,n,i,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:g}=Wv(d,f,c,u,h,r);return o!==s&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:Is(p,"int32"),validOutputs:ie(g,"int32")}}const tH=QG;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(s,t,e=!1,n=!1){const i=O(s,"images","resizeBilinear");D(i.rank===3||i.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=Q(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=j.runKernel(Lp,a,l);return o?Q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const dT=Y({resizeBilinear_:eH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(s,t,e=!1,n=!1){const i=O(s,"images","resizeNearestNeighbor");D(i.rank===3||i.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(i.dtype==="float32"||i.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=i,o=!1;i.rank===3&&(o=!0,r=Q(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const a={images:r},l={alignCorners:e,halfPixelCenters:n,size:t},c=j.runKernel(Fp,a,l);return o?Q(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const fT=Y({resizeNearestNeighbor_:nH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(s,t="binary",e=!1,n=.5){const i=O(s,"image","threshold"),r=.2989,o=.587,a=.114,l=i.shape[0]*i.shape[1];let c=q(Is([n]),255),u,h,d,f;if(D(i.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),D(i.shape[2]===3||i.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),D(i.dtype==="int32"||i.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),i.shape[2]===3){[u,h,d]=zs(i,[1,1,1],-1);const m=q(u,r),x=q(h,o),v=q(d,a);f=_t(_t(m,x),v)}else f=s;if(t==="otsu"){const m=dU(Nt(JI(f),"int32"),av([]),256);c=iH(m,l)}const p=e?pc(f,c):Ws(f,c);return Nt(q(p,255),"int32")}function iH(s,t){let e=Is([-1]),n=Is([0]),i=Is([0]),r,o,a,l,c,u;for(let h=0;h<s.size-1;h++){r=Oe(s,0,h+1),o=Oe(s,h+1),c=Yt(Vt(r),t),u=Yt(Vt(o),t);const d=Vt(q(r,ff(0,r.size)));a=Yt(d,Vt(r));const f=Ih(o.shape,r.size),p=_t(ff(0,o.size),f),g=q(o,p);l=Yt(Vt(g),Vt(o));const m=Wt(a,l),x=Wt(a,l),v=q(c,u);i=q(q(v,m),x);const y=Ws(i,n);n=Ms(y,i,n),e=Ms(y,Is([h]),e)}return e}const rH=Y({threshold_:sH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(s,t,e="nearest",n="constant",i=0,r){const o=O(s,"image","transform","float32"),a=O(t,"transforms","transform","float32");D(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),D(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:o,transforms:a},c={interpolation:e,fillMode:n,fillValue:i,outputShape:r};return j.runKernel(ev,l,c)}const aH=Y({transform_:oH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(s,t,e){D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const n=O(s,"a","bandPart");D(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);const i=n.shape,[r,o]=n.shape.slice(-2);if(!(t<=r))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`);if(!(e<=o))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${o}).`);t<0&&(t=r),e<0&&(e=o);const a=Q(ff(0,r,1,"int32"),[-1,1]),l=ff(0,o,1,"int32"),c=Wt(a,l),u=zr(pc(c,ie(+t,"int32")),Pa(c,ie(-e,"int32"))),h=$n([r,o],n.dtype);return Q(ho(Yl(Q(n,[-1,r,o])).map(d=>Ms(u,d,h))),i)}const cH=Y({bandPart_:lH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(s){let t;if(Array.isArray(s)){t=!1,D(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=s[0].shape[0];for(let r=1;r<s.length;++r)D(s[r].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[r].shape[0]} vs. ${i})`)}else t=!0,s=zs(s,s.shape[0],0).map(i=>Mh(i,[0]));D(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const e=[],n=s;for(let i=0;i<s.length;++i)e.push(j.tidy(()=>{let r=n[i];if(i>0)for(let o=0;o<i;++o){const a=q(Vt(q(e[o],r)),e[o]);r=Wt(r,a)}return Yt(r,tm(r,"euclidean"))}));return t?ho(e,0):e}const hH=Y({gramSchmidt_:uH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(s,t=!1){if(D(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return q1(s,t);{const e=s.shape.slice(0,s.shape.length-2).reduce((l,c)=>l*c),n=Yl(Q(s,[e,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),i=[],r=[];n.forEach(l=>{const[c,u]=q1(l,t);i.push(c),r.push(u)});const o=Q(ho(i,0),s.shape),a=Q(ho(r,0),s.shape);return[o,a]}}function q1(s,t=!1){return j.tidy(()=>{D(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const e=s.shape[0],n=s.shape[1];let i=OI(e),r=aa(s);const o=Yd([[1]],[1,1]);let a=aa(o);const l=e>=n?n:e;for(let c=0;c<l;++c){const u=r,h=a,d=i;[a,r,i]=j.tidy(()=>{const f=Oe(r,[c,c],[e-c,1]),p=tm(f),g=Oe(r,[c,c],[1,1]),m=Ms(Ws(g,0),Yd([[-1]]),Yd([[1]])),x=Wt(g,q(m,p)),v=Yt(f,x);v.shape[0]===1?a=aa(o):a=Jn([o,Oe(v,[1,0],[v.shape[0]-1,v.shape[1]])],0);const y=nn(Yt(Me(m,x),p)),b=Oe(r,[c,0],[e-c,n]),w=q(y,a),S=_e(a);if(c===0)r=Wt(b,Me(w,Me(S,b)));else{const I=Wt(b,Me(w,Me(S,b)));r=Jn([Oe(r,[0,0],[c,n]),I],0)}const C=_e(w),_=Oe(i,[0,c],[e,i.shape[1]-c]);if(c===0)i=Wt(_,Me(Me(_,a),C));else{const I=Wt(_,Me(Me(_,a),C));i=Jn([Oe(i,[0,0],[e,c]),I],1)}return[a,r,i]}),de([u,h,d])}return!t&&e>n&&(i=Oe(i,[0,0],[e,n]),r=Oe(r,[0,0],[n,n])),[i,r]})}const fH=Y({qr_:dH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ps;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ps||(ps={}));function pH(s,t,e=ps.SUM_BY_NONZERO_WEIGHTS){const n=O(s,"losses","computeWeightedLoss");let i=null;t!=null&&(i=O(t,"weights","computeWeightedLoss"));const r=i==null?n:q(n,i);if(e===ps.NONE)return r;if(e===ps.SUM)return Vt(r);if(e===ps.MEAN){if(i==null)return cn(r);{const o=n.size/i.size,a=Yt(Vt(r),Vt(i));return o>1?Yt(a,ie(o)):a}}if(e===ps.SUM_BY_NONZERO_WEIGHTS){if(i==null)return Yt(Vt(r),ie(n.size));{const o=q(i,To(n.shape)),a=Nt(Vt(hu(o,ie(0))),"float32");return Yt(Vt(r),a)}}throw Error(`Unknown reduction: ${e}`)}const Eo=Y({computeWeightedLoss_:pH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(s,t,e,n=ps.SUM_BY_NONZERO_WEIGHTS){const i=O(s,"labels","absoluteDifference"),r=O(t,"predictions","absoluteDifference");let o=null;e!=null&&(o=O(e,"weights","absoluteDifference")),vi(i.shape,r.shape,"Error in absoluteDifference: ");const a=Nn(Wt(i,r));return Eo(a,o,n)}const _ct=Y({absoluteDifference_:mH});function gH(s,t,e,n,i=ps.SUM_BY_NONZERO_WEIGHTS){const r=O(s,"labels","cosineDistance"),o=O(t,"predictions","cosineDistance");let a=null;n!=null&&(a=O(n,"weights","cosineDistance")),vi(r.shape,o.shape,"Error in cosineDistance: ");const l=ie(1),c=Wt(l,Vt(q(r,o),e,!0));return Eo(c,a,i)}const Sct=Y({cosineDistance_:gH});function xH(s,t,e,n=ps.SUM_BY_NONZERO_WEIGHTS){let i=O(s,"labels","hingeLoss");const r=O(t,"predictions","hingeLoss");let o=null;e!=null&&(o=O(e,"weights","hingeLoss")),vi(i.shape,r.shape,"Error in hingeLoss: ");const a=ie(1);i=Wt(q(ie(2),i),a);const l=Gr(Wt(a,q(i,r)));return Eo(l,o,n)}const Cct=Y({hingeLoss_:xH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(s,t,e,n=1,i=ps.SUM_BY_NONZERO_WEIGHTS){const r=O(s,"labels","huberLoss"),o=O(t,"predictions","huberLoss");let a=null;e!=null&&(a=O(e,"weights","huberLoss")),vi(r.shape,o.shape,"Error in huberLoss: ");const l=ie(n),c=Nn(Wt(o,r)),u=nm(c,l),h=Wt(c,u),d=_t(q(ie(.5),Ve(u)),q(l,h));return Eo(d,a,i)}const Ict=Y({huberLoss_:vH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(s,t,e,n=1e-7,i=ps.SUM_BY_NONZERO_WEIGHTS){const r=O(s,"labels","logLoss"),o=O(t,"predictions","logLoss");let a=null;e!=null&&(a=O(e,"weights","logLoss")),vi(r.shape,o.shape,"Error in logLoss: ");const l=ie(1),c=ie(n),u=nn(q(r,pi(_t(o,c)))),h=q(Wt(l,r),pi(_t(Wt(l,o),c))),d=Wt(u,h);return Eo(d,a,i)}const Tct=Y({logLoss_:bH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yH(s,t,e,n=ps.SUM_BY_NONZERO_WEIGHTS){const i=O(s,"labels","meanSquaredError"),r=O(t,"predictions","meanSquaredError");let o=null;e!=null&&(o=O(e,"weights","meanSquaredError")),vi(i.shape,r.shape,"Error in meanSquaredError: ");const a=aT(i,r);return Eo(a,o,n)}const Ect=Y({meanSquaredError_:yH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(s,t){const e=O(s,"labels","sigmoidCrossEntropyWithLogits"),n=O(t,"logits","sigmoidCrossEntropyWithLogits");vi(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");const i=Gr(n),r=q(n,e),o=Ev(fi(nn(Nn(n))));return _t(Wt(i,r),o)}function _H(s,t,e,n=0,i=ps.SUM_BY_NONZERO_WEIGHTS){let r=O(s,"multiClassLabels","sigmoidCrossEntropy");const o=O(t,"logits","sigmoidCrossEntropy");let a=null;if(e!=null&&(a=O(e,"weights","sigmoidCrossEntropy")),vi(r.shape,o.shape,"Error in sigmoidCrossEntropy: "),n>0){const c=ie(n),u=ie(1),h=ie(.5);r=_t(q(r,Wt(u,c)),q(h,c))}const l=wH(r,o);return Eo(l,a,i)}const Mct=Y({sigmoidCrossEntropy_:_H});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(s,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Ia((i,r,o)=>{const l=UI(r,[e],!0),c=Wt(Nt(r,"float32"),l);o([i,c]);const u=nn(q(c,i));return{value:Vt(u,[e]),gradFunc:(f,p)=>{const[g,m]=p,x=hn(f.shape,[e]);return[q(Q(f,x),Wt(Nt(g,"float32"),fi(m))),q(Q(f,x),Wt(fi(m),Nt(g,"float32")))]}}})(s,t)}function CH(s,t,e,n=0,i=ps.SUM_BY_NONZERO_WEIGHTS){let r=O(s,"onehotLabels","softmaxCrossEntropy");const o=O(t,"logits","softmaxCrossEntropy");let a=null;if(e!=null&&(a=O(e,"weights","softmaxCrossEntropy")),vi(r.shape,o.shape,"Error in softmaxCrossEntropy: "),n>0){const c=ie(n),u=ie(1),h=ie(r.shape[1]);r=_t(q(r,Wt(u,c)),Yt(c,h))}const l=SH(r,o);return Eo(l,a,i)}const kct=Y({softmaxCrossEntropy_:CH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(s,t,e,n){const i=O(s,"indices","sparseFillEmptyRows","int32"),r=O(t,"values","sparseFillEmptyRows"),o=O(e,"denseShape","sparseFillEmptyRows","int32"),a=O(n,"defaultValue","sparseFillEmptyRows",r.dtype);if(i.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${i.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:i,values:r,denseShape:o,defaultValue:a},c=j.runKernel(H0,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const Act=Y({sparseFillEmptyRows_:IH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(s,t,e){const n=O(s,"inputIndices","sparseReshape","int32"),i=O(t,"inputShape","sparseReshape","int32"),r=O(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(i.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const o={inputIndices:n,inputShape:i,newShape:r},a=j.runKernel(q0,o);return{outputIndices:a[0],outputShape:a[1]}}const Nct=Y({sparseReshape_:TH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(s,t,e){const n=O(s,"data","sparseSegmentMean"),i=O(t,"indices","sparseSegmentMean","int32"),r=O(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return j.runKernel(X0,o)}const Rct=Y({sparseSegmentMean_:EH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(s,t,e){const n=O(s,"data","sparseSegmentSum"),i=O(t,"indices","sparseSegmentSum","int32"),r=O(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${i.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const o={data:n,indices:i,segmentIds:r};return j.runKernel(j0,o)}const $ct=Y({sparseSegmentSum_:MH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(s,t,e,n,i,r,o,a){const l=O(s,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=O(t,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:e,nGramWidths:n,leftPad:i,rightPad:r,padWidth:o,preserveShortSequences:a},h={data:l,dataSplits:c},d=j.runKernel(Z0,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const Dct=Y({stringNGrams_:kH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(s,t,e=!0){const n=O(s,"input","stringSplit","string"),i=O(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(i.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const r={skipEmpty:e},o={input:n,delimiter:i},a=j.runKernel(J0,o,r);return{indices:a[0],values:a[1],shape:a[2]}}const Fct=Y({stringSplit_:AH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(s,t){const e=O(s,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const i={input:e};return j.runKernel(Q0,i,n)}const Lct=Y({stringToHashBucketFast_:NH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Il={flipLeftRight:RG,grayscaleToRGB:DG,resizeNearestNeighbor:fT,resizeBilinear:dT,rotateWithOffset:LG,cropAndResize:AG,nonMaxSuppression:OG,nonMaxSuppressionAsync:qG,nonMaxSuppressionWithScore:jG,nonMaxSuppressionWithScoreAsync:YG,nonMaxSuppressionPadded:JG,nonMaxSuppressionPaddedAsync:tH,threshold:rH,transform:aH},RH={bandPart:cH,gramSchmidt:hH,qr:fH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mo extends dc{minimize(t,e=!1,n){const{value:i,grads:r}=this.computeGradients(t,n);if(n!=null){const o=n.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(o)}else this.applyGradients(r);return de(r),e?i:(i.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return RV(t,e)}dispose(){this.iterations_!=null&&de(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ie(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Mo,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qv extends Mo{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=j.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=j.registeredVariables[n],o=!1;this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accum_grad`,variable:st(()=>Ce(r).variable(o))}),this.accumulatedUpdates[i]==null&&(this.accumulatedUpdates[i]={originalName:`${n}/accum_var`,variable:st(()=>Ce(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedGrads[i].variable,c=this.accumulatedUpdates[i].variable;st(()=>{const u=_t(q(l,this.rho),q(Ve(a),1-this.rho)),h=q(Yt(os(_t(c,this.epsilon)),os(_t(l,this.epsilon))),a),d=_t(q(c,this.rho),q(Ve(h),1-this.rho));l.assign(u),c.assign(d);const f=_t(q(h,-this.learningRate),r);r.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(de(this.accumulatedGrads.map(t=>t.variable)),de(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}qv.className="Adadelta";bt(qv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xv extends Mo{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=j.registeredVariables[n];this.accumulatedGrads[i]==null&&(this.accumulatedGrads[i]={originalName:`${n}/accumulator`,variable:st(()=>Ih(r.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[i].tensor:t[n];if(o==null)return;const a=this.accumulatedGrads[i].variable;st(()=>{const l=_t(a,Ve(o));a.assign(l);const c=_t(q(Yt(o,os(_t(l,j.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&de(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Xv.className="Adagrad";bt(Xv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jv extends Mo{constructor(t,e,n,i=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],st(()=>{this.accBeta1=ie(e).variable(),this.accBeta2=ie(n).variable()}),i==null&&(this.epsilon=j.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);st(()=>{const n=Wt(1,this.accBeta1),i=Wt(1,this.accBeta2);e.forEach((r,o)=>{const a=j.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:st(()=>Ce(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${r}/v`,variable:st(()=>Ce(a).variable(l))});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=_t(q(u,this.beta1),q(c,1-this.beta1)),f=_t(q(h,this.beta2),q(Ve(c),1-this.beta2)),p=Yt(d,n),g=Yt(f,i);u.assign(d),h.assign(f);const m=_t(q(Yt(p,_t(os(g),this.epsilon)),-this.learningRate),a);a.assign(m)}),this.accBeta1.assign(q(this.accBeta1,this.beta1)),this.accBeta2.assign(q(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&de(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&de(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),st(()=>{this.accBeta1.assign(Kl(this.beta1,this.iterations_+1)),this.accBeta2.assign(Kl(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}jv.className="Adam";bt(jv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kv extends Mo{constructor(t,e,n,i=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=i,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],st(()=>{this.iteration=ie(0).variable(),this.accBeta1=ie(e).variable()}),i==null&&(this.epsilon=j.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);st(()=>{const n=Wt(1,this.accBeta1),i=Yt(-this.learningRate,_t(q(this.iteration,this.decay),1));e.forEach((r,o)=>{const a=j.registeredVariables[r],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${r}/m`,variable:Ce(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${r}/v`,variable:Ce(a).variable(l)});const c=Array.isArray(t)?t[o].tensor:t[r];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=_t(q(u,this.beta1),q(c,1-this.beta1)),f=q(h,this.beta2),p=Nn(c),g=Io(f,p);u.assign(d),h.assign(g);const m=_t(q(Yt(i,n),Yt(d,_t(g,this.epsilon))),a);a.assign(m)}),this.iteration.assign(_t(this.iteration,1)),this.accBeta1.assign(q(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&de(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&de(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}Kv.className="Adamax";bt(Kv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class im extends Mo{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=Array.isArray(t)?t[i].tensor:t[n];if(r==null)return;const o=j.registeredVariables[n];st(()=>{const a=_t(q(this.c,r),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=fr(ie(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}im.className="SGD";bt(im);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yv extends im{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=ie(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=j.registeredVariables[n];this.accumulations[i]==null&&(this.accumulations[i]={originalName:`${n}/momentum`,variable:st(()=>Ce(r).variable(!1))});const o=this.accumulations[i].variable,a=Array.isArray(t)?t[i].tensor:t[n];a!=null&&st(()=>{let l;const c=_t(q(this.m,o),a);this.useNesterov?l=_t(q(this.c,_t(a,q(c,this.m))),r):l=_t(q(this.c,c),r),o.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&de(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Yv.className="Momentum";bt(Yv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zv extends Mo{constructor(t,e=.9,n=0,i=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,i==null&&(this.epsilon=j.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,i)=>{const r=j.registeredVariables[n],o=!1;this.accumulatedMeanSquares[i]==null&&(this.accumulatedMeanSquares[i]={originalName:`${n}/rms`,variable:st(()=>Ce(r).variable(o))}),this.accumulatedMoments[i]==null&&(this.accumulatedMoments[i]={originalName:`${n}/momentum`,variable:st(()=>Ce(r).variable(o))}),this.accumulatedMeanGrads[i]==null&&this.centered&&(this.accumulatedMeanGrads[i]={originalName:`${n}/mg`,variable:st(()=>Ce(r).variable(o))});const a=Array.isArray(t)?t[i].tensor:t[n];if(a==null)return;const l=this.accumulatedMeanSquares[i].variable,c=this.accumulatedMoments[i].variable;st(()=>{const u=_t(q(l,this.decay),q(Ve(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[i].variable,d=_t(q(h,this.decay),q(a,1-this.decay)),f=Yt(q(a,this.learningRate),os(Wt(u,_t(Ve(d),this.epsilon)))),p=_t(q(c,this.momentum),f);l.assign(u),h.assign(d),c.assign(p);const g=Wt(r,p);r.assign(g)}else{const h=_t(q(l,this.decay),q(Ve(a),1-this.decay)),d=_t(q(c,this.momentum),Yt(q(a,this.learningRate),os(_t(h,this.epsilon))));l.assign(h),c.assign(d);const f=Wt(r,d);r.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&de(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&de(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&de(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,e*2).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(i=>({originalName:i.name,variable:i.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Zv.className="RMSProp";bt(Zv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zo{static sgd(t){return new im(t)}static momentum(t,e,n=!1){return new Yv(t,e,n)}static rmsprop(t,e=.9,n=0,i=null,r=!1){return new Zv(t,e,n,i,r)}static adam(t=.001,e=.9,n=.999,i=null){return new jv(t,e,n,i)}static adadelta(t=.001,e=.95,n=null){return new qv(t,e,n)}static adamax(t=.002,e=.9,n=.999,i=null,r=0){return new Kv(t,e,n,i,r)}static adagrad(t,e=.1){return new Xv(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fl={sgd:zo.sgd,momentum:zo.momentum,adadelta:zo.adadelta,adagrad:zo.adagrad,rmsprop:zo.rmsprop,adamax:zo.adamax,adam:zo.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:s=>s())();function pT(){return new Promise(s=>$H(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jv(s,t){const e=s[0].length;s.forEach((i,r)=>{D(i.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const n=s[0];s.forEach((i,r)=>{for(let o=0;o<e;o++)D(o===t||i[o]===n[o],()=>`Error in concat${e}D: Shape of tensors[${r}] (${i}) does not match the shape of the rest (${n}) along the non-concatenated axis ${r}.`)})}function hr(s,t){const e=s[0].slice();for(let n=1;n<s.length;n++)e[t]+=s[n][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ki;(function(s){s[s.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",s[s.VALUE_ROWIDS=1]="VALUE_ROWIDS",s[s.ROW_LENGTHS=2]="ROW_LENGTHS",s[s.ROW_SPLITS=3]="ROW_SPLITS",s[s.ROW_LIMITS=4]="ROW_LIMITS",s[s.ROW_STARTS=5]="ROW_STARTS"})(ki||(ki={}));function mT(s,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<s+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(s+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${s+e.length}, but shape.rank = ${n.length}`);for(let i=1;i<e.length;++i){const r=e[i],o=n[n.length-e.length+i],a=n[o];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${i+s}] = ${r} but shape[${i+s}] = ${a}`)}else n[o]=r}return n}function gT(s){const t={FIRST_DIM_SIZE:ki.FIRST_DIM_SIZE,VALUE_ROWIDS:ki.VALUE_ROWIDS,ROW_LENGTHS:ki.ROW_LENGTHS,ROW_SPLITS:ki.ROW_SPLITS,ROW_LIMITS:ki.ROW_LIMITS,ROW_STARTS:ki.ROW_STARTS},e=[];for(const n of s)if(n in t)e.push(t[n]);else break;return e}function xT(s){return s.length===0?0:s[0]===ki.FIRST_DIM_SIZE?s.length-1:s.length}function vT(s,t){if(s==null||t==null)return;const e=s.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${s} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let i=0;i<Math.min(e,n-1);++i){const r=s[i],o=t[i+1];if(r>=0&&o>=0&&r!==1&&r!==o)throw new Error(`defaultValue.shape=${s}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${i-s.length}] = ${r} but ragged tensor input.flatValues.shape[${i-s.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qv=30;function rm(s){return s<=Qv?s:ox(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(s,t,e){const n=e*(typeof s=="number"?s:s[0]),i=t*(typeof s=="number"?s:s[1]);return[n,i]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ah(s,t,e,n=!0){let i=[];if(n)i=i.concat(t.slice(0)),i.push(s[0]/e),i=i.concat(s.slice(1));else{i=i.concat(s[0]);const r=t.length;for(let o=0;o<r;++o)i=i.concat([s[o+1]/t[o],t[o]]);i=i.concat(s.slice(r+1))}return i}function Nh(s,t,e=!0){const n=[];if(e){n.push(t);for(let i=t+1;i<s;++i)i<=2*t?(n.push(i),n.push(i-(t+1))):n.push(i)}else{const i=[],r=[];for(let o=1;o<s;++o)o>=t*2+1||o%2===1?r.push(o):i.push(o);n.push(...i),n.push(0),n.push(...r)}return n}function Rh(s,t,e,n=!0){const i=[];n?i.push(s[0]/e):i.push(s[0]*e);for(let r=1;r<s.length;++r)r<=t.length?n?i.push(t[r-1]*s[r]):i.push(s[r]/t[r-1]):i.push(s[r]);return i}function eb(s,t){const e=[0];for(let n=0;n<t;++n)e.push(s[n][0]);return e}function nb(s,t,e){const n=s.slice(0,1);for(let i=0;i<e;++i)n.push(s[i+1]-t[i][0]-t[i][1]);return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const om=1.7580993408473768,am=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sb=.3275911,ib=.254829592,rb=-.284496736,ob=1.421413741,ab=-1.453152027,lb=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(s,t){if(s.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${t.length}.`);const e=new Float32Array(s.length*2);for(let n=0;n<e.length;n+=2)e[n]=s[n/2],e[n+1]=t[n/2];return e}function bT(s){const t=new Float32Array(s.length/2),e=new Float32Array(s.length/2);for(let n=0;n<s.length;n+=2)t[n/2]=s[n],e[n/2]=s[n+1];return{real:t,imag:e}}function yT(s){const t=Math.ceil(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=0;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function wT(s){const t=Math.floor(s.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let i=2;i<s.length;i+=4)e[Math.floor(i/4)]=s[i],n[Math.floor(i/4)]=s[i+1];return{real:e,imag:n}}function cb(s,t){const e=s[t*2],n=s[t*2+1];return{real:e,imag:n}}function _T(s,t,e,n){s[n*2]=t,s[n*2+1]=e}function ST(s,t){const e=new Float32Array(s/2),n=new Float32Array(s/2);for(let i=0;i<Math.ceil(s/2);i++){const r=(t?2:-2)*Math.PI*(i/s);e[i]=Math.cos(r),n[i]=Math.sin(r)}return{real:e,imag:n}}function CT(s,t,e){const n=(e?2:-2)*Math.PI*(s/t),i=Math.cos(n),r=Math.sin(n);return{real:i,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eg="->",DH=/->/g,X1=",",j1="...";function ub(s,t){s=s.replace(/\s/g,"");const e=(s.length-s.replace(DH,"").length)/Eg.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Eg}").`);const[n,i]=s.split(Eg);D(n.indexOf(j1)===-1,()=>`The ellipsis notation ("${j1}") is not supported yet.`);const r=n.split(X1),o=r.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<i.length;++d){const f=i[d];if(!r.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<n.length;++d){const f=n[d];a.indexOf(f)===-1&&f!==X1&&a.push(f)}const l=new Array(r.length);for(let d=0;d<o;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<r[d].length;++f)l[d].push(a.indexOf(r[d][f]))}const c=a.length,u=i.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function hb(s,t){let e=new Array(s);e.fill(-1);for(let i=0;i<t.length;++i)e[t[i]]=i;const n=[];for(let i=0;i<s;++i)e[i]===-1&&n.push(i);return e=e.filter(i=>i!==-1),{permutationIndices:e,expandDims:n}}function db(s,t,e){const n=new Array(s);for(let i=0;i<e.length;++i){const r=e[i].shape;for(let o=0;o<t[i].length;++o)n[t[i][o]]===void 0?n[t[i][o]]=r[o]:D(n[t[i][o]]===r[o],()=>`Expected dimension ${n[t[i][o]]} at axis ${o} of input shaped ${JSON.stringify(r)}, but got dimension ${r[o]}`)}}function fb(s,t){const e=s,n=[];let i=0;s.length===0&&e.push(-1),i=s.length+1;for(let o=0;o<i;++o)n.push([]);const r=[];for(let o=0;o<e.length;++o){const a=e[o],l=FH(t,a);for(const c of l)r.indexOf(c)===-1&&(n[o].push(c),r.push(c))}return{path:e,steps:n}}function pb(s){return s.every((t,e)=>t===e)}function FH(s,t){const e=[];for(let n=0;n<s.length;++n)(s[n].length===0||s[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function mb(s,t,e=0){let n=[];if(typeof t=="number")D(s.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(s.shape[e]/t);else{const i=t.reduce((o,a)=>(a===-1&&(o+=1),o),0);D(i<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const o=t.reduce((a,l)=>l>0?a+l:a);t[r]=s.shape[e]-o}D(s.shape[e]===t.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(s){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${s}`}function TT(s,t){return`indices(${s}, 0) is invalid: ${t} < 0`}function ET(s,t,e){return`indices(${s}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(s,t){return`only one output dimension may be -1, not both ${s} and ${t}`}function kT(s,t){return`size ${s} must be non-negative, not ${t}`}function AT(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function NT(s,t){const e=ht(s),n=ht(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${s} outputShape= ${t}`}function RT(s,t){const e=ht(s),n=ht(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${s} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tx(){return"segment ids must be >= 0"}function $T(){return"segment ids are not increasing"}function DT(s,t){return`Segment id ${s} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function FT(s,t,e){return`Bad: indices[${s}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(s,t){let e=!1,n;for(s<=Qv?(n=s,e=!0):n=ox(s,Math.floor(Math.sqrt(s)));!e;)n>t||n===s?e=!0:n=ox(s,n+1);return n}function PT(s,t,e){const n=[],i=s.length;for(let r=0;r<i;r++)r!==t?n.push(s[r]):n.push(e);return n}function gb(s,t,e,n){const i=t.shape.length,r=s.shape.length;if(n!==0&&(n<-i||n>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${n}`);if(n<0&&(n+=i),n>r)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${r}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let h=0;h<n;++h)if(s.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${s.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=s.shape[e],a=[];let l=1,c=1,u=1;for(let h=0;h<n;++h)a.push(s.shape[h]),l*=s.shape[h];for(let h=n;h<e;h++)a.push(s.shape[h]),c*=s.shape[h];for(let h=n;h<i;h++)a.push(t.shape[h]);for(let h=e+1;h<r;h++)a.push(s.shape[h]),u*=s.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:a}}const LH=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:LT,computeOutShape:PT,collectGatherOpShapeInfo:gb},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(s){try{return s.map(t=>co(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function OT(s){return s.map(t=>oo(t))}const PH=Object.freeze(Object.defineProperty({__proto__:null,slice_util:b4,segment_util:LH,fromUint8ToStringArray:Ea,fromStringArrayToUint8:OT,upcastType:Ts,axesAreInnerMostDims:Cv,combineLocations:LI,computeOutAndReduceShapes:Pn,expandShapeToKeepDim:hn,assertAxesAreInnerMostDims:Xn,getAxesPermutation:sn,getUndoAxesPermutation:Co,getInnerMostAxes:dn,getBroadcastDims:jl,getReductionAxes:En,assertAndGetBroadcastShape:ae,assertParamsConsistent:Jv,computeOutShape:hr,computeDilation2DInfo:Ch,computePool2DInfo:bi,computePool3DInfo:Vr,computeConv2DInfo:qn,computeConv3DInfo:So,computeDefaultPad:xv,tupleValuesAreOne:Sa,eitherStridesOrDilationsAreOne:ts,convertConv2DDataFormat:Wr,checkPadOnDimRoundingMode:xs,getFusedDyActivation:Ov,getFusedBiasGradient:zv,applyActivation:Bv,shouldFuse:Uv,get RowPartitionType(){return ki},combineRaggedTensorToTensorShapes:mT,getRowPartitionTypesHelper:gT,getRaggedRank:xT,validateDefaultValueShape:vT,PARALLELIZE_THRESHOLD:Qv,computeOptimalWindowSize:rm,getImageCenter:tb,getReshaped:Ah,getPermuted:Nh,getReshapedPermuted:Rh,getSliceBeginCoords:eb,getSliceSize:nb,prepareAndValidate:hv,validateUpdateShape:yI,validateInput:p4,calculateShapes:Sh,SELU_SCALEALPHA:om,SELU_SCALE:am,ERF_P:sb,ERF_A1:ib,ERF_A2:rb,ERF_A3:ob,ERF_A4:ab,ERF_A5:lb,warn:Ls,log:Qz,mergeRealAndImagArrays:Br,splitRealAndImagArrays:bT,complexWithEvenIndex:yT,complexWithOddIndex:wT,getComplexWithIndex:cb,assignToTypedArray:_T,exponents:ST,exponent:CT,decodeEinsumEquation:ub,getEinsumPermutation:hb,checkEinsumDimSizes:db,getEinsumComputePath:fb,isIdentityPermutation:pb,prepareSplitSize:mb,getSparseFillEmptyRowsIndicesDenseShapeMismatch:IT,getSparseFillEmptyRowsNegativeIndexErrorMessage:TT,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:ET,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:MT,getSparseReshapeNegativeOutputDimErrorMessage:kT,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:AT,getSparseReshapeInputOutputMultipleErrorMessage:NT,getSparseReshapeInputOutputMismatchErrorMessage:RT,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Tx,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:$T,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:DT,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:FT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zT={kernelName:Xf,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,kh(Nt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OH={kernelName:Mu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=Ve(Nt(e,"float32")),i=os(Wt(ie(1),n));return nn(Yt(s,i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH={kernelName:ku,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=os(Wt(Ve(Nt(e,"float32")),1));return Yt(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH={kernelName:hc,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ae(e.shape,n.shape);return{a:()=>{let a=s;const l=En(e.shape,i);return l.length>0&&(a=Vt(a,l)),Q(a,e.shape)},b:()=>{let a=s;const l=En(n.shape,i);return l.length>0&&(a=Vt(a,l)),Q(a,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH={kernelName:f0,saveAllInputs:!0,gradFunc:(s,t)=>{const e={};return t.forEach((n,i)=>{e[i]=()=>s.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH={kernelName:jf,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Ce(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH={kernelName:Kf,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Ce(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GH={kernelName:Au,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Yt(s,os(Wt(ie(1),Ve(Nt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH={kernelName:Nu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=os(_t(ie(1),Ve(Nt(e,"float32"))));return Yt(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH={kernelName:Du,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ae(e.shape,n.shape);return{a:()=>{const a=_t(Ve(e),Ve(n));let l=q(s,Yt(n,a));const c=En(e.shape,i);return c.length>0&&(l=Vt(l,c)),Q(l,e.shape)},b:()=>{const a=_t(Ve(e),Ve(n));let l=nn(q(s,Yt(e,a)));const c=En(n.shape,i);return c.length>0&&(l=Vt(l,c)),Q(l,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XH={kernelName:Ru,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Yt(s,_t(Ve(Nt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH={kernelName:$u,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Yt(s,Wt(ie(1),Ve(Nt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(s,t,e,n,i,r){const o=O(s,"dy","avgPool3dGrad"),a=O(t,"input","avgPool3dGrad");let l=o,c=a,u=!1;a.rank===4&&(u=!0,l=Q(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),D(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),xs("avgPool3dGrad",i,r);const h={dy:l,input:c},d={filterSize:e,strides:n,pad:i,dimRoundingMode:r},f=j.runKernel(x0,h,d);return u?Q(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const YH=Y({avgPool3dGrad_:KH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH={kernelName:Zf,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o,dimRoundingMode:a}=e;return{x:()=>YH(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(s,t,e,n,i){const r=O(s,"dy","avgPoolGrad"),o=O(t,"input","avgPoolGrad");D(o.rank===r.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${r.rank})`);let a=o,l=r,c=!1;o.rank===3&&(c=!0,a=Q(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=Q(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),D(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:e,strides:n,pad:i},d=j.runKernel(g0,u,h);return c?Q(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const QH=Y({avgPoolGrad_:JH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t5={kernelName:Yf,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{filterSize:i,strides:r,pad:o}=e;return{x:()=>QH(s,n,i,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e5={kernelName:Jf,inputsToSave:["a","b"],gradFunc:(s,t,e)=>{const[n,i]=t,{transposeA:r,transposeB:o}=e;return!r&&!o?{a:()=>Me(s,i,!1,!0),b:()=>Me(n,s,!0,!1)}:!r&&o?{a:()=>Me(s,i,!1,!1),b:()=>Me(s,n,!0,!1)}:r&&!o?{a:()=>Me(i,s,!1,!0),b:()=>Me(n,s,!1,!1)}:{a:()=>Me(i,s,!0,!0),b:()=>Me(s,n,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5={kernelName:Qf,gradFunc:(s,t,e)=>{const{blockShape:n,crops:i}=e;return{x:()=>Rv(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5={kernelName:Yz,gradFunc:(s,t,e)=>{const n=e,i=n.inputShape,r=n.shape,o=Array.from(r);for(let l=i.length-1;l>=0;l--)if(i[l]===r[l])o[l]=1;else if(i[l]!==1)throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${r}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>Vt(s,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5={kernelName:Fu,gradFunc:s=>({x:()=>s.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5={kernelName:Lu,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o5={kernelName:Pu,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{clipValueMin:i,clipValueMax:r}=e;return{x:()=>Ms(zr(Pa(n,i),pc(n,r)),s,Ce(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5={kernelName:tp,inputsToSave:["x"],gradFunc:zT.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5={kernelName:ep,saveAllInputs:!0,gradFunc:(s,t,e)=>{const n=t.map(l=>l.shape),{axis:i}=e,r=pe(i,t[0].shape)[0],o=n.map(l=>l[r]);return zs(s,o,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5={kernelName:np,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{dilations:r,strides:o,pad:a,dataFormat:l}=e;return D(Sa(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>wv(n.shape,s,i,o,a,l),filter:()=>Pv(n,s,i.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5={kernelName:sp,inputsToSave:["dy","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,{strides:r,pad:o,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>Ca(s,i,r,o,a,1,l),filter:()=>Pv(s,n,i.shape,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(s,t,e,n,i){let r=s;s.rank===4&&(r=Q(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));let o=t;o.rank===4&&(o=Q(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),D(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),D(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),D(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),D(o.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${e[4]}).`);const a={x:r,dy:o},l={strides:n,pad:i,filterShape:e};return j.runKernel(w0,a,l)}const d5=Y({conv3DBackpropFilter_:h5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5={kernelName:ip,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r}=e;D(Sa(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);const[o,a]=t;return{x:()=>$I(o.shape,s,a,i,r),filter:()=>d5(o,s,a.shape,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5={kernelName:Ou,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(nn(nT(Nt(e,"float32"))),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m5={kernelName:zu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(sT(Nt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5={kernelName:rp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i,exclusive:r,reverse:o}=e;return{x:()=>{const a=sn([i],n.rank);let l=FI(s,i,r,!o);return a!=null&&(l=_e(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5={kernelName:op,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const{dilations:n,strides:i,pad:r,dimRoundingMode:o}=e,a=n==null?[1,1]:n;D(Sa(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=t;return D(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),D(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),D(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),D(ts(i,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${a}'.`),xs("depthwiseConv2d",r,o),{x:()=>wG(l.shape,s,c,i,r,a,o),filter:()=>bG(l,s,c.shape,i,r,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v5={kernelName:ap,inputsToSave:["x","filter"],gradFunc:(s,t,e)=>{const[n,i]=t,r={x:n,filter:i,dy:s},o={x:n,filter:i,dy:s};return{x:()=>j.runKernel(ax,r,e),filter:()=>j.runKernel(lx,o,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b5={kernelName:Uu,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t,n={dy:s,y:e};return{x:()=>j.runKernel(k0,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5={kernelName:Vu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=q(fi(nn(Ve(e))),2/Math.sqrt(Math.PI));return{x:()=>q(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5={kernelName:Wu,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5={kernelName:cp,inputsToSave:["input"],gradFunc:(s,t)=>{const[e]=t;return{input:()=>Q(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5={kernelName:Gu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,fi(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C5={kernelName:Hu,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5={kernelName:qu,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ae(e.shape,n.shape);return{a:()=>{const a=Yt(s,Nt(n,"float32")),l=En(e.shape,i);return l.length>0?Q(Vt(a,l),e.shape):a},b:()=>{let a=q(s,Nt(e,"float32"));const l=En(n.shape,i);l.length>0&&(a=Q(Vt(a,l),n.shape));const c=Ve(n);return nn(Yt(a,Nt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5={kernelName:up,inputsToSave:["x","mean","variance","scale"],gradFunc:(s,t,e)=>{const{varianceEpsilon:n}=e,[i,r,o,a]=t,l=a==null?ie(1):a,c=En(r.shape,i.shape),u=[];if(r.rank===1){for(let b=0;b<i.shape.length-1;++b)u.push(i.shape[b]);u.push(1)}const h=Wt(i,r),d=q(s,l),f=QI(_t(o,ie(n))),p=q(q(q(f,f),f),ie(-.5));return{x:()=>r.rank===1?Q(q(q(s,Di(Q(f,[1,1,1,r.shape[0]]),u)),l),i.shape):Q(q(q(s,f),l),i.shape),mean:()=>{let b=q(q(f,ie(-1)),d);return r.rank===1&&(b=Vt(b,c)),Q(b,r.shape)},variance:()=>{let b=q(q(p,h),d);return r.rank===1&&(b=Vt(b,c)),Q(b,r.shape)},scale:()=>{const b=q(h,f);let w=q(s,b);return r.rank===1&&(w=Vt(w,c)),Q(w,r.shape)},offset:()=>{let b=s;return r.rank===1&&(b=Vt(b,c)),Q(b,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5={kernelName:hp,inputsToSave:["x","indices"],gradFunc:(s,t,e)=>{const[n,i]=t,{axis:r}=e,o=pe(r,n.shape)[0];return{x:()=>{const l=n.shape,c=i.size,u=l.slice(0,o),h=u.length,d=l.slice(r,l.length).slice(1),f=d.length,p=K1(0,h),g=K1(h+1,h+1+f),m=Y1([u,[c],d]),x=Q(s,m),v=Q(i,[c]),y=Y1([[h],p,g]),b=_e(x,y);let w=cT(b,v,n.shape[o]);const S=Co(y);return w=_e(w,S),w},indices:()=>i}}};function K1(s,t){const e=[];for(let n=s;n<t;++n)e.push(n);return e}function Y1(s){const t=[];for(let e=0;e<s.length;++e)for(let n=0;n<s[e].length;++n)t.push(s[e][n]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:Xu,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>Ce(e),b:()=>Ce(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5={kernelName:ju,gradFunc:s=>({x:()=>Nt(s,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5={kernelName:Ku,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5={kernelName:Yu,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5={kernelName:Zu,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5={kernelName:fp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{alpha:i}=e,r=Ws(n,0);return{x:()=>Ms(r,s,q(s,i))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5={kernelName:Qu,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Yt(s,_t(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F5={kernelName:Ju,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Yt(s,Nt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5={kernelName:Zz,inputsToSave:[],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;return{logits:()=>{const o=fi(n);return Wt(s,q(Vt(s,i,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(s,t,e,n=5,i=1,r=1,o=.5){const a={x:s,y:t,dy:e},l={depthRadius:n,bias:i,alpha:r,beta:o};return j.runKernel(F0,a,l)}const O5=Y({localResponseNormalizationBackprop_:P5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5={kernelName:bp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{depthRadius:r,bias:o,alpha:a,beta:l}=e;return{x:()=>O5(n,i,s,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(s,t,e,n){return t.rank<e.rank&&(t=Q(t,hn(t.shape,n))),s.rank<e.rank&&(s=Q(s,hn(s.shape,n))),{x:()=>q(s,Nt(pr(e,t),s.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1={kernelName:yp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{reductionIndices:i}=n,r=t[0],o=t[1],a=pe(i,r.shape),l=BT(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5={kernelName:th,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>q(s,Nt(Pa(e,n),"float32")),b:()=>q(s,Nt(zI(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U5(s,t,e,n,i,r,o){const a=O(s,"dy","maxPool3dGrad"),l=O(t,"input","maxPool3dGrad"),c=O(e,"output","maxPool3dGrad");let u=a,h=l,d=c,f=!1;l.rank===4&&(f=!0,u=Q(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=Q(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Q(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),D(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),D(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),D(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),xs("maxPool3dGrad",r,o);const p={dy:u,input:h,output:d},g={filterSize:n,strides:i,pad:r,dimRoundingMode:o},m=j.runKernel(P0,p,g);return f?Q(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const V5=Y({maxPool3dGrad_:U5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5={kernelName:_p,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=e;return{x:()=>V5(s,n,i,r,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G5(s,t,e,n,i,r,o){const a=O(s,"dy","maxPoolGrad"),l=O(t,"input","maxPoolGrad"),c=O(e,"output","maxPoolGrad");D(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),D(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),D(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),xs("maxPoolGrad",r,o);const u={dy:a,input:l,output:c},h={filterSize:n,strides:i,pad:r,dimRoundingMode:o};return j.runKernel(L0,u,h)}const H5=Y({maxPoolGrad_:G5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q5={kernelName:wp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n,i]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>H5(s,n,i,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5={kernelName:Sp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e,r=pe(i,n.shape),a=Pn(n.shape,r)[1],l=ht(a);return{x:()=>{const u=n.shape.slice();r.forEach(f=>{u[f]=1});const h=Q(s,u);return Yt(q(h,To(n.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5={kernelName:Cp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,t,e)=>{const n=e,{axis:i}=n,[r,o]=t,a=pe(i,r.shape),l=BT(s,o,r,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K5={kernelName:eh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t;return{a:()=>q(s,Nt(pc(e,n),"float32")),b:()=>q(s,Nt(Ws(e,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5={kernelName:Ip,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>Oe(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5={kernelName:nh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ae(e.shape,n.shape);return{a:()=>{const a=En(e.shape,i);return a.length>0?Q(Vt(s,a),e.shape):s},b:()=>{const a=q(s,nn(em(Yt(e,n)))),l=En(n.shape,i);return l.length>0?Q(Vt(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J5={kernelName:sh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ae(e.shape,n.shape);return{a:()=>{const a=q(s,Nt(n,"float32")),l=En(e.shape,i);return l.length>0?Q(Vt(a,l),e.shape):a},b:()=>{const a=q(s,Nt(e,"float32")),l=En(n.shape,i);return l.length>0?Q(Vt(a,l),n.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5={kernelName:Tp,gradFunc:s=>({x:()=>nn(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6={kernelName:kp,inputsToSave:["indices"],gradFunc:(s,t)=>{const e=t[0];return{indices:()=>$n(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6={kernelName:Mp,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6={kernelName:Ap,saveAllInputs:!0,gradFunc:(s,t,e)=>{const{axis:n}=e;return Yl(s,n).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J1={kernelName:Np,inputsToSave:["x"],gradFunc:(s,t,e)=>{const n=t[0],{paddings:i}=e,r=i.map(o=>o[0]);return{x:()=>Oe(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6={kernelName:ih,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(s,t)=>{const[e,n,i]=t,r=e,o=n,a=ae(r.shape,o.shape);return{a:()=>{const u=Nt(o,"float32");let h=q(s,q(u,Kl(r,Wt(u,ie(1)))));const d=En(r.shape,a);return d.length>0&&(h=Vt(h,d)),Q(h,r.shape)},b:()=>{const u=Ws(r,0),h=Ms(u,pi(r),Ce(r));let d=q(s,q(i,h));const f=En(o.shape,a);return f.length>0&&(d=Vt(d,f)),Q(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6={kernelName:Rp,inputsToSave:["x","alpha"],gradFunc:(s,t)=>{const[e,n]=t,i=Ws(e,0);return{x:()=>Ms(i,s,q(s,n)),alpha:()=>{let r=Ms(i,Ce(s),q(s,e));const o=En(n.shape,s.shape);return o.length>0&&(r=Vt(r,o)),Q(r,n.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r6(s,t,e){const n=s.shape.slice();n[e]=1;const i=Q(t,n),r=Cx(s,e,!0,!1),o=Cx(s,e,!0,!0),a=q(r,o);return q(i,a)}function o6(s,t,e){const n=s.shape.length,i=n-e.length,r=sn(e,n);let o=s;r!=null&&(o=_e(s,r));const a=o.shape.slice(),c=a.splice(n-e.length,e.length).reduce((d,f)=>d*f,1);a.push(c);const u=o.reshape(a);let h=r6(u,t,i);if(h=h.reshape(o.shape),r!=null){const d=Co(r);h=_e(h,d)}return h}const a6={kernelName:$p,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{axis:i}=e;let r=[];return i==null?r=n.shape.map((o,a)=>a):typeof i=="number"?r=[i]:r=i,{x:()=>o6(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6={kernelName:Bu,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ae(e.shape,n.shape);return{a:()=>{const a=Yt(s,Nt(n,"float32")),l=En(e.shape,i);return l.length>0?Q(Vt(a,l),e.shape):a},b:()=>{let a=q(s,Nt(e,"float32"));const l=En(n.shape,i);l.length>0&&(a=Q(Vt(a,l),n.shape));const c=Ve(n);return nn(Yt(a,Nt(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6={kernelName:rh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Yt(s,nn(Ve(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:ah,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t,n=q(pc(e,6),kh(e));return{x:()=>q(s,Nt(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h6={kernelName:oh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,Nt(kh(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6={kernelName:Dp,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Q(s,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6={kernelName:Lp,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>j.runKernel(G0,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6={kernelName:Fp,inputsToSave:["images"],gradFunc:(s,t,e)=>{const[n]=t,i={dy:s,images:n};return{images:()=>j.runKernel(W0,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6={kernelName:Pp,gradFunc:(s,t,e)=>{const{dims:n}=e,i=pe(n,s.shape);return{x:()=>Ta(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g6={kernelName:lh,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x6={kernelName:ch,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>nn(Yt(s,q(Kl(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6={kernelName:Op,inputsToSave:["condition"],gradFunc:(s,t)=>{const[e]=t;return{condition:()=>Nt(Ce(e),"float32"),t:()=>q(s,Nt(e,s.dtype)),e:()=>q(s,Nt(Mv(e),s.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6={kernelName:uh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>{const n=Ws(e,ie(0)),i=ie(om),r=ie(am),o=q(s,r),a=q(q(s,i),fi(Nt(e,"float32")));return Ms(n,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6={kernelName:ph,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,q(e,Wt(ie(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w6={kernelName:fh,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _6={kernelName:hh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(_v(Nt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6={kernelName:dh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(DI(Nt(e,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6={kernelName:zp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{begin:i,size:r}=e,o=n.shape,[a,l]=Zp(n,i,r),c=[];for(let u=0;u<s.rank;u++)c.push([a[u],o[u]-a[u]-l[u]]);return{x:()=>Nv(s,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6={kernelName:Wp,outputsToSave:[!0],gradFunc:(s,t,e)=>{const[n]=t,{dim:i}=e,r=!0,o=q(s,n);return{logits:()=>Wt(o,q(Vt(o,[i],r),n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6={kernelName:mh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,fc(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q1={kernelName:Up,gradFunc:(s,t,e)=>{const{blockShape:n,paddings:i}=e;return{x:()=>yv(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t_={kernelName:Vp,gradFunc:(s,t,e)=>{const{axis:n}=e;return{x:()=>Jn(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6={kernelName:gh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Yt(s,q(os(Nt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6={kernelName:K0,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(s,q(Nt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:xh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ie(2);return{a:()=>q(s,q(i,Wt(e,n))),b:()=>q(s,q(i,Wt(n,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:_h,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:vh,inputsToSave:["a","b"],gradFunc:(s,t)=>{const[e,n]=t,i=ae(e.shape,n.shape);return{a:()=>{let a=s;const l=En(e.shape,i);return l.length>0&&(a=Vt(a,l)),Q(a,e.shape)},b:()=>{let a=s;const l=En(n.shape,i);return l.length>0&&(a=Vt(a,l)),Q(nn(a),n.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6={kernelName:Bp,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,i=n.shape.slice(),{axis:r}=e;pe(r,n.shape).forEach(c=>{i[c]=1});const a=Q(s,i),l=q(a,To(n.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:bh,inputsToSave:["x"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>Yt(s,Ve(_v(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:yh,outputsToSave:[!0],gradFunc:(s,t)=>{const[e]=t;return{x:()=>q(Wt(ie(1),Ve(e)),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6={kernelName:wh,inputsToSave:["x"],gradFunc:(s,t,e)=>{const[n]=t,{reps:i}=e;return{x:()=>{let o=Ce(n);if(n.rank===1)for(let a=0;a<i[0];++a)o=_t(o,Oe(s,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)o=_t(o,Oe(s,[a*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)o=_t(o,Oe(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<i[0];++a)for(let l=0;l<i[1];++l)for(let c=0;c<i[2];++c)for(let u=0;u<i[3];++u)o=_t(o,Oe(s,[a*n.shape[0],l*n.shape[1],c*n.shape[2],u*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6={kernelName:Nl,gradFunc:(s,t,e)=>{const n=e,{perm:i}=n,r=Co(i);return{x:()=>_e(s,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6={kernelName:Gp,gradFunc:(s,t,e)=>{const n=e,{axis:i}=n;return{value:()=>ho(s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6={kernelName:Hp,inputsToSave:["segmentIds"],gradFunc:(s,t)=>{const[e]=t;return{x:()=>z6(s,e)}}};function z6(s,t){const e=Io(t,Ce(t)),n=Iv(s,e);let i=Pa(t,ie(0,"int32"));const r=n.rank-i.rank;for(let a=0;a<r;++a)i=_s(i,a+1);i=zr(i,To(n.shape,"bool"));const o=Ce(n);return Ms(i,n,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6={kernelName:qp,gradFunc:s=>({x:()=>Ce(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6=[zT,OH,zH,BH,UH,VH,WH,GH,HH,qH,XH,jH,ZH,t5,e5,n5,s5,i5,r5,o5,a5,l5,u5,c5,f5,p5,m5,g5,x5,v5,l6,b5,y5,w5,_5,S5,I5,C5,T5,E5,M5,k5,A5,N5,R5,$5,D5,F5,L5,z5,Z1,Z1,B5,W5,q5,X5,j5,K5,Y5,Z5,J5,Q5,t6,e6,n6,J1,J1,s6,i6,a6,c6,u6,h6,d6,f6,p6,m6,g6,x6,v6,b6,y6,w6,_6,S6,C6,I6,T6,Q1,Q1,t_,t_,E6,k6,M6,A6,N6,R6,$6,D6,F6,L6,P6,O6,B6];for(const s of U6)tB(s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.abs=function(){return this.throwIfDisposed(),Nn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.acos=function(){return this.throwIfDisposed(),T4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.acosh=function(){return this.throwIfDisposed(),M4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.add=function(s){return this.throwIfDisposed(),_t(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.all=function(s,t){return this.throwIfDisposed(),AI(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.any=function(s,t){return this.throwIfDisposed(),_x(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.argMax=function(s){return this.throwIfDisposed(),uu(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.argMin=function(s){return this.throwIfDisposed(),$4(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.asScalar=function(){return this.throwIfDisposed(),D(this.size===1,()=>"The array must have only 1 element."),Q(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.asType=function(s){return this.throwIfDisposed(),Nt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.as1D=function(){return this.throwIfDisposed(),Q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.as2D=function(s,t){return this.throwIfDisposed(),Q(this,[s,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.as3D=function(s,t,e){return this.throwIfDisposed(),Q(this,[s,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.as4D=function(s,t,e,n){return this.throwIfDisposed(),Q(this,[s,t,e,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.as5D=function(s,t,e,n,i){return this.throwIfDisposed(),Q(this,[s,t,e,n,i])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.asin=function(){return this.throwIfDisposed(),F4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.asinh=function(){return this.throwIfDisposed(),P4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.atan=function(){return this.throwIfDisposed(),z4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.atan2=function(s){return this.throwIfDisposed(),U4(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.atanh=function(){return this.throwIfDisposed(),W4(this)};ct().prototype.avgPool=function(s,t,e,n){return this.throwIfDisposed(),vv(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.batchToSpaceND=function(s,t){return this.throwIfDisposed(),yv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.batchNorm=function(s,t,e,n,i){return this.throwIfDisposed(),Jp(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.broadcastTo=function(s){return this.throwIfDisposed(),Jc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.cast=function(s){return this.throwIfDisposed(),Nt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.ceil=function(){return this.throwIfDisposed(),mU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.clipByValue=function(s,t){return this.throwIfDisposed(),Bs(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.concat=function(s,t){return this.throwIfDisposed(),s instanceof Ye&&(s=[s]),Jn([this,...s],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.conv1d=function(s,t,e,n,i,r){return this.throwIfDisposed(),NI(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.conv2dTranspose=function(s,t,e,n,i){return this.throwIfDisposed(),RI(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.conv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),Ca(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.cos=function(){return this.throwIfDisposed(),_v(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.cosh=function(){return this.throwIfDisposed(),DI(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.cumprod=function(s,t,e){return this.throwIfDisposed(),Cx(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.cumsum=function(s,t,e){return this.throwIfDisposed(),FI(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.depthToSpace=function(s,t){return this.throwIfDisposed(),BU(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.depthwiseConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),Sv(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.dilation2d=function(s,t,e,n,i){return this.throwIfDisposed(),WU(this,s,t,e,n,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.divNoNan=function(s){return this.throwIfDisposed(),jU(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.div=function(s){return this.throwIfDisposed(),Yt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.dot=function(s){return this.throwIfDisposed(),YU(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.elu=function(){return this.throwIfDisposed(),Qp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.equal=function(s){return this.throwIfDisposed(),pr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.erf=function(){return this.throwIfDisposed(),QU(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.euclideanNorm=function(s,t){return this.throwIfDisposed(),lV(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.exp=function(){return this.throwIfDisposed(),fi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.expandDims=function(s){return this.throwIfDisposed(),_s(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.expm1=function(){return this.throwIfDisposed(),dV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.fft=function(){return this.throwIfDisposed(),rT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.flatten=function(){return this.throwIfDisposed(),Q(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.floor=function(){return this.throwIfDisposed(),em(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.floorDiv=function(s){return this.throwIfDisposed(),kI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.gather=function(s,t){return this.throwIfDisposed(),Iv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.greaterEqual=function(s){return this.throwIfDisposed(),Pa(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.greater=function(s){return this.throwIfDisposed(),Ws(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.ifft=function(){return this.throwIfDisposed(),Ix(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.irfft=function(){return this.throwIfDisposed(),qW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.isFinite=function(){return this.throwIfDisposed(),yV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.isInf=function(){return this.throwIfDisposed(),_V(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.isNaN=function(){return this.throwIfDisposed(),CV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.leakyRelu=function(s){return this.throwIfDisposed(),Tv(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.lessEqual=function(s){return this.throwIfDisposed(),pc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.less=function(s){return this.throwIfDisposed(),zI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.localResponseNormalization=function(s,t,e,n){return this.throwIfDisposed(),kV(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.logSigmoid=function(){return this.throwIfDisposed(),FV(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.logSoftmax=function(s){return this.throwIfDisposed(),BI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.logSumExp=function(s,t){return this.throwIfDisposed(),UI(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.log=function(){return this.throwIfDisposed(),pi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.log1p=function(){return this.throwIfDisposed(),Ev(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.logicalAnd=function(s){return this.throwIfDisposed(),zr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.logicalNot=function(){return this.throwIfDisposed(),Mv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.logicalOr=function(s){return this.throwIfDisposed(),VI(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.logicalXor=function(s){return this.throwIfDisposed(),WV(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.matMul=function(s,t,e){return this.throwIfDisposed(),Me(this,s,t,e)};ct().prototype.maxPool=function(s,t,e,n){return this.throwIfDisposed(),kv(this,s,t,e,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.max=function(s,t){return this.throwIfDisposed(),Oi(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.maximum=function(s){return this.throwIfDisposed(),Io(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.mean=function(s,t){return this.throwIfDisposed(),cn(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.min=function(s,t){return this.throwIfDisposed(),df(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.minimum=function(s){return this.throwIfDisposed(),nm(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.mirrorPad=function(s,t){return this.throwIfDisposed(),ZV(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.mod=function(s){return this.throwIfDisposed(),QV(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.mul=function(s){return this.throwIfDisposed(),q(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.neg=function(){return this.throwIfDisposed(),nn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.norm=function(s,t,e){return this.throwIfDisposed(),tm(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.notEqual=function(s){return this.throwIfDisposed(),hu(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.oneHot=function(s,t=1,e=0){return this.throwIfDisposed(),vI(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.onesLike=function(){return this.throwIfDisposed(),mi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.pad=function(s,t){return this.throwIfDisposed(),Nv(this,s,t)};ct().prototype.pool=function(s,t,e,n,i,r){return this.throwIfDisposed(),lW(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.pow=function(s){return this.throwIfDisposed(),Kl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.prelu=function(s){return this.throwIfDisposed(),$v(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.prod=function(s,t){return this.throwIfDisposed(),hW(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.reciprocal=function(){return this.throwIfDisposed(),TW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.relu=function(){return this.throwIfDisposed(),Gr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.relu6=function(){return this.throwIfDisposed(),ZI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.reshapeAs=function(s){return this.throwIfDisposed(),Q(this,s.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.reshape=function(s){return this.throwIfDisposed(),Q(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.resizeBilinear=function(s,t,e){return this.throwIfDisposed(),dT(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.resizeNearestNeighbor=function(s,t,e){return this.throwIfDisposed(),fT(this,s,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.reverse=function(s){return this.throwIfDisposed(),Ta(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.rfft=function(){return this.throwIfDisposed(),oT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.round=function(){return this.throwIfDisposed(),JI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.rsqrt=function(){return this.throwIfDisposed(),QI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.selu=function(){return this.throwIfDisposed(),tT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.separableConv2d=function(s,t,e,n,i,r){return this.throwIfDisposed(),eT(this,s,t,e,n,i,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.sigmoid=function(){return this.throwIfDisposed(),fc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.sign=function(){return this.throwIfDisposed(),FW(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.sin=function(){return this.throwIfDisposed(),nT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.sinh=function(){return this.throwIfDisposed(),sT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.slice=function(s,t){return this.throwIfDisposed(),Oe(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.softmax=function(s){return this.throwIfDisposed(),Lv(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.softplus=function(){return this.throwIfDisposed(),Th(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.spaceToBatchND=function(s,t){return this.throwIfDisposed(),Rv(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.split=function(s,t){return this.throwIfDisposed(),zs(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.sqrt=function(){return this.throwIfDisposed(),os(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.square=function(){return this.throwIfDisposed(),Ve(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.squaredDifference=function(s){return this.throwIfDisposed(),aT(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.squeeze=function(s){return this.throwIfDisposed(),Mh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.stack=function(s,t){this.throwIfDisposed();const e=s instanceof Ye?[this,s]:[this,...s];return ho(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.step=function(s){return this.throwIfDisposed(),kh(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.stridedSlice=function(s,t,e,n,i,r,o,a){return this.throwIfDisposed(),tG(this,s,t,e,n,i,r,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.sub=function(s){return this.throwIfDisposed(),Wt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.sum=function(s,t){return this.throwIfDisposed(),Vt(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.tan=function(){return this.throwIfDisposed(),nG(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.tanh=function(){return this.throwIfDisposed(),bv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.tile=function(s){return this.throwIfDisposed(),Di(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.toBool=function(){return this.throwIfDisposed(),Nt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.toFloat=function(){return this.throwIfDisposed(),Nt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.toInt=function(){return this.throwIfDisposed(),Nt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.topk=function(s,t){return this.throwIfDisposed(),iG(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.transpose=function(s){return this.throwIfDisposed(),_e(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.unique=function(s){return this.throwIfDisposed(),aG(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.unsortedSegmentSum=function(s,t){return this.throwIfDisposed(),cT(this,s,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.unstack=function(s){return this.throwIfDisposed(),Yl(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.where=function(s,t){return this.throwIfDisposed(),Ms(s,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ct().prototype.zerosLike=function(){return this.throwIfDisposed(),Ce(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ir extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ir.prototype)}}class li extends Error{constructor(t){super(t),Object.setPrototypeOf(this,li.prototype)}}class X extends Error{constructor(t){super(t),Object.setPrototypeOf(this,X.prototype)}}class le extends Error{constructor(t){super(t),Object.setPrototypeOf(this,le.prototype)}}class xb extends Error{constructor(t){super(t),Object.setPrototypeOf(this,xb.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class UT{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ma(s,t){if(Array.isArray(s)){let e=[];for(let n=0;n<t;n++)e=e.concat(s);return e}else{const e=new Array(t);return e.fill(s),e}}function rr(s,t){if(!s)throw new xb(t)}function e_(s,t){let e=0;for(const n of s)n===t&&e++;return e}function ds(s){return s.length===1?s[0]:s}function He(s){return Array.isArray(s)?s:[s]}function Rr(s){const e=s.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function jo(s){return s.length<=1||s.indexOf("_")===-1?s:s.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let js={};function vb(s){if(s==null)return null;const t={};return t.className=s.getClassName(),t.config=s.getConfig(),t}function Ex(s){if(!(s==null||typeof s!="object"))if(Array.isArray(s))s.forEach(t=>Ex(t));else{const t=Object.keys(s);for(const e of t){const n=s[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?s[e]=n.value:Ex(n))}}}function $h(s,t={},e={},n="object",i=!1){if(typeof s=="string"){const r=s;let o;if(r in e)o=e[r];else if(r in js)o=js[r];else if(o=t[r],o==null)throw new X(`Unknown ${n}: ${s}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const r=s;if(r.className==null||r.config==null)throw new X(`${n}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const o=r.className;let a,l;if(o in e?[a,l]=e[o]:o in js?[a,l]=js.className:o in t&&([a,l]=t[o]),a==null)throw new X(`Unknown ${n}: ${o}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const f of Object.keys(js))c[f]=js[f];for(const f of Object.keys(e))c[f]=e[f];const u=r.config;u.customObjects=c;const h=Object.assign({},js);for(const f of Object.keys(e))js[f]=e[f];Ex(r.config);const d=l(a,r.config,e,i);return js=Object.assign({},h),d}else{const c=Object.assign({},js);for(const h of Object.keys(e))js[h]=e[h];const u=new a(r.config);return js=Object.assign({},c),u}}}function V6(s,t){return s<t?-1:s>t?1:0}function Nd(s,t){return-1*V6(s,t)}function ao(s){if(s==null)return s;const t=[];for(const e of s)t.indexOf(e)===-1&&t.push(e);return t}function W6(s){if(s==null)throw new X(`Invalid value in obj: ${JSON.stringify(s)}`);for(const t in s)if(s.hasOwnProperty(t))return!1;return!0}function za(s,t,e){if(e!=null&&s.indexOf(e)<0)throw new X(`${e} is not a valid ${t}.  Valid values are ${s} or null/undefined.`)}function bb(s,t,e=0,n=1/0){return rr(e>=0),rr(n>=e),Array.isArray(s)&&s.length>=e&&s.length<=n&&s.every(i=>typeof i===t)}function Dn(s,t){Array.isArray(s)?(D(s.length>0,()=>`${t} is unexpectedly an empty array.`),s.forEach((e,n)=>Dn(e,`element ${n+1} of ${t}`))):D(Number.isInteger(s)&&s>0,()=>`Expected ${t} to be a positive integer, but got ${VT(s)}.`)}function VT(s){return s===null?"null":Array.isArray(s)?"["+s.map(t=>VT(t)).join(",")+"]":typeof s=="string"?`"${s}"`:`${s}`}function G6(s,t,e){let n=e!=null?e():Kn(),i;return(...o)=>{const a=e!=null?e():Kn();return a-n<t||(n=a,i=s(...o)),i}}function WT(s){return s==="relu"?"relu":s==="linear"?"linear":s==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let H6=0;function GT(){return H6++}const Rd={};function lm(s=""){return s in Rd||(Rd[s]=0),Rd[s]+=1,s+Rd[s].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const q6=["channelsFirst","channelsLast"],X6=["nearest","bilinear"],j6=["valid","same","causal"],K6=["max","avg"],Y6=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const pl=new Map;function fn(s){za(q6,"DataFormat",s)}function Z6(s){za(X6,"InterpolationFormat",s)}function Gs(s){za(j6,"PaddingMode",s)}function HT(s){za(K6,"PoolMode",s)}const Qc=[],n_="/";function ca(s,t){Qc.push(s);try{const e=t();return Qc.pop(),e}catch(e){throw Qc.pop(),e}}function J6(){return Qc.length===0?"":Qc.join(n_)+n_}function qT(s){if(!jT(s))throw new Error("Not a valid tensor name: '"+s+"'");return J6()+s}function XT(s){if(!jT(s))throw new Error("Not a valid tensor name: '"+s+"'");pl.has(s)||pl.set(s,0);const t=pl.get(s);if(pl.set(s,pl.get(s)+1),t>0){const e=`${s}_${t}`;return pl.set(e,1),e}else return s}const Q6=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jT(s){return!!s.match(Q6)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tq(s){return s===parseInt(s.toString(),10)}function lo(s,t,e){t==null&&(t=0),e==null&&(e=s.length);let n=1;for(let i=t;i<e;++i)n*=s[i];return n}function Zl(s){if(s.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n<t&&(t=n)}return t}function fo(s){if(s.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<s.length;e++){const n=s[e];n>t&&(t=n)}return t}function Wi(s,t){if(t<s)throw new X(`end (${t}) < begin (${s}) is forbidden.`);const e=[];for(let n=s;n<t;++n)e.push(n);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Mg;function Sn(){return Mg==null&&(Mg=c4().epsilon()),Mg}function Gi(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ba(s,t){return Nt(s,t)}function Dh(s,t=-1){const e=s.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),Q(s,e)}function eq(s,t){return st(()=>{if(s.shape.length!==2)throw new X(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);const e=Dh(s,1);return Mx(e,[1,t,1])})}function nq(s){const t=[lo(s.shape)];return Q(s,t)}function sq(s){if(s.rank<=1)throw new X(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const t=[s.shape[0],lo(s.shape,1)];return Q(s,t)}function ua(s,t,e){return st(()=>{switch(s.rank){case 1:return Dv(s,t,e);case 2:return iT(s,[t,0],[e,s.shape[1]]);case 3:return Fv(s,[t,0,0],[e,s.shape[1],s.shape[2]]);case 4:return pf(s,[t,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3]]);case 5:return Oe(s,[t,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4]]);case 6:return Oe(s,[t,0,0,0,0,0],[e,s.shape[1],s.shape[2],s.shape[3],s.shape[4],s.shape[5]]);default:throw new X(`sliceAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}})}function kg(s,t,e){return st(()=>{switch(s.rank){case 1:return Dv(s,t,e);case 2:return iT(s,[0,t],[s.shape[0],e]);case 3:return Fv(s,[0,0,t],[s.shape[0],s.shape[1],e]);case 4:return pf(s,[0,0,0,t],[s.shape[0],s.shape[1],s.shape[2],e]);default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function $d(s,t,e,n){return st(()=>{switch(s.rank){case 1:return Dv(s,t,e);case 2:switch(n){case 1:return ua(s,t,e);case 2:return kg(s,t,e);default:throw new X(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return ua(s,t,e);case 2:return Fv(s,[0,t,0],[s.shape[0],e,s.shape[2]]);case 3:return kg(s,t,e);default:throw new X(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return ua(s,t,e);case 2:return pf(s,[0,t,0,0],[s.shape[0],e,s.shape[2],s.shape[3]]);case 3:return pf(s,[0,0,t,0],[s.shape[0],s.shape[1],e,s.shape[3]]);case 4:return kg(s,t,e);default:throw new X(`The axis is not within the rank of the tensor ${n}`)}default:throw new X(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function yb(s,t=-1){let e;return t<0&&(e=s[0].rank,e!==0?t=e:t=0),t===s[0].rank&&(t=-1),Jn(s,t)}function s_(s,t){switch(s.rank){case 1:return vU([s,t]);case 2:return yU([s,t],0);case 3:return _U([s,t],0);case 4:return CU([s,t],0);default:throw new X(`concatAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}}function Mx(s,t){if(Array.isArray(t)||(t=[t]),s.rank!==t.length)throw new X(`The length of input n (${t.length}) does not match the number of dimensions in input x (${s.rank})`);return Di(s,t)}function cm(s,t=0,e=1,n,i){return SW(s,t,e,n,i)}function dr(s,t,e,n){if(s.rank<2||t.rank<2)throw new le(`dot requires both inputs to be rank >= 2 but got x shape = ${s.shape} and y shape = ${t.shape}`);if(t.rank>=3){const i=s.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(i!==r)throw new le(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${s.shape} and  y shape = ${t.shape}`)}if(s.rank===2&&t.rank===2)return G1({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?kx(s.rank,n,Gi()):null,activation:e});{const i=s.shape.slice(),r=i.pop();s=Q(s,[-1,r]);const o=t.shape.slice(),a=o.pop(),l=o.pop(),c=[...o,a],u=Array.from({length:t.rank},(p,g)=>g===0?t.rank-2:g<=t.rank-2?g-1:g);t=Q(_e(t,u),[l,-1]);const h=[...i,...c];return Q(G1({a:s,b:t,transposeA:!1,transposeB:!1,bias:n?kx(s.rank,n,Gi()):null,activation:e}),h)}}function KT(s,t,e){return st(()=>(Array.isArray(t)?t=Is(t,"int32"):t=Nt(t,"int32"),Iv(s,t,e)))}function Fh(s){return q(s,s)}function kx(s,t,e){const n=t.shape;if(t.rank!==1&&t.rank!==s)throw new X(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${s}`);if(s===5){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1,1,1]):Q(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,1,1,n[0]]):Q(t,[1].concat(n))}else if(s===4){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1,1]):Q(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,1,n[0]]):Q(t,[1].concat(n))}else if(s===3){if(e==="channelsFirst")return n.length===1?Q(t,[1,n[0],1]):Q(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?Q(t,[1,1,n[0]]):Q(t,[1].concat(n))}else if(s<3)return t;throw new X(`Unsupported input rank by biasAdd: ${t.rank}`)}function ji(s,t,e){return st(()=>(e==null&&(e=Gi()),fn(e),_t(s,kx(s.rank,t,e))))}function iq(s,t=1){if(t!==1)throw new le(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Qp(s)}function rq(s){return st(()=>Yt(s,_t(Nn(s),1)))}function YT(s,t,e,n){return st(()=>fG(s,t,e,n))}function oq(s){return st(()=>{const t=_t(.5,q(.2,s));return Bs(t,0,1)})}function Lh(s,t,e=!1){return e?s():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const aq=["fanIn","fanOut","fanAvg"],lq=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cq(s){za(aq,"FanMode",s)}function uq(s){za(lq,"Distribution",s)}class yi extends dc{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ZT extends yi{apply(t,e){return $n(t,e)}}ZT.className="Zeros";bt(ZT);class wb extends yi{apply(t,e){return To(t,e)}}wb.className="Ones";bt(wb);class JT extends yi{constructor(t){if(super(),typeof t!="object")throw new X(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new X(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return st(()=>q(ie(this.value),To(t,e)))}getConfig(){return{value:this.value}}}JT.className="Constant";bt(JT);class QT extends yi{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return sm(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}QT.className="RandomUniform";bt(QT);class tE extends yi{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new le(`randomNormal does not support dType ${e}.`);return cm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}tE.className="RandomNormal";bt(tE);class eE extends yi{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new le(`truncatedNormal does not support dType ${e}.`);return lT(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}eE.className="TruncatedNormal";bt(eE);class nE extends yi{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return st(()=>{if(t.length!==2||t[0]!==t[1])throw new X("Identity matrix initializer can only be used for 2D square matrices.");return q(this.gain,OI(t[0]))})}getConfig(){return{gain:this.gain}}}nE.className="Identity";bt(nE);function hq(s,t="channelsLast"){let e,n;if(fn(t),s.length===2)e=s[0],n=s[1];else if([3,4,5].indexOf(s.length)!==-1){if(t==="channelsFirst"){const i=lo(s,2);e=s[1]*i,n=s[0]*i}else if(t==="channelsLast"){const i=lo(s,0,s.length-2);e=s[s.length-2]*i,n=s[s.length-1]*i}}else{const i=lo(s);e=Math.sqrt(i),n=Math.sqrt(i)}return[e,n]}class ks extends yi{constructor(t){if(super(),t.scale<0)throw new X(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,cq(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,uq(this.distribution),this.seed=t.seed}apply(t,e){const n=hq(t),i=n[0],r=n[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,i):this.mode==="fanOut"?o/=Math.max(1,r):o/=Math.max(1,(i+r)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new le(`${this.getClassName()} does not support dType ${e}.`);return lT(t,0,a,e,this.seed)}else{const a=Math.sqrt(3*o);return sm(t,-a,a,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ks.className="VarianceScaling";bt(ks);class _b extends ks{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return ks.className}}_b.className="GlorotUniform";bt(_b);class Sb extends ks{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Sb.className="GlorotNormal";bt(Sb);class Cb extends ks{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Cb.className="HeNormal";bt(Cb);class Ib extends ks{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Ib.className="HeUniform";bt(Ib);class Tb extends ks{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Tb.className="LeCunNormal";bt(Tb);class Eb extends ks{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return ks.className}}Eb.className="LeCunNormal";bt(Eb);class sE extends yi{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new le("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return st(()=>{if(t.length<2)throw new le("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const n=t[0]>t[1]?[t[1],t[0]]:t,i=cm(n,0,1,"float32");let r=RH.gramSchmidt(i);return t[0]>t[1]&&(r=_e(r)),q(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}sE.className="Orthogonal";bt(sE);const i_={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function r_(s,t={}){return $h(s,ni.getMap().classNameMap,t,"initializer")}function tn(s){return vb(s)}function Ze(s){if(typeof s=="string"){const t=s in i_?i_[s]:s;if(t==="GlorotNormal")return new Sb;if(t==="GlorotUniform")return new _b;if(t==="HeNormal")return new Cb;if(t==="HeUniform")return new Ib;if(t==="LeCunNormal")return new Tb;if(t==="LeCunUniform")return new Eb;{const e={};return e.className=t,e.config={},r_(e)}}else return s instanceof yi?s:r_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ax(s){return Array.isArray(s)&&Array.isArray(s[0])}function mf(s){return s.length===0?[]:Array.isArray(s[0])?s:[s]}function oe(s){let t;if(Array.isArray(s)){if(s.length!==1)throw new X(`Expected Tensor length to be 1; got ${s.length}`);t=s[0]}else t=s;return t}function Ae(s){if(Array.isArray(s)&&Array.isArray(s[0])){if(s.length===1)return s=s,s[0];throw new X(`Expected exactly 1 Shape; got ${s.length}`)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gf(s){let t=0;for(const e of s)e.shape.length===0?t+=1:t+=e.shape.reduce((n,i)=>n*i);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const o_="Variable";class dq{constructor(t,e="float32",n=o_,i=!0,r=null){this.dtype=e==null?"float32":e,this.shape=t.shape,this.id=GT(),n=n==null?o_:n,this.originalName=qT(n),this.name=XT(this.originalName),this.trainable_=i,this.constraint=r,this.val=uG(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),fq(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function fq(s,t){if(s.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(s.shape)+" vs. "+JSON.stringify(t.shape))}function Nx(s){return s.map(t=>t.read())}function Mb(s){s.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Cn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ar{constructor(t,e,n,i,r,o,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=i,this.callArgs=r,this.outputTensorIndex=a,this.id=GT(),o!=null&&(this.originalName=qT(o),this.name=XT(this.originalName)),this.rank=e.length}}let pq=0;class um{constructor(t,e){this.callArgs=e,this.id=pq++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)n!=null&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mq=0;class be extends dc{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mq++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const n=this.getClassName();e=Rr(n)+"_"+lm(n)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let n;if(t.batchInputShape!=null)n=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),n=[r].concat(t.inputShape)}this.batchInputShape=n;let i=t.dtype;i==null&&(i=t.inputDType),i==null&&(i="float32"),this.dtype=i}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new li(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new X(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ds(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ds(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ir(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ir(`Layer ${this.name} is not connected, no input to return.`);return ds(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ir(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ir(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ds(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=He(t),this.inputSpec==null||this.inputSpec.length===0)return;const e=He(this.inputSpec);if(t.length!==e.length)throw new X(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const i=t[n],r=e[n];if(r==null)continue;const o=i.rank;if(r.ndim!=null&&o!==r.ndim)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${o}`);if(r.maxNDim!=null&&o>r.maxNDim)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${o}`);if(r.minNDim!=null&&o<r.minNDim)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${o}.`);if(r.dtype!=null&&i.dtype!==r.dtype)throw new X(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${i.dtype}.`);if(r.axes){const a=i.shape;for(const l in r.axes){const c=Number(l),u=r.axes[l],h=c>=0?a[c]:a[a.length+c];if(u!=null&&[u,null].indexOf(h)===-1)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${u} but got shape ${a}.`)}}if(r.shape!=null)for(let a=0;a<r.shape.length;++a){const l=r.shape[a],c=i.shape[a];if(l!=null&&c!=null&&l!==c)throw new X(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${i.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=He(t);let i=!0;for(const o of n)if(!(o instanceof ar)){i=!1;break}let r=!0;for(const o of n)if(o instanceof ar){r=!1;break}if(i===r)throw new X("Arguments to apply() must be all SymbolicTensors or all Tensors");return ca(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const a of He(t))o.push(a.shape);this.build(ds(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let o=this.call(t,e);const a=He(o),l=[];for(let c of a)n.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(o=ds(l),this.activityRegularizer!=null)throw new le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=gq(t),a=this.computeOutputShape(o);let l;const c=xq(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new ar(c,u,this,He(t),e,this.name,h)):l=new ar(c,a,this,He(t),e,this.name),this.addInboundNode(t,l,null,null,o,a,e),this._refCount++,this.activityRegularizer!=null)throw new le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,i)=>{n!=null&&t[i]!=null&&t[i]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ir(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);t.indexOf(n)===-1&&t.push(n)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new ir(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new li(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return gf(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Nx(t?this.trainableWeights:this.weights)}setWeights(t){st(()=>{const e=this.weights;if(e.length!==t.length)throw new X(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const n=[],i=Nx(e);for(let r=0;r<i.length;++r){const o=i[r],a=e[r],l=t[r];if(!ke(o.shape,l.shape))throw new X(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);n.push([a,l])}Mb(n)})}addWeight(t,e,n,i,r,o,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new X(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(i=l!=null?l():Ze("zeros"));const c=i.apply(e,n),u=new dq(c,n,t,o,a);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),o==null&&(o=!0),o?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=He(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,n,i,r,o,a=null){const l=He(t);e=He(e),n=He(n),i=He(i),r=mf(r),o=mf(o);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new um({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:n,outputMasks:i,inputShapes:r,outputShapes:o},a);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function gq(s){s=He(s);const t=[];for(const e of s)t.push(e.shape);return ds(t)}function xq(s){return"float32"}function iE(s,t,e){if((t==null||e!=null&&e>0)&&(t=s.sourceLayer,e=s.nodeIndex),t.inboundNodes.length===0)return[s];{const n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{const i=[];for(let r=0;r<n.inboundLayers.length;r++){const o=n.inputTensors[r],a=n.inboundLayers[r],l=n.nodeIndices[r],c=iE(o,a,l);for(const u of c)i.indexOf(u)===-1&&i.push(u)}return i}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ph extends be{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:lm("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new X("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new X("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new X("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const i=new ar(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new um({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new X(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Ph.className="InputLayer";bt(Ph);function vq(s){if(s.batchShape==null&&s.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(s.batchShape!=null&&s.shape!=null)throw new X("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=s.batchShape;s.shape!=null&&t==null&&(t=[null].concat(s.shape));let e=s.dtype;return e==null&&(e="float32"),new Ph({batchInputShape:t,name:s.name,dtype:e,sparse:s.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bq(s,t){if(s.dtype==null||s.dtype===t.dtype)return t;try{return Nt(t,s.dtype)}catch{throw new X(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}class no{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof no)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=bq(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new X(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ar){if(this.id2Value[t.id]==null)throw new X(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new X(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof ar){if(this.id2Value[t.id]==null)throw new X(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new X(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&de(this.id2Mask)}}const xf=new UT,vf=new UT;function yq(s){xf!=null&&xf.setMaxEntries(s),vf!=null&&vf.setMaxEntries(s)}function Vc(s,t,e,n){const i=e==null?!1:e.training,r=Array.isArray(s),o=r?s:[s],a=o.map(p=>p.name),l=[],c=t.names();for(const p of a)c.indexOf(p)!==-1?l.push(t.getValue(p)):l.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);const u=a.join(",")+"|"+t.names().sort().join(",");let h=xf.get(u),d;if(h==null){const p=wq(o,t);h=p.sorted,d=p.recipientCounts,xf.put(u,h),vf.put(u,d)}d={},i||Object.assign(d,vf.get(u));const f=new no(t);for(let p=0;p<h.length;++p){if(n!=null){const I=yx().numTensors;I>n.maxNumTensors&&(n.maxNumTensors=I),I<n.minNumTensors&&(n.minNumTensors=I)}const g=h[p],m=g.sourceLayer;if(m instanceof Ph)continue;const x=[],v=[],y=[];let b=!1;for(const I of g.inputs){const T=f.getValue(I),N=f.getMask(I);x.push(T),v.push(N),N!=null&&(b=!0),i||(d[I.name]--,d[I.name]===0&&!t.hasKey(I)&&a.indexOf(I.name)===-1&&!T.isDisposed&&I.sourceLayer.stateful!==!0&&y.push(T))}b&&(e=e||{},e.mask=v[0]);const w=He(m.apply(x,e));let S=null;m.supportsMasking&&(S=m.computeMask(x,v));const C=Sq(g),_=Array.isArray(C)?C:[C];for(let I=0;I<_.length;++I){f.hasKey(_[I])||f.add(_[I],w[I],Array.isArray(S)?S[0]:S);const T=a.indexOf(_[I].name);T!==-1&&(l[T]=w[I])}i||de(y)}return f.disposeMasks(),r?l:l[0]}function wq(s,t){D(s!=null&&s.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(s.length===1){const i=a_(s[0],t);e=i.sorted,n=i.recipientMap}else{const i=new Set;for(const r of s){const{sorted:o,recipientMap:a}=a_(r,t);for(const l of o)i.has(l.name)||(e.push(l),i.add(l.name));for(const l in a)n[l]==null&&(n[l]=new Set),a[l].forEach(c=>n[l].add(c))}}return{sorted:e,recipientCounts:_q(n)}}function _q(s){const t={};for(const e in s)t[e]=s[e].size;return t}function a_(s,t){const e=new Set,n=[],i={};for(const a of t.names())e.add(a);const r=[],o=[];for(r.push(s);r.length>0;){const a=r[r.length-1];if(e.has(a.name)){r.pop();continue}const l=o[o.length-1]===r.length-1;if(a.inputs.length===0||l)r.pop(),n.push(a),e.add(a.name),l&&o.pop();else{o.push(r.length-1);for(const c of a.inputs)i[c.name]==null&&(i[c.name]=new Set),i[c.name].add(a.name),!e.has(c.name)&&r.push(c)}}return{sorted:n,recipientMap:i}}function Sq(s){let t;if(s.sourceLayer.inboundNodes.length===1)t=s.sourceLayer.output;else{let e=null;for(let n=0;n<s.sourceLayer.inboundNodes.length;++n)for(const i of s.sourceLayer.inboundNodes[n].outputTensors)if(i.id===s.id){e=n;break}t=s.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq=at();Cq.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,yq);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kb(s,t){return st(()=>os(Vt(q(s,s),t,!0)))}class Oh extends dc{getConfig(){return{}}}class rE extends Oh{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return st(()=>{const e=kb(t,this.axis),n=Bs(e,0,this.maxValue);return q(t,Yt(n,_t(Sn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}rE.className="MaxNorm";bt(rE);class oE extends Oh{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return st(()=>Yt(t,_t(Sn(),kb(t,this.axis))))}getConfig(){return{axis:this.axis}}}oE.className="UnitNorm";bt(oE);class aE extends Oh{apply(t){return Gr(t)}}aE.className="NonNeg";bt(aE);class lE extends Oh{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return st(()=>{const e=kb(t,this.axis),n=_t(q(this.rate,Bs(e,this.minValue,this.maxValue)),q(1-this.rate,e));return q(t,Yt(n,_t(Sn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}lE.className="MinMaxNorm";bt(lE);const l_={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function In(s){return vb(s)}function c_(s,t={}){return $h(s,ni.getMap().classNameMap,t,"constraint")}function Tn(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in l_?l_[s]:s,config:{}};return c_(e)}else return s instanceof Oh?s:c_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Bo(s){if(s==null)return;const t=[],e=[],n=[];for(const i in s){const r=s[i];if(typeof r!="number"){const o=r;t.push(o.data()),e.push(i),n.push(o)}}if(t.length>0){const i=await Promise.all(t);for(let r=0;r<i.length;++r)s[e[r]]=i[r][0];de(n)}}function cE(s){if(s!=null)for(const t in s){const e=s[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var u_;(function(s){s[s.SILENT=0]="SILENT",s[s.VERBOSE=1]="VERBOSE"})(u_||(u_={}));const Iq=125;class du{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Tq{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Eq extends du{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const n=e.size==null?0:e.size;this.seen+=n;for(const i in e){const r=e[i];if(typeof r=="number")this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+r*n;else{let o;i in this.totals?o=this.totals[i]:this.totals[i]=0;const a=st(()=>_t(this.totals[i],q(r,n)));this.totals[i]=a,o!=null&&o.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?e[n]=this.totals[n]/this.seen:st(()=>{const i=q(Yt(1,this.seen),this.totals[n]);e[n]=i,this.totals[n].dispose(),fr(e[n])}))}}class Mq extends du{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const n in e)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const o=this.history[r];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];t.push(l.data()),e.push(r),n.push(a)}}const i=await Promise.all(t);for(let r=0;r<i.length;++r)this.history[e[r]][n[r]].dispose(),this.history[e[r]][n[r]]=i[r][0]}}class kq extends du{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||pT,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=Iq),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ix(this.yieldEvery)&&(this.maybeWait=G6(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const i=[];this.yield!=null&&(await Bo(n),i.push(this.yield(t,e,n))),i.push(this.nextFrameFunc()),await Promise.all(i)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Bo(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];this.epochEnd!=null&&(await Bo(e),n.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Bo(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];this.batchEnd!=null&&(await Bo(e),n.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):ix(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){this.trainBegin!=null&&(await Bo(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Bo(t),await this.trainEnd(t))}}function uE(s,t){return s==null&&(s={}),s instanceof du?[s]:Array.isArray(s)&&s[0]instanceof du?s:He(s).map(n=>new kq(n,t))}class Zs{constructor(){}static registerCallbackConstructor(t,e){D(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Zs.checkForDuplicate(e),Zs.constructors[t]==null&&(Zs.constructors[t]=[]),Zs.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Zs.constructors)Zs.constructors[+e].forEach(i=>{if(i===t)throw new X("Duplicate callback constructor.")})}static clear(){Zs.constructors={}}static createCallbacks(t){const e=[];for(const n in Zs.constructors){const i=+n;t>=i&&e.push(...Zs.constructors[i])}return e.map(n=>new n)}}Zs.constructors={};function hE(s,t,e,n,i,r,o,a,l){const c=new Mq,u=[new Eq,...Zs.createCallbacks(t)];s!=null&&u.push(...s),u.push(c);const h=new Tq(u);return h.setParams({epochs:e,initialEpoch:n,samples:i,steps:r,batchSize:o,verbose:t,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Or(s,t={},e=!1){return $h(s,ni.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bf(s,t){return st(()=>{s.dtype!=="float32"&&(s=Nt(s,"float32"));const e=Vt(Fh(s),t,!0),n=Ih(e.shape,Sn()),i=os(Io(e,n));return Yt(s,i)})}function hm(s,t){return st(()=>cn(Fh(Wt(t,s)),-1))}function Ab(s,t){return st(()=>cn(Nn(Wt(t,s)),-1))}function Nb(s,t){return st(()=>{const e=Wt(s,t),n=Bs(Nn(s),Sn(),Number.MAX_VALUE),i=Nn(Yt(e,n));return q(100,cn(i,-1))})}function Aq(s,t){return st(()=>{const e=Bs(t,Sn(),Number.MAX_VALUE),n=pi(_t(1,e)),i=Bs(s,Sn(),Number.MAX_VALUE),r=pi(_t(1,i));return cn(Fh(Wt(n,r)),-1)})}function Nq(s,t){return st(()=>{const e=Io(0,Wt(1,q(s,t)));return cn(Fh(e),-1)})}function Rq(s,t){return st(()=>{const e=Io(0,Wt(1,q(s,t)));return cn(e,-1)})}function $q(s,t){return st(()=>{const e=Vt(q(s,t),-1),n=Oi(q(Wt(1,s),t),-1);return Io(0,_t(1,Wt(n,e)))})}function Dq(s,t){return st(()=>{const e=Math.log(2),n=Wt(t,s),i=Wt(_t(n,Th(q(-2,n))),e);return cn(i,-1)})}function fu(s,t,e=!1){return st(()=>{if(e)t=Lv(t);else{const n=Vt(t,t.shape.length-1,!0);t=Yt(t,n)}return t=Bs(t,Sn(),1-Sn()),nn(Vt(q(Nt(s,"float32"),pi(t)),t.shape.length-1))})}function yf(s,t,e=!1){return st(()=>{const n=Nt(em(nq(s)),"int32");t=Bs(t,Sn(),1-Sn());const i=t.shape,r=Q(vI(n,i[i.length-1]),i);return fu(r,t,e)})}function Fq(s,t){if(!ke(s.shape,t.shape))throw new X(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(t.shape)}`);return st(()=>{const e=Gr(t),n=nn(Nn(t));return _t(Wt(e,q(t,s)),Ev(fi(n)))})}function dm(s,t){return st(()=>{let e;return e=Bs(t,Sn(),1-Sn()),e=pi(Yt(e,Wt(1,e))),cn(Fq(s,e),-1)})}function Lq(s,t){return st(()=>{const e=Bs(s,Sn(),1),n=Bs(t,Sn(),1);return Vt(q(s,pi(Yt(e,n))),-1)})}function Pq(s,t){return st(()=>{const e=pi(_t(Sn(),t));return cn(Wt(t,q(s,e)),-1)})}function dE(s,t){return st(()=>{const e=bf(s,-1),n=bf(t,-1),i=q(e,n);return nn(Vt(i,-1))})}const wf={meanSquaredError:hm,meanAbsoluteError:Ab,meanAbsolutePercentageError:Nb,meanSquaredLogarithmicError:Aq,squaredHinge:Nq,hinge:Rq,categoricalHinge:$q,logcosh:Dq,categoricalCrossentropy:fu,sparseCategoricalCrossentropy:yf,binaryCrossentropy:dm,kullbackLeiblerDivergence:Lq,poisson:Pq,cosineProximity:dE};function Ag(s){if(typeof s=="string"){if(s in wf)return wf[s];let t=`Unknown loss ${s}`;throw s.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${s}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new X(t)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fE(s,t){return st(()=>{const e=q(.5,mi(t)),n=Ba(Ws(t,e),s.dtype);return cn(pr(s,n),-1)})}function pE(s,t){return st(()=>Ba(pr(uu(s,-1),uu(t,-1)),"float32"))}function Oq(s,t){return st(()=>Nt(Vt(zr(pr(s,1),pr(t,1))),"float32"))}function zq(s,t){return st(()=>Nt(Vt(zr(pr(s,0),pr(t,1))),"float32"))}function Bq(s,t){return st(()=>{const e=Oq(s,t),n=zq(s,t),i=_t(e,n);return Nt(Ms(Ws(i,0),Yt(e,i),0),"float32")})}function Uq(s,t){return dm(s,t)}function Vq(s,t){return s.rank===t.rank&&(s=Mh(s,[s.rank-1])),t=uu(t,-1),t.dtype!==s.dtype&&(t=Nt(t,s.dtype)),Nt(pr(s,t),"float32")}const Wq=hm,Gq=hm,Hq=Ab,qq=Ab,Xq=Nb,jq=Nb,mE=fu,Kq=dE,gE=yf,_f={binaryAccuracy:fE,categoricalAccuracy:pE,precision:Bq,categoricalCrossentropy:mE,sparseCategoricalCrossentropy:gE,mse:Wq,MSE:Gq,mae:Hq,MAE:qq,mape:Xq,MAPE:jq,cosine:Kq};function Yq(s){if(typeof s=="string"&&s in _f)return _f[s];if(typeof s!="string"&&s!=null)return s;throw new X(`Unknown metric ${s}`)}function Dd(s){if(rr(s!==null,`Unknown LossOrMetricFn ${s}`),typeof s=="string")return s;{let t;for(const e of Object.keys(wf))if(wf[e]===s){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(_f))if(_f[e]===s){t=e;break}return t!==void 0?t:s.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zq(s){const t={Adagrad:()=>fl.adagrad(.01),Adadelta:()=>fl.adadelta(1,.95,Sn()),Adam:()=>fl.adam(.001,.9,.999,Sn()),Adamax:()=>fl.adamax(.002,.9,.999,Sn(),0),RMSProp:()=>fl.rmsprop(.001,.9,0,Sn()),SGD:()=>fl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,s in t)return t[s]();throw new X(`Unknown Optimizer ${s}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const h_=1*1024*1024;function d_(s,t,e=!1){if(s==null||typeof s!="object"||Object.getPrototypeOf(s)!==Object.prototype||!Rx(s))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const n=JSON.stringify(s);n.length>h_&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${h_}.`)}}function Rx(s){if(s===null)return!0;if(typeof s=="object")if(Object.getPrototypeOf(s)===Object.prototype){const t=Object.keys(s);for(const e of t)if(typeof e!="string"||!Rx(s[e]))return!1;return!0}else if(Array.isArray(s)){for(const t of s)if(!Rx(t))return!1;return!0}else return!1;else{const t=typeof s;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jq(s,t,e,n=console.log){const i=t8(s),r=["Layer (type)","Input Shape","Output shape","Param #"];i?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let o;if(!i){r.push("Receives inputs"),o=[];for(const u in s.nodesByDepth)o.push(...s.nodesByDepth[u])}n("_".repeat(t)),Sf(r,e,n),n("=".repeat(t));const a=s.layers;for(let u=0;u<a.length;++u)i?e8(a[u],e,n):n8(a[u],e,o,n),n((u===a.length-1?"=":"_").repeat(t));s.checkTrainableWeightsConsistency();const l=Qq(s),c=gf(s.nonTrainableWeights);n(`Total params: ${l+c}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${c}`),n("_".repeat(t))}function Qq(s){let t;return s.collectedTrainableWeights!=null?t=gf(s.collectedTrainableWeights):t=gf(s.trainableWeights),t}function t8(s){let t=!0;const e=[],n=[];for(const i in s.nodesByDepth)e.push(s.nodesByDepth[i]);for(const i of e){if(i.length>1||i.length===1&&i[0].inboundLayers.length>1){t=!1;break}n.push(...i)}if(t)for(const i of s.layers){let r=!1;for(const o of i.inboundNodes)if(n.indexOf(o)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function Sf(s,t,e=console.log){let n="";for(let i=0;i<s.length;++i)i>0&&(n=n.slice(0,n.length-1)+" "),n+=s[i],n=n.slice(0,t[i]),n+=" ".repeat(t[i]-n.length);e(n)}function e8(s,t,e){let n,i;try{i=s.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{i="multiple"}try{n=JSON.stringify(s.outputShape)}catch{n="multiple"}const r=s.name,o=s.getClassName(),a=[`${r} (${o})`,i,n,s.countParams().toString()];Sf(a,t,e)}function n8(s,t,e,n){let i,r;try{r=s.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{i=JSON.stringify(s.outputShape)}catch{i="multiple"}const o=[];for(const h of s.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,p=h.nodeIndices[d],g=h.tensorIndices[d];o.push(`${f}[${p}][${g}]`)}const a=s.name,l=s.getClassName(),c=o.length===0?"":o[0],u=[`${a} (${l})`,r,i,s.countParams().toString(),c];Sf(u,t,n);for(let h=1;h<o.length;++h)Sf(["","","","",o[h]],t,n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xE(s,t,e){return(s==="inboundNodes"||s==="outputLayers"||s==="inputLayers")&&t===0&&typeof e=="string"}function $x(s,t){if(s===null)return null;if(typeof s=="string")return jo(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];xE(t,i,r)?e.push(r):e.push($x(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n];if(n==="name"&&typeof i=="string")e[n]=i;else{const r=jo(n);e[r]=$x(i,r)}}return e}}function Dx(s,t){if(s==null)return null;if(typeof s=="string")return Rr(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const e=[],n=s.length;for(let i=0;i<n;++i){const r=s[i];xE(t,i,r)?e.push(r):e.push(Dx(r,t))}return e}else{const e={};for(const n of Object.keys(s)){const i=s[n],r=Rr(n);(n==="name"||n==="className")&&typeof i=="string"?e[r]=i:e[r]=Dx(i,n)}return e}}/** @license See the LICENSE file. */const vE="4.0.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ei extends be{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const v=this.getClassName().toLowerCase();this.name=lm(v)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],ao(this.inputs).length!==this.inputs.length)throw new X(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(v=>v.name)}`);ao(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(v=>v.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const v of this.outputs){const y=v.sourceLayer,b=v.nodeIndex,w=v.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(w)}for(const v of this.inputs){const y=v.sourceLayer,b=v.nodeIndex,w=v.tensorIndex;rr(b===0,"input layer has >1 nodes"),rr(w===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let v=0;v<this.inputLayers.length;v++){const y=this.inputLayers[v];if(!(y instanceof Ph))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${v} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(const v of this.outputLayers)this.outputNames.push(v.name);this.internalInputShapes=this.inputs.map(v=>v.shape),this.internalOutputShapes=this.outputs.map(v=>v.shape);const e={},n={},i={},r={},o={},a=[],l=(v,y,b,w,S,C)=>{(w==null||S==null||C==null)&&(w=v.sourceLayer,S=v.nodeIndex,C=v.tensorIndex);const _=w.inboundNodes[S];if(b.indexOf(_)!==-1)throw new li(`The tensor ${v.name} at layer "${w.name}" is part of a cycle.`);if(y.indexOf(_)!==-1)return;this.containerNodes.add(Ei.nodeKey(w,S)),w.id in o||(o[w.id]=Object.keys(o).length),b.indexOf(_)===-1&&b.push(_);const I=_.inboundLayers.length;for(let T=0;T<I;T++){const N=_.inputTensors[T],P=_.inboundLayers[T],E=_.nodeIndices[T],M=_.tensorIndices[T];l(N,y,b,P,E,M)}for(y.push(_);b.indexOf(_)>=0;)b.splice(b.indexOf(_),1);a.push(_)},c=[],u=[];for(const v of this.outputs)l(v,c,u);const h=a.slice().reverse();for(const v of h){n[v.id]=v,v.id in e||(e[v.id]=0);let y=e[v.id];const b=i[v.outboundLayer.id]==null?0:i[v.outboundLayer.id];y=Math.max(y,b),i[v.outboundLayer.id]=y,r[v.outboundLayer.id]=v.outboundLayer,e[v.id]=y;for(let w=0;w<v.inboundLayers.length;w++){const S=v.inboundLayers[w],C=v.nodeIndices[w],_=S.inboundNodes[C],I=e[_.id]==null?0:e[_.id];e[_.id]=Math.max(y+1,I),n[_.id]=_}}const d={};for(const v in e){const y=e[v];y in d||(d[y]=[]),d[y].push(n[v])}const f={};for(const v in i){const y=i[v];y in f||(f[y]=[]),f[y].push(r[v])}let p=Object.keys(f).map(v=>parseInt(v,10)).sort(Nd);this.layers=[];for(const v of p){const y=f[v];y.sort((b,w)=>{const S=o[b.id],C=o[w.id];return S<C?-1:S>C?1:0});for(const b of y)b instanceof Ei&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=f,p=Object.keys(d).map(v=>parseInt(v,10)).sort(Nd);const g=this.inputs.slice(),m=[];for(const v of p)for(const y of d[v]){const b=y.outboundLayer;if(b!=null){for(const w of y.inputTensors)if(g.indexOf(w)===-1)throw new li(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${b.name}". The following previous layers were accessed without issue: ${m}`);for(const w of y.outputTensors)g.push(w);m.push(b.name)}}this.nodesByDepth=d;const x=this.layers.map(v=>v.name);for(const v of x){const y=x.filter(b=>b===v).length;if(y!==1)throw new li(`The name "${v}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new um({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(v=>null),outputMasks:this.outputs.map(v=>null),inputShapes:this.inputs.map(v=>v.shape),outputShapes:this.outputs.map(v=>v.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(n=>n.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new X("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.layers)e.push(...n.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let i=0;for(const o of this.layers)for(const a of o.weights){if(n[a.originalName]!=null)throw new X(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,i++}const r=[];for(const o in t){let a=o;if(n[o]==null){const l=o.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[a]!=null)r.push([n[a],t[o]]);else if(e)throw new X(`Provided weight data has no target variable: ${o}`);delete n[a]}if(e){const o=[];for(const a in n)o.push(a);if(o.length>0)throw new X(`${o.length} of ${i} weights are not set: ${o}`)}Mb(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${vE}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Dx(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return st(()=>{t=He(t);const n=new no;for(let i=0;i<this.inputs.length;++i)n.add(this.inputs[i],t[i]);return Vc(this.outputs,n,e)})}computeMask(t,e){return st(()=>{t=He(t);let n;return e==null?n=Ma(null,t.length):n=He(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=mf(t);if(e.length!==this.inputLayers.length)throw new X(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<e.length;a++){const l=this.inputLayers[a],c=e[a],u=l.name+"_0_0";n[u]=c}const i=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Nd);if(i.length>1)for(const a of i){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(u.id)!==-1)continue;const h=[];for(let g=0;g<c.inboundLayers.length;g++){const m=c.inboundLayers[g],x=c.nodeIndices[g],v=c.tensorIndices[g],y=`${m.name}_${x}_${v}`,b=n[y];h.push(b)}const d=u.computeOutputShape(ds(h)),f=mf(d),p=u.inboundNodes.indexOf(c);for(let g=0;g<f.length;g++){const m=`${u.name}_${p}_${g}`;n[m]=f[g]}}}const r=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;o.push(h)}for(let a=0;a<o.length;a++){const l=o[a];rr(l in n),r.push(n[l])}return ds(r)}runInternalGraph(t,e){e==null&&(e=Ma(null,t.length));const n={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],h=e[l];n[c.id]=[u,h]}const i=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Nd);for(const l of i){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,f=u.outputTensors,p=new Array;for(const g of d)g.id in n&&p.push(n[g.id]);if(p.length===d.length){let g={},m,x,v,y;if(u.callArgs!=null&&(g=u.callArgs),p.length===1){const[b,w]=p[0];g.mask==null&&(g.mask=w),v=He(h.call(b,g)),y=He(h.computeMask(b,w)),m=[b],x=[w]}else m=p.map(b=>b[0]),x=p.map(b=>b[1]),g.mask==null&&(g.mask=x),v=He(h.call(m,g)),y=He(h.computeMask(m,x));if(h.activityRegularizer)throw new le("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<f.length;++b){const w=f[b],S=v[b],C=y[b];n[w.id]=[S,C]}}}}const r=[],o=[],a=[];for(const l of this.outputs){rr(l.id in n,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=n[l.id];a.push(c.shape),r.push(c),o.push(u)}return[r,o,a]}buildNodeConversionMap(t){const e={};let n;for(const i of this.layers){n=i instanceof Ei?1:0;for(let r=0;r<i.inboundNodes.length;r++){const o=Ei.nodeKey(i,r);this.containerNodes.has(o)&&(e[o]=n,n+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new X(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new X("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new X(`No such layer: ${t}`)}calculateLosses(){return st(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const i=Ei.nodeKey(e,n);this.containerNodes.has(i)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),c=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],f=Ei.nodeKey(o,h);let p={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){const g=[];for(let m=0;m<d.inboundLayers.length;m++){const x=d.inboundLayers[m],v=d.nodeIndices[m],y=d.tensorIndices[m],b=Ei.nodeKey(x,v);let w=e[b];w==null&&(w=0),g.push([x.name,w,y,p])}c.push(g)}}}const u={};u.name=o.name,u.className=a,u.config=l,u.inboundNodes=c,n.push(u)}t.layers=n;const i=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],c=Ei.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[o];i.push([a.name,u,h])}t.inputLayers=i;const r=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=Ei.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[o];r.push([a.name,u,h])}return t.outputLayers=r,t}static fromConfig(t,e,n={},i=!1){const r={},o={};function a(m,x){m.name in o?o[m.name].push(x):o[m.name]=[x]}function l(m,x){const v=[];let y;for(const b of x){const w=b[0],S=b[1],C=b[2];if(y=b[3]==null?{}:b[3],!(w in r)){a(m,x);return}const _=r[w];if(_.inboundNodes.length<=S){a(m,x);return}const I=_.inboundNodes[S];v.push(I.outputTensors[C])}v.length>0&&m.apply(ds(v),y)}function c(m){const x=m.name,v=Or(m,e.customObjects!=null?e.customObjects:{});v.setFastWeightInitDuringBuild(i),r[x]=v,m.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new X(`Corrupted configuration, expected array for nodeData: ${b}`);a(v,b)})}const u=e.name,h=e.layers;for(const m of h)c(m);for(;!W6(o);)for(const m of h){const x=r[m.name];if(x.name in o){const v=o[x.name];delete o[x.name];for(const y of v)l(x,y)}}const d=[],f=[],p=e.inputLayers;for(const m of p){const x=m[0],v=m[1],y=m[2];rr(x in r);const w=r[x].inboundNodes[v].outputTensors;d.push(w[y])}const g=e.outputLayers;for(const m of g){const x=m[0],v=m[1],y=m[2];rr(x in r);const w=r[x].inboundNodes[v].outputTensors;f.push(w[y])}return new t({inputs:d,outputs:f,name:u})}get stateful(){if(this._stateful)throw new X("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){st(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s8(s,t,e){const n=t.length;if(s==null||Array.isArray(s)&&s.length===0)return t.map(i=>null);if(n===1)return Array.isArray(s)&&s.length===1?s:typeof s=="object"&&t[0]in s?[s[t[0]]]:[s];if(Array.isArray(s)){if(s.length!==n)throw new Error(`Provided ${e} is an array of ${s.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return s}else if(typeof s=="object"&&Object.keys(s).length>0&&typeof s[Object.keys(s)[0]]=="object"){const i=[];return t.forEach(r=>{r in s?i.push(s[r]):i.push(null)}),i}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(s)}`)}function bE(s,t){return s8(s,t,"classWeight")}async function yE(s,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){const i=st(()=>{if(s.shape.length===1)return aa(s);if(s.shape.length===2){if(s.shape[1]>1)return uu(s,1);if(s.shape[1]===1)return Q(s,[s.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${s.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${s.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await i.data());de(i);const o=[];return r.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(e[a])}),Is(o,"float32")}else return null}function i8(s,t){return q(s,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const r8=32;function wE(s,t){let e,n;const i=t;e=i.xs,n=i.ys,D(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=f_("input",s.inputNames,e),o=f_("output",s.outputNames,n),a=r[0].shape[0];D(r.length===s.inputs.length,()=>`LayersModel has ${s.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(s.inputNames)})`),D(o.length===s.outputs.length,()=>`LayersModel has ${s.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(s.outputNames)})`);for(let l=0;l<r.length;l++)D(r[l].shape[0]===a,()=>`Batch size mismatch: input ${s.inputNames[l]} has ${r[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);for(let l=0;l<o.length;l++)D(o[l].shape[0]===a,()=>`Batch size mismatch: output ${s.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${s.inputNames[0]}.`);return{xs:r,ys:o}}function f_(s,t,e){if(e instanceof Ye)return[e];if(Array.isArray(e))return D(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${s} keys ${t}.`),e;{const n=[];for(const i of t){if(e[i]==null)throw new X(`The feature data generated by the dataset lacks the required ${s} key '${i}'.`);n.push(e[i])}return n}}function o8(s){if(s.length===3)throw new le("Validation with sample weights is not implemented yet.");return{xs:s[0],ys:s[1]}}async function a8(s,t,e){const n=e.batchesPerEpoch!=null;if(D(s.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),D(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),D(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),D(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),D(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const i=e.validationData!=null;let r,o;if(i)if(p_(e.validationData))D(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const m=o8(e.validationData);r=m.xs,o=m.ys}const a=s.makeTrainFunction(),l=s.getDedupedMetricsNames();let c;i?c=l.slice().concat(l.map(m=>"val_"+m)):c=l.slice();const u=uE(e.callbacks,e.yieldEvery),h=e.verbose==null?1:e.verbose,{callbackList:d,history:f}=hE(u,h,e.epochs,null,null,l8(t,e),null,i,c);d.setModel(s),s.history=f,await d.onTrainBegin(),s.stopTraining_=!1;let p=e.initialEpoch==null?0:e.initialEpoch,g=await t.iterator();for(;p<e.epochs;){const m={};await d.onEpochBegin(p);let x=0,v=0;for(n||(g=await t.iterator());!n||x<e.batchesPerEpoch;){const y=await g.next();if(n&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){const{xs:b,ys:w}=wE(s,y.value),S={};S.batch=v,S.size=b[0].shape[0],await d.onBatchBegin(v,S);const C=[];if(e.classWeight!=null){const T=bE(e.classWeight,s.outputNames);for(let N=0;N<T.length;++N)C.push(await yE(w[N],null,T[N]))}const _=b.concat(w).concat(C),I=a(_);de(_);for(let T=0;T<l.length;++T){const N=l[T],P=I[T];S[N]=P,fr(P)}await d.onBatchEnd(v,S),cE(S),v++,x++}if(n?x>=e.batchesPerEpoch:y.done){if(i){let b;p_(e.validationData)?b=He(await s.evaluateDataset(e.validationData,{batches:e.validationBatches})):b=He(s.evaluate(r,o,{batchSize:e.validationBatchSize==null?r8:e.validationBatchSize,verbose:0}));for(let w=0;w<s.metricsNames.length;++w)m[`val_${s.metricsNames[w]}`]=b[w]}break}if(s.stopTraining_)break}if(await d.onEpochEnd(p,m),p++,s.stopTraining_)break}return await d.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}function l8(s,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(s.size)&&(e=s.size),e}function p_(s){return typeof s.iterator=="function"}function c8(s){return typeof s.next=="function"}async function u8(s,t,e){e=e||{};const n=e.batches!=null,i=s.testFunction;let r=[];if(e.verbose>0)throw new le("Verbose mode is not implemented yet.");D(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const o=c8(t)?t:await t.iterator();let a=0,l=0;for(;!n||l<e.batches;){const c=await o.next();if(r=st(()=>{if(c.value){const{xs:u,ys:h}=wE(s,c.value),d=u.concat(h),f=st(()=>i(d));if(de(d),l===0)for(let g=0;g<f.length;++g)r.push(ie(0));const p=d[0].shape[0];for(let g=0;g<f.length;++g){const m=f[g],x=r[g];r[g]=st(()=>_t(r[g],q(p,m))),l>0&&de(x)}de(f),a+=p,++l}return r}),c.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const u=r[c];r[c]=Yt(r[c],a),de(u)}return ds(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fx(s){D(s>0&&Number.isInteger(s),()=>`batchSize is required to be a positive integer, but got ${s}`)}function Wc(s,t,e){return s==null?[null]:Array.isArray(s)?s.map(n=>ua(n,t,e-t)):ua(s,t,e-t)}function Rb(s,t){return st(()=>s==null?null:Array.isArray(s)?s.map(e=>Rb(e,t)):KT(s,t.dtype==="int32"?t:Nt(t,"int32")))}function Lx(s,t){const e=[];let n=0,i=null;for(;n<s;)i=n+t,i>=s&&(i=s),e.push([n,i]),n=i;return e}async function h8(s,t,e,n,i,r,o,a,l,c,u,h,d,f,p){i==null&&(i=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let g=!1;if(l!=null&&c!=null&&(g=!0),p!=null&&(g=!0,f==null))throw new X("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=s.checkNumSamples(e,i,f,"steps_per_epoch");let x;m!=null&&(x=Wi(0,m)),o==null&&(o=1);const{callbackList:v,history:y}=hE(a,o,r,d,m,f,i,g,h);v.setModel(s),s.history=y,await v.onTrainBegin(),s.stopTraining_=!1;for(let b=d;b<r;++b){await v.onEpochBegin(b);const w={};if(f!=null)throw new le("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new le("batch shuffling is not implemneted yet");u&&Oz(x);const S=Is(x),C=Lx(m,i);for(let _=0;_<C.length;++_){const I={};if(await v.onBatchBegin(_,I),st(()=>{const T=C[_][0],N=C[_][1],P=ua(S,T,N-T);I.batch=_,I.size=N-T;const E=Rb(e,P),M=t(E);for(let A=0;A<n.length;++A){const R=n[A],V=M[A];I[R]=V,fr(V)}if(_===C.length-1&&g){const A=s.testLoop(l,c,i);for(let R=0;R<n.length;++R){const V=n[R],L=A[R];fr(L),w["val_"+V]=L}}}),await v.onBatchEnd(_,I),cE(I),s.stopTraining_)break}S.dispose()}if(await v.onEpochEnd(b,w),s.stopTraining_)break}return await v.onTrainEnd(),await s.history.syncData(),s.history}async function d8(s,t,e,n={}){if(s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;let i,r,o,a,l,c,u,h,d;try{const f=n.batchSize==null?32:n.batchSize;Fx(f);const p=!1,g=await s.standardizeUserData(t,e,n.sampleWeight,n.classWeight,p,f);i=g[0],r=g[1],d=g[2];let m=!1,x;if(n.validationData!=null&&n.validationData.length>0){if(m=!0,n.validationData.length===2)l=n.validationData[0],c=n.validationData[1];else throw n.validationData.length===3?new le("validationData including sample weights is not supported yet."):new X(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);const I=!0,T=await s.standardizeUserData(l,c,null,null,I,f);u=T[0],h=T[1],x=u.concat(h)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){m=!0;const I=Math.floor(i[0].shape[0]*(1-n.validationSplit)),T=i[0].shape[0];u=Wc(i,I,T),o=i,i=Wc(i,0,I),h=Wc(r,I,T),a=r,r=Wc(r,0,I),x=u.concat(h)}else n.validationSteps!=null&&(m=!0);const v=i.concat(r).concat(d);s.checkTrainableWeightsConsistency();const y=s.makeTrainFunction(),b=s.getDedupedMetricsNames();let w,S;m?(s.makeTestFunction(),w=s.testFunction,S=b.slice().concat(b.map(I=>"val_"+I))):(w=null,x=[],S=b.slice());const C=uE(n.callbacks,n.yieldEvery);return await h8(s,y,v,b,f,n.epochs,n.verbose,C,w,x,n.shuffle,S,n.initialEpoch,null,null)}finally{s.isTraining=!1,Ai(i,t),Ai(r,e),Ai(o,t),Ai(a,e),Ai(u,l),Ai(h,c),d!=null&&de(d)}}function _E(s){const t=[];s instanceof Ye&&(s=[s]);for(let e=0;e<s.length;++e){const n=s[e];if(n.rank===1)t.push(Dh(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function Ai(s,t){if(s==null)return;const e=[];if(t instanceof Ye)e.push(t.id);else if(Array.isArray(t))t.forEach(i=>e.push(i.id));else if(t!=null)for(const i in t){const r=t[i];e.push(r.id)}const n=[];if(s instanceof Ye)e.indexOf(s.id)===-1&&n.push(s);else if(Array.isArray(s))s.forEach(i=>{e.indexOf(i.id)===-1&&n.push(i)});else if(s!=null)for(const i in s){const r=s[i];e.indexOf(r.id)===-1&&n.push(r)}n.forEach(i=>{i.isDisposed||i.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function f8(s){return s instanceof Ye}function Px(s){return Array.isArray(s)}function m_(s){return!f8(s)&&!Px(s)}function g_(s,t,e,n=!0,i=""){if(t==null||t.length===0){if(s!=null){let o=!1;if(Px(s)&&s.length>0)o=!0;else if(m_(s)){for(const a in s)if(s.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new X(`Error when checking model ${i} expected no data, but got ${s}`)}return[]}if(s==null)return t.map(o=>null);let r;if(m_(s)){s=s,r=[];for(const o of t){if(s[o]==null)throw new X(`No data provided for "${o}". Need data for each key in: ${t}`);r.push(s[o])}}else if(Px(s)){if(s=s,s.length!==t.length)throw new X(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${s}`);r=s}else{if(s=s,t.length>1)throw new X(`The model ${i} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${s.shape}`);r=[s]}if(r=_E(r),e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new X(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u>=0&&c!==u)throw new X(`${i} expected a batch of elements where each example has shape [${e[o].slice(1,e[o].length)}] (i.e.,tensor shape [*,${e[o].slice(1,e[o].length)}]) but the ${i} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function p8(s,t,e){const n=ao(s.map(r=>r.shape[0]));n.sort();const i=ao(t.map(r=>r.shape[0]));if(i.sort(),n.length>1)throw new X(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(r=>r.shape))}`);if(i.length>1)throw new X(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(n.length>0&&i.length>0&&!ke(n,i))throw new X(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${i[0]} target sample(s).`)}function m8(s,t,e){const n=[hm,dm,fu];for(let i=0;i<s.length;++i){const r=s[i],o=t[i],a=e[i];if(o!=null){if(o===fu&&r.shape[r.shape.length-1]===1)throw new X(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(o)!==-1){const l=r.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new X(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function x_(s,t,e,n=!0,i=""){let r;if(Array.isArray(s)){if(s.length!==t.length)throw new X(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${s.length} Tensors(s).`);r=s}else{if(t.length>1)throw new X(`The model expects ${t.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(s.shape)}.`);r=[s]}if(e!=null)for(let o=0;o<t.length;++o){if(e[o]==null)continue;const a=r[o];if(a.shape.length!==e[o].length)throw new X(`Error when checking ${i}: expected ${t[o]} to have ${e[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[o].length;++l){if(l===0&&!n)continue;const c=a.shape[l],u=e[o][l];if(u!=null&&u!==c)throw new X(`Error when checking ${i}: expected ${t[o]} to have shape ${JSON.stringify(e[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function g8(s,t){if(s==null||Array.isArray(s)&&s.length===0)return t.map(n=>[]);let e;if(typeof s=="string"||typeof s=="function")e=[s];else if(Array.isArray(s)||typeof s=="object")e=s;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${s}`);if(Array.isArray(e))return t.map(n=>e);{const n=[];for(const i of t){let r=e.hasOwnProperty(i)?e[i]:[];Array.isArray(r)||(r=[r]),n.push(r)}return n}}const x8="layers-model";class $l extends Ei{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new X("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Jq(this,t,e,n)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=Zq(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Mo))throw new X("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const o in t.loss)if(this.outputNames.indexOf(o)===-1)throw new X(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)t.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),e.push(Ag(t.loss[o]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new X(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>Ag(a))}else{const o=Ag(t.loss);this.outputs.forEach(a=>{e.push(o)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ca("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const i=g8(t.metrics,this.outputNames),r=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};ca("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(n.indexOf(o)!==-1)continue;const a=i[o];(c=>{const u="";let h,d,f;for(const p of c){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const m=this.internalOutputShapes[o];m[m.length-1]===1||this.lossFunctions[o]===dm?["accuracy","acc"].indexOf(p)!==-1?d=fE:["crossentropy","ce"].indexOf(p)!==-1&&(d=Uq):this.lossFunctions[o]===yf?["accuracy","acc"].indexOf(p)!==-1?d=Vq:["crossentropy","ce"].indexOf(p)!==-1&&(d=gE):["accuracy","acc"].indexOf(p)!==-1?d=pE:["crossentropy","ce"].indexOf(p)!==-1&&(d=mE);let x;["accuracy","acc"].indexOf(p)!==-1?x="acc":["crossentropy","ce"].indexOf(p)!==-1&&(x="ce"),f=d,h=u+x}else f=Yq(p),h=u+Dd(p);let g;ca(h,()=>{g=f}),r(o,h,g)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const i=n.batchSize==null?32:n.batchSize;Fx(i);const r=!0,o=this.standardizeUserDataXY(t,e,r,i);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,i,n.verbose,n.steps);return ds(c)}finally{Ai(o[0],t),Ai(o[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),u8(this,t,e)}checkNumSamples(t,e,n,i="steps"){let r;if(n!=null){if(r=null,e!=null)throw new X(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new X(`Either the input data should have a defined shape, or ${i} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new X("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),i=n?e:[e],r=this.retrieveSymbolicTensors(i),o=new no;if(t instanceof Ye&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new X(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new X(`No value is provided for the model's input ${l.name}`);o.add(l,c)}const a=Vc(r,o);return n?a:a[0]}retrieveSymbolicTensors(t){const e=Ma(null,t.length);let n=t.length;for(const i of this.layers){const r=Array.isArray(i.output)?i.output:[i.output],o=r.map(a=>a.name);for(let a=0;a<t.length;++a){const l=o.indexOf(t[a]);if(l!==-1&&(e[a]=r[l],n--),n===0)break}if(n===0)break}if(n>0){const i=[];throw e.forEach((r,o)=>{r==null&&i.push(t[o])}),new X(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return e}predictLoop(t,e=32,n=!1){return st(()=>{const i=this.checkNumSamples(t);if(n)throw new le("Verbose predictLoop() is not implemented yet.");const r=Lx(i,e),o=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)st(()=>{const c=r[a][0],u=r[a][1],h=Wc(t,c,u),d=[];if(Array.isArray(h))for(let p=0;p<h.length;++p)d.push({key:this.inputs[p],value:h[p]});else d.push({key:this.inputs[0],value:h});const f=new no(d);return Vc(this.outputs,f)}).forEach((c,u)=>o[u].push(c));return ds(o.map(a=>Jn(a,0)))})}predict(t,e={}){const n=_E(t);x_(n,this.inputNames,this.feedInputShapes,!1);try{const i=e.batchSize==null?32:e.batchSize;return Fx(i),this.predictLoop(n,i)}finally{Ai(n,t)}}predictOnBatch(t){x_(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,i){if(this.optimizer_==null)throw new li("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===yf?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(t=g_(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=g_(e,this.feedOutputNames,r,!1,"target"),p8(t,e),m8(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&i!=null&&i>0&&t[0].shape[0]%i!==0)throw new X(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,i,r=!0,o){const[a,l]=this.standardizeUserDataXY(t,e,r,o);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(i!=null){const u=bE(i,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await yE(l[h],null,u[h]))}return[a,l,c]}testLoop(t,e,n,i=0,r){return st(()=>{const o=this.checkNumSamples(e,n,r,"steps"),a=[];if(i>0)throw new le("Verbose mode is not implemented yet.");if(r!=null)throw new le("steps mode in testLoop() is not implemented yet");{const l=Lx(o,n),c=Is(Wi(0,o));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],f=ua(c,h,d-h),p=Rb(e,f),g=t(p);if(u===0)for(let m=0;m<g.length;++m)a.push(ie(0));for(let m=0;m<g.length;++m){const x=g[m];a[m]=_t(a[m],q(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=Yt(a[u],o)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const i=t[n];let r=i;if(e_(t,i)>1){const o=e_(t.slice(0,n),i);r+=`_${o}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let g=0;g<this.inputs.length;++g)h.push({key:this.inputs[g],value:n[g]});const d=new no(h),f=Vc(this.outputs,d,{training:!0});let p;for(let g=0;g<this.lossFunctions.length;++g){const m=this.lossFunctions[g];let x=m(i[g],f[g]);r[g]!=null&&(x=i8(x,r[g]));const v=cn(x);e.push(v),g===0?p=x:p=_t(p,x)}for(let g=0;g<this.metricsTensors.length;++g){let m;if(this.outputs.length>1&&g<this.outputs.length)m=e[g];else{const x=this.metricsTensors[g][0],v=this.metricsTensors[g][1];m=cn(x(i[v],f[v]))}fr(m),o.push(m)}return p=cn(p),this.calculateLosses().forEach(g=>{p=_t(p,g)}),p},l=this.collectedTrainableWeights.map(h=>h.read()),c=!0;return[this.optimizer_.minimize(a,c,l)].concat(o)}}makeTestFunction(){this.testFunction=t=>st(()=>{const e=[];let n;const i=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:i[c]});const a=new no(o),l=Vc(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=cn(u(r[c],l[c]));c===0?n=h:n=_t(n,h),e.push(n)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=cn(u(r[h],l[h]));e.push(d)}return e})}async fit(t,e,n={}){return d8(this,t,e,n)}async fitDataset(t,e){return a8(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),i=n[0],r=n[1],a=this.makeTrainFunction()(i.concat(r)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return de(a),Ai(n[0],t),Ai(n[1],e),ds(l)}getNamedWeights(t){const e=[],n=t!=null&&t.trainableOnly,i=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let o=0;o<i.length;++o)n&&!i[o].trainable||e.push({name:i[o].originalName,tensor:r[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=yx().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-yx().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Rr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Rr(e))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const i of e)if(typeof n[i]=="string")t[i]=Rr(n[i]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Rr(Dd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Rr(Dd(t)));{const t={};for(const e in this.metrics)t[e]=Rr(Dd(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=$x(t.optimizer_config),n=Or(e);let i;if(typeof t.loss=="string")i=jo(t.loss);else if(Array.isArray(t.loss))i=t.loss.map(o=>jo(o));else if(t.loss!=null){i={};for(const o in t.loss)i[o]=jo(t.loss[o])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(o=>jo(o));else if(t.metrics!=null){r={};for(const o in t.metrics)r[o]=jo(t.metrics[o])}this.compile({loss:i,metrics:r,optimizer:n})}async save(t,e){if(typeof t=="string"){const c=NB(t);if(c.length===0)throw new X(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new X(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new X("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await L1(this.getNamedWeights(e)),i=!1,r=null,a={modelTopology:this.toJSON(r,i),format:x8,generatedBy:`TensorFlow.js tfjs-layers v${vE}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await L1(await this.optimizer.getWeights(),c);n.specs.push(...h),n.data=cI([n.data,u])}return this.userDefinedMetadata!=null&&(d_(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){d_(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}$l.className="Model";bt($l);class SE extends $l{}SE.className="Functional";bt(SE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Jl extends $l{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:lm("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new X(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Jl||t instanceof $l;let n;if(e){if(n=t,n.outputs.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new X("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new X("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=vq({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(i)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(t.inboundNodes.length!==1)throw new X(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new X("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=iE(this.outputs[0])}this.inboundNodes=[],new um({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ma(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=t.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Ae(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new $l({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new li("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new li("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new li("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new li("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},i=!1){let r,o={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new X("Legacy serialization format not supported yet.");r=e}else D(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,o=e;const a=new t(o);if(!(a instanceof Jl))throw new le(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of r){const u=Or(l,void 0,i);i&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(t){if(this.model==null)throw new X("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new X("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}Jl.className="Sequential";bt(Jl);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function v8(s){return new Jl(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class vs extends dc{getConfig(){return{}}}class CE extends vs{apply(t,e=1){return iq(t,e)}}CE.className="elu";bt(CE);class IE extends vs{apply(t){return tT(t)}}IE.className="selu";bt(IE);class TE extends vs{apply(t){return Gr(t)}}TE.className="relu";bt(TE);class EE extends vs{apply(t){return st(()=>nm(6,Gr(t)))}}EE.className="relu6";bt(EE);class ME extends vs{apply(t){return t}}ME.className="linear";bt(ME);class kE extends vs{apply(t){return fc(t)}}kE.className="sigmoid";bt(kE);class AE extends vs{apply(t){return oq(t)}}AE.className="hardSigmoid";bt(AE);class NE extends vs{apply(t){return Th(t)}}NE.className="softplus";bt(NE);class RE extends vs{apply(t){return rq(t)}}RE.className="softsign";bt(RE);class $E extends vs{apply(t){return bv(t)}}$E.className="tanh";bt($E);class $b extends vs{apply(t,e=-1){return Lv(t,e)}}$b.className="softmax";bt($b);class DE extends vs{apply(t,e=-1){return BI(t,e)}}DE.className="logSoftmax";bt(DE);class FE extends vs{apply(t,e=1){return st(()=>q(fc(q(t,e)),t))}}FE.className="swish";bt(FE);class LE extends vs{apply(t){return st(()=>q(t,bv(Th(t))))}}LE.className="mish";bt(LE);function po(s){return s.getClassName()}function Ng(s,t={}){return $h(s,ni.getMap().classNameMap,t,"activation")}function mo(s){if(s==null){const t={};return t.className="linear",t.config={},Ng(t)}if(typeof s=="string"){const t={};return t.className=s,t.config={},Ng(t)}else return s instanceof vs?s:Ng(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function b8(s){if(s!=null&&typeof s!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${s}`)}class PE extends dc{}class OE extends PE{constructor(t){super(),b8(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return st(()=>{let e=$n([1]);return this.hasL1&&(e=_t(e,Vt(q(this.l1,Nn(t))))),this.hasL2&&(e=_t(e,Vt(q(this.l2,Fh(t))))),Q(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}OE.className="L1L2";bt(OE);const v_={l1l2:"L1L2"};function Be(s){return vb(s)}function b_(s,t={}){return $h(s,ni.getMap().classNameMap,t,"regularizer")}function Je(s){if(s==null)return null;if(typeof s=="string"){const e={className:s in v_?v_[s]:s,config:{}};return b_(e)}else return s instanceof PE?s:b_(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zE extends be{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=oe(t);let n=Gr(t);return this.maxValue!=null&&(n=Bs(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}zE.className="ReLU";bt(zE);class BE extends be{constructor(t){super(t==null?{}:t),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=oe(t);return Tv(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}BE.className="LeakyReLU";bt(BE);class UE extends be{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Ze(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Je(t.alphaRegularizer),this.alphaConstraint=Tn(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new X(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Ae(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const i of this.sharedAxes)e[i-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(this.sharedAxes!=null)for(let i=1;i<t.length;++i)n[i]=t[i];this.inputSpec=[new Cn({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=oe(t),$v(t,this.alpha.read())}getConfig(){const t={alphaInitializer:tn(this.alphaInitializer),alphaRegularizer:Be(this.alphaRegularizer),alphaConstraint:In(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}UE.className="PReLU";bt(UE);class VE extends be{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new le(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=oe(t);return Qp(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}VE.className="ELU";bt(VE);class WE extends be{constructor(t){super(t==null?{}:t),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const n=oe(t);return q(n,Nt(Ws(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}WE.className="ThresholdedReLU";bt(WE);class GE extends be{constructor(t){super(t==null?{}:t),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new $b().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){const n=oe(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}GE.className="Softmax";bt(GE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dl(s,t,e){if(typeof s=="number")return Ma(s,t);if(s.length!==t)throw new X(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${s.length} elements.`);for(let n=0;n<t;++n){const i=s[n];if(!tq(i))throw new X(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(s)} including a non-integer number ${i}`)}return s}function zi(s,t,e,n,i=1){if(s==null)return s;const r=t+(t-1)*(i-1);let o;return e==="same"?o=s:o=s-r+1,Math.floor((o+n-1)/n)}function or(s,t,e,n){if(s==null)return null;if(n==="valid")s=s*t+fo([e-t,0]);else if(n==="same")s=s*t;else throw new X(`Unsupport padding mode: ${n}.`);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Db(s,t){return st(()=>(fn(t),t==="channelsFirst"?_e(s,[0,2,3,1]):s))}function HE(s,t){return st(()=>(fn(t),t==="channelsFirst"?_e(s,[0,2,3,4,1]):s))}function y8(s,t,e,n=1,i="valid",r,o=1){return st(()=>{if(r==null&&(r=Gi()),fn(r),s.shape.length!==3)throw new X(`The input of a conv1dWithBias operation should be 3, but is ${s.shape.length} instead.`);if(t.shape.length!==3)throw new X(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new X(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(s=_e(s,[0,2,1])),i==="causal")throw new le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=NI(s,t,n,i==="same"?"same":"valid","NWC",o);return e!=null&&(a=ji(a,e)),a})}function y_(s,t,e,n=[1,1],i="valid",r,o,a=null){return st(()=>{if(r==null&&(r=Gi()),fn(r),s.rank!==3&&s.rank!==4)throw new X(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${s.rank}.`);if(t.rank!==3&&t.rank!==4)throw new X(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${s.rank}.`);let l=Db(s,r);if(i==="causal")throw new le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=xG({x:l,filter:t,strides:n,pad:i==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:e,activation:a}),r==="channelsFirst"&&(l=_e(l,[0,3,1,2])),l})}function w8(s,t,e,n=[1,1,1],i="valid",r,o){return st(()=>{if(r==null&&(r=Gi()),fn(r),s.rank!==4&&s.rank!==5)throw new X(`conv3dWithBias expects input to be of rank 4 or 5, but received ${s.rank}.`);if(t.rank!==4&&t.rank!==5)throw new X(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${s.rank}.`);let a=HE(s,r);if(i==="causal")throw new le("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=AU(a,t,n,i==="same"?"same":"valid","NDHWC",o),e!=null&&(a=ji(a,e)),r==="channelsFirst"&&(a=_e(a,[0,4,1,2,3])),a})}class fm extends be{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",fm.verifyArgs(e),this.rank=t,Dn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new le(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Dl(e.kernelSize,t,"kernelSize"),this.strides=Dl(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Gs(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,fn(this.dataFormat),this.activation=mo(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=Ze(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Tn(e.biasConstraint),this.biasRegularizer=Je(e.biasRegularizer),this.activityRegularizer=Je(e.activityRegularizer),this.dilationRate=Dl(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new X(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new X(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new X(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(rr("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!bb(t.kernelSize,"number",1,3))throw new X(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:po(this.activation),useBias:this.useBias,biasInitializer:tn(this.biasInitializer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),biasConstraint:In(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class gc extends fm{constructor(t,e){super(t,e),this.kernel=null,gc.verifyArgs(e),this.filters=e.filters,Dn(this.filters,"filters"),this.kernelInitializer=Ze(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Tn(e.kernelConstraint),this.kernelRegularizer=Je(e.kernelRegularizer)}build(t){t=Ae(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],i=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return st(()=>{t=oe(t);let n;const i=this.bias==null?null:this.bias.read(),r=WT(this.activation.getClassName());if(r!=null&&this.rank===2)n=y_(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=y8(t,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=y_(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=w8(t,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new le("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(t){t=Ae(t);const e=[],n=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<n.length;++r){const o=zi(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(o)}let i=[t[0]];return this.dataFormat==="channelsLast"?(i=i.concat(e),i.push(this.filters)):(i.push(this.filters),i=i.concat(e)),i}getConfig(){const t={filters:this.filters,kernelInitializer:tn(this.kernelInitializer),kernelRegularizer:Be(this.kernelRegularizer),kernelConstraint:In(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new X(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class zh extends gc{constructor(t){super(2,t),zh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!bb(t.kernelSize,"number",1,2))throw new X(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}zh.className="Conv2D";bt(zh);class Bh extends gc{constructor(t){super(3,t),Bh.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new X(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Bh.className="Conv3D";bt(Bh);class qE extends zh{constructor(t){if(super(t),this.inputSpec=[new Cn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ae(t),t.length!==4)throw new X("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cn({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return st(()=>{let n=oe(t);if(n.shape.length!==4)throw new X(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=i[o],c=i[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],p=or(l,d,u,this.padding),g=or(c,f,h,this.padding),m=[r,p,g,this.filters];this.dataFormat!=="channelsLast"&&(n=_e(n,[0,2,3,1]));let x=RI(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=_e(x,[0,3,1,2])),this.bias!=null&&(x=ji(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Ae(t);const e=t.slice();let n,i,r;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3):(n=3,i=1,r=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[i]=or(e[i],l,o,this.padding),e[r]=or(e[r],c,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}qE.className="Conv2DTranspose";bt(qE);class XE extends Bh{constructor(t){if(super(t),this.inputSpec=[new Cn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new X(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ae(t),t.length!==5)throw new X("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new X("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],i=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Cn({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return st(()=>{let n=oe(t);if(n.shape.length!==5)throw new X(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const i=n.shape,r=i[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const c=i[l],u=i[o],h=i[a],d=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],g=this.strides[0],m=this.strides[1],x=this.strides[2],v=or(c,g,d,this.padding),y=or(u,m,f,this.padding),b=or(h,x,p,this.padding),w=[r,v,y,b,this.filters];this.dataFormat!=="channelsLast"&&(n=_e(n,[0,2,3,4,1]));let S=$U(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=_e(S,[0,4,1,2,3])),this.bias!==null&&(S=ji(S,this.bias.read(),this.dataFormat)),this.activation!==null&&(S=this.activation.apply(S)),S})}computeOutputShape(t){t=Ae(t);const e=t.slice();let n,i,r,o;this.dataFormat==="channelsFirst"?(n=1,i=2,r=3,o=4):(n=4,i=1,r=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return e[n]=this.filters,e[i]=or(e[i],u,a,this.padding),e[r]=or(e[r],h,l,this.padding),e[o]=or(e[o],d,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}XE.className="Conv3DTranspose";bt(XE);class jE extends gc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new X("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new X("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new X(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Ze(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Je(e.depthwiseRegularizer),this.depthwiseConstraint=Tn(e.depthwiseConstraint),this.pointwiseInitializer=Ze(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Je(e.pointwiseRegularizer),this.pointwiseConstraint=Tn(e.pointwiseConstraint)}build(t){if(t=Ae(t),t.length<this.rank+2)throw new X(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new X(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],i=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new Cn({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return st(()=>{t=oe(t);let n;if(this.rank===1)throw new le("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=_e(t,[0,2,3,1])),n=eT(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=ji(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=_e(n,[0,3,1,2])),n})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=tn(this.depthwiseInitializer),t.pointwiseInitializer=tn(this.pointwiseInitializer),t.depthwiseRegularizer=Be(this.depthwiseRegularizer),t.pointwiseRegularizer=Be(this.pointwiseRegularizer),t.depthwiseConstraint=In(this.depthwiseConstraint),t.pointwiseConstraint=In(this.pointwiseConstraint),t}}jE.className="SeparableConv";class KE extends jE{constructor(t){super(2,t)}}KE.className="SeparableConv2D";bt(KE);class pm extends gc{constructor(t){super(1,t),pm.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!bb(t.kernelSize,"number",1,1))throw new X(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}pm.className="Conv1D";bt(pm);class YE extends be{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return st(()=>{if(t=oe(t),this.dataFormat==="channelsLast"){const n=$d(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return $d(n,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const n=$d(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return $d(n,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}YE.className="Cropping2D";bt(YE);class ZE extends be{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,fn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,Z6(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],n=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,n]}else{const e=t[1]==null?null:this.size[0]*t[1],n=t[2]==null?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return st(()=>{let n=oe(t);const i=n.shape;if(this.dataFormat==="channelsFirst"){n=_e(n,[0,2,3,1]);const r=this.size[0]*i[2],o=this.size[1]*i[3],a=this.interpolation==="nearest"?Il.resizeNearestNeighbor(n,[r,o]):Il.resizeBilinear(n,[r,o]);return _e(a,[0,3,1,2])}else{const r=this.size[0]*i[1],o=this.size[1]*i[2];return this.interpolation==="nearest"?Il.resizeNearestNeighbor(n,[r,o]):Il.resizeBilinear(n,[r,o])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}ZE.className="UpSampling2D";bt(ZE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _8(s,t,e=[1,1],n="valid",i,r){return st(()=>{i==null&&(i=Gi()),fn(i);let o=Db(s,i);if(s.rank!==4)throw new X(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(t.rank!==4)throw new X(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=Sv(o,t,e,n==="same"?"same":"valid","NHWC",r),i==="channelsFirst"&&(o=_e(o,[0,3,1,2])),o})}class JE extends fm{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Ze(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Tn(t.depthwiseConstraint),this.depthwiseRegularizer=Je(t.depthwiseRegularizer)}build(t){if(t=Ae(t),t.length<4)throw new X(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new X(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],i=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",i,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return st(()=>{t=oe(t);let n=_8(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=ji(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(t){t=Ae(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=zi(e,this.kernelSize[0],this.padding,this.strides[0]),o=zi(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],i,r,o]:[t[0],r,o,i]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=tn(this.depthwiseInitializer),t.depthwiseRegularizer=Be(this.depthwiseRegularizer),t.depthwiseConstraint=In(this.depthwiseRegularizer),t}}JE.className="DepthwiseConv2D";bt(JE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function QE(s,t,e,n){if(Array.isArray(s)){if(t!=null||e!=null)throw new X("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=s.slice(s.length-n,s.length),s=s.slice(0,s.length-n)),s.length>1&&(t=s.slice(1,s.length)),s=s[0]}function i(r){return r==null||Array.isArray(r)?r:[r]}return t=i(t),e=i(e),{inputs:s,initialState:t,constants:e}}function t2(s,t,e,n=!1,i,r,o=!1,a=!1){return st(()=>{const l=t.shape.length;if(l<3)throw new X(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Wi(2,l));if(t=_e(t,c),r!=null)throw new le("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),i!=null&&(i=Nt(Nt(i,"bool"),"float32"),i.rank===l-1&&(i=_s(i,-1)),i=_e(i,c)),n&&(t=Ta(t,0),i!=null&&(i=Ta(i,0)));const u=[];let h,d=e;const f=t.shape[0],p=Yl(t);let g;i!=null&&(g=Yl(i));for(let x=0;x<f;++x){const v=p[x],y=st(()=>s(v,d));if(i==null)h=y[0],d=y[1];else{const b=st(()=>{const w=g[x],S=Wt(mi(w),w),C=_t(q(y[0],w),q(d[0],S)),_=d.map((I,T)=>_t(q(y[1][T],w),q(I,S)));return{output:C,newStates:_}});h=b.output,d=b.newStates}a&&u.push(h)}let m;return a&&(m=ho(u,1)),[h,m,d]})}class ko extends be{constructor(t){super(t);let e;if(t.cell==null)throw new X("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Pb({cells:t.cell}):e=t.cell,e.stateSize==null)throw new X("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Cn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Wi(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ax(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let i;if(this.returnSequences?i=[t[0],t[1],n]:i=[t[0],n],this.returnState){const r=[];for(const o of e)r.push([t[0],o]);return[i].concat(r)}else return i}computeMask(t,e){return st(()=>{Array.isArray(e)&&(e=e[0]);const n=this.returnSequences?e:null;if(this.returnState){const i=this.states.map(r=>null);return[n].concat(i)}else return n})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new le("Constants support is not implemented in RNN yet.");Ax(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Cn({shape:[e,null,...n]});const i=[t[0]].concat(t.slice(2));this.cell.build(i);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!ke(this.stateSpec.map(o=>o.shape[o.shape.length-1]),r))throw new X(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(o=>new Cn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){st(()=>{if(!this.stateful)throw new ir("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(n==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>$n([n,i])):this.states_=[$n([n,this.cell.stateSize])];else if(t==null)de(this.states_),this.keptStates!=null&&(de(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>$n([n,i])):this.states_[0]=$n([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):de(this.states_);for(let i=0;i<this.states_.length;++i){const r=t[i],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,a=[n,o];if(!ke(r.shape,a))throw new X(`State ${i} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[i]=r}}this.states_=this.states_.map(i=>fr(i.clone()))})}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=QE(t,n,i,this.numConstants);t=r.inputs,n=r.initialState,i=r.constants;let o=[],a=[];if(n!=null){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const c of n)this.stateSpec.push(new Cn({shape:c.shape}));a=a.concat(this.stateSpec)}if(i!=null&&(e.constants=i,o=o.concat(i),this.numConstants=i.length),o[0]instanceof ar){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return st(()=>{const n=e==null?null:e.mask,i=e==null?null:e.training;let r=e==null?null:e.initialState;t=oe(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new X(`RNN Layer has ${o} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:i},c=t2((p,g)=>{const m=this.cell.call([p].concat(g),a);return[m[0],m.slice(1)]},t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,i);const f=this.returnSequences?h:u;return this.returnState?[f].concat(d):f})}getInitialState(t){return st(()=>{let e=$n(t.shape);return e=Vt(e,[1,2]),e=Dh(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Mx(e,[1,n]):e):this.cell.stateSize>1?[Mx(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===ko.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){const i=e.cell,r=Or(i,n);return new t(Object.assign(e,{cell:r}))}}ko.className="RNN";bt(ko);class mm extends be{}class Fb extends mm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Dn(this.units,"units"),this.activation=mo(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ze(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ze(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ze(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Je(t.kernelRegularizer),this.recurrentRegularizer=Je(t.recurrentRegularizer),this.biasRegularizer=Je(t.biasRegularizer),this.kernelConstraint=Tn(t.kernelConstraint),this.recurrentConstraint=Tn(t.recurrentConstraint),this.biasConstraint=Tn(t.biasConstraint),this.dropout=Zl([1,fo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Zl([1,fo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ae(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return st(()=>{if(t=t,t.length!==2)throw new X(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const i=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=go({ones:()=>mi(t),rate:this.dropout,training:i,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=go({ones:()=>mi(n),rate:this.recurrentDropout,training:i,dropoutFunc:this.dropoutFunc}));let r;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?r=dr(q(t,o),this.kernel.read()):r=dr(t,this.kernel.read()),this.bias!=null&&(r=ji(r,this.bias.read())),a!=null&&(n=q(n,a));let l=_t(r,dr(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:po(this.activation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Be(this.kernelRegularizer),recurrentRegularizer:Be(this.recurrentRegularizer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),kernelConstraint:In(this.kernelConstraint),recurrentConstraint:In(this.recurrentConstraint),biasConstraint:In(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Fb.className="SimpleRNNCell";bt(Fb);class e2 extends ko{constructor(t){t.cell=new Fb(t),super(t)}call(t,e){return st(()=>{this.cell.dropoutMask!=null&&(de(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(de(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return new t(e)}}e2.className="SimpleRNN";bt(e2);class Lb extends mm{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new X("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Dn(this.units,"units"),this.activation=mo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=mo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ze(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ze(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ze(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Je(t.kernelRegularizer),this.recurrentRegularizer=Je(t.recurrentRegularizer),this.biasRegularizer=Je(t.biasRegularizer),this.kernelConstraint=Tn(t.kernelConstraint),this.recurrentConstraint=Tn(t.recurrentConstraint),this.biasConstraint=Tn(t.biasConstraint),this.dropout=Zl([1,fo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Zl([1,fo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ae(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return st(()=>{if(t=t,t.length!==2)throw new X(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training==null?!1:e.training;let i=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=go({ones:()=>mi(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=go({ones:()=>mi(i),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(t=q(t,r[0]));let u=dr(t,this.kernel.read());this.useBias&&(u=ji(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=q(i,o[0]));const h=this.recurrentKernel.read(),[d,f]=zs(h,[2*this.units,this.units],h.rank-1),p=dr(i,d),[g,m,x]=zs(u,3,u.rank-1),[v,y]=zs(p,2,p.rank-1);a=this.recurrentActivation.apply(_t(g,v)),l=this.recurrentActivation.apply(_t(m,y));const b=dr(q(l,i),f);c=this.activation.apply(_t(x,b));const w=_t(q(a,i),q(_t(1,nn(a)),c));return[w,w]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:po(this.activation),recurrentActivation:po(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Be(this.kernelRegularizer),recurrentRegularizer:Be(this.recurrentRegularizer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),kernelConstraint:In(this.kernelConstraint),recurrentConstraint:In(this.recurrentConstraint),biasConstraint:In(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Lb.className="GRUCell";bt(Lb);class n2 extends ko{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Lb(t),super(t)}call(t,e){return st(()=>{this.cell.dropoutMask!=null&&(de(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(de(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}n2.className="GRU";bt(n2);class gm extends mm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Dn(this.units,"units"),this.activation=mo(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=mo(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=Ze(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ze(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ze(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Je(t.kernelRegularizer),this.recurrentRegularizer=Je(t.recurrentRegularizer),this.biasRegularizer=Je(t.biasRegularizer),this.kernelConstraint=Tn(t.kernelConstraint),this.recurrentConstraint=Tn(t.recurrentConstraint),this.biasConstraint=Tn(t.biasConstraint),this.dropout=Zl([1,fo([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Zl([1,fo([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Ae(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let i;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,o=this.units;i=new(e=class extends yi{apply(l,c){const u=r.apply([o]),h=new wb().apply([o]),d=r.apply([o*2]);return s_(s_(u,h),d)}},e.className="CustomInit",e)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return st(()=>{const n=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new X(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let i=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=go({ones:()=>mi(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=go({ones:()=>mi(i),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(t=q(t,o[0]));let d=dr(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=q(i,a[0])),d=_t(d,dr(i,this.recurrentKernel.read())),this.useBias&&(d=ji(d,this.bias.read()));const[f,p,g,m]=zs(d,4,d.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(p),u=_t(q(c,r),q(l,this.activation.apply(g))),h=this.recurrentActivation.apply(m);const x=q(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:po(this.activation),recurrentActivation:po(this.recurrentActivation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),recurrentInitializer:tn(this.recurrentInitializer),biasInitializer:tn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Be(this.kernelRegularizer),recurrentRegularizer:Be(this.recurrentRegularizer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),kernelConstraint:In(this.kernelConstraint),recurrentConstraint:In(this.recurrentConstraint),biasConstraint:In(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}gm.className="LSTMCell";bt(gm);class s2 extends ko{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new gm(t),super(t)}call(t,e){return st(()=>{this.cell.dropoutMask!=null&&(de(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(de(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}s2.className="LSTM";bt(s2);class Pb extends mm{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return st(()=>{t=t;let n=t.slice(1);const i=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?i.push(n.splice(0,a.stateSize.length)):i.push(n.splice(0,1));i.reverse();const r=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];n=i[a],a===0?o=[t[0]].concat(n):o=[o[0]].concat(n),o=l.call(o,e),r.push(o.slice(1))}n=[];for(const a of r.slice().reverse())n.push(...a);return[o[0]].concat(n)})}build(t){Ax(t)&&(t=t[0]),t=t;let e;this.cells.forEach((n,i)=>{ca(`RNNCell_${i}`,()=>{n.build(t),Array.isArray(n.stateSize)?e=n.stateSize[0]:e=n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),i={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),i)}static fromConfig(t,e,n={}){const i=[];for(const r of e.cells)i.push(Or(r,n));return new t({cells:i})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const n of this.cells)e.push(...n.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Nx(t)}setWeights(t){const e=[];for(const n of this.cells){const i=n.weights.length,r=t.splice(i);for(let o=0;o<n.weights.length;++o)e.push([n.weights[o],r[o]])}Mb(e)}}Pb.className="StackedRNNCells";bt(Pb);function go(s){const{ones:t,rate:e,training:n=!1,count:i=1,dropoutFunc:r}=s,o=()=>r!=null?r(t(),e):YT(t(),e),a=()=>Lh(o,t,n);return!i||i<=1?fr(a().clone()):Array(i).fill(void 0).map(a).map(c=>fr(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var S8=globalThis&&globalThis.__rest||function(s,t){var e={};for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&t.indexOf(n)<0&&(e[n]=s[n]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,n=Object.getOwnPropertySymbols(s);i<n.length;i++)t.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(s,n[i])&&(e[n[i]]=s[n[i]]);return e};class i2 extends ko{constructor(t){if(t.unroll)throw new le("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new le("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Cn({ndim:5})]}call(t,e){return st(()=>{if(this.cell.dropoutMask!=null&&(de(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(de(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new X("ConvRNN2D cell does not support constants");const n=e==null?null:e.mask,i=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:n,training:i,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return st(()=>{const{stateSize:e}=this.cell,n=t.shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)],o=$n(r);return Array.isArray(e)?Array(e.length).fill(o):[o]})}resetStates(t,e=!1){st(()=>{if(!this.stateful)throw new ir("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,i=this.computeSingleOutputShape(n),r=[i[0],...i.slice(2)];if(n[0]==null)throw new X("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$n(r)):this.states_=[$n(r)];else if(t==null)de(this.states_),this.keptStates!=null&&(de(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>$n(r)):this.states_[0]=$n(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new X(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):de(this.states_);for(let a=0;a<this.states_.length;++a){const l=t[a],c=r;if(!ke(l.shape,c))throw new X(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>fr(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:i,padding:r,strides:o,dilationRate:a}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],h=zi(c,i[0],r,o[0],a[0]),d=zi(u,i[1],r,o[1],a[1]);return[...t.slice(0,2),...l?[n,h,d]:[h,d,n]]}}i2.className="ConvRNN2D";class Ob extends gm{constructor(t){const{filters:e,kernelSize:n,strides:i,padding:r,dataFormat:o,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Dn(this.filters,"filters"),this.kernelSize=Dl(n,2,"kernelSize"),this.kernelSize.forEach(l=>Dn(l,"kernelSize")),this.strides=Dl(i||1,2,"strides"),this.strides.forEach(l=>Dn(l,"strides")),this.padding=r||"valid",Gs(this.padding),this.dataFormat=o||"channelsLast",fn(this.dataFormat),this.dilationRate=Dl(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>Dn(l,"dilationRate"))}build(t){var e;t=Ae(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new X(`The channel dimension of the input should be defined. Found ${t[n]}`);const i=t[n],r=4,o=this.kernelSize.concat([i,this.filters*r]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends yi{apply(d,f){const p=c.apply([u]),g=To([u]),m=c.apply([u*2]);return yb([p,g,m])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return st(()=>{if(t.length!==3)throw new X(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,i=t[0],r=t[1],o=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=go({ones:()=>mi(i),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(U,H,W)=>!H||!H[W]?U:q(H[W],U);let u=c(i,l,0),h=c(i,l,1),d=c(i,l,2),f=c(i,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=go({ones:()=>mi(r),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let g=c(r,p,0),m=c(r,p,1),x=c(r,p,2),v=c(r,p,3);const y=3,[b,w,S,C]=zs(this.kernel.read(),a,y),[_,I,T,N]=this.useBias?zs(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,b,_,this.padding),h=this.inputConv(h,w,I,this.padding),d=this.inputConv(d,S,T,this.padding),f=this.inputConv(f,C,N,this.padding);const[P,E,M,A]=zs(this.recurrentKernel.read(),a,y);g=this.recurrentConv(g,P),m=this.recurrentConv(m,E),x=this.recurrentConv(x,M),v=this.recurrentConv(v,A);const R=this.recurrentActivation.apply(_t(u,g)),V=this.recurrentActivation.apply(_t(h,m)),L=_t(q(V,o),q(R,this.activation.apply(_t(d,x)))),$=q(this.recurrentActivation.apply(_t(f,v)),this.activation.apply(L));return[$,$,L]})}getConfig(){const t=super.getConfig(),e=S8(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),n)}inputConv(t,e,n,i){const r=Ca(t,e,this.strides,i||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?ji(r,n,this.dataFormat):r}recurrentConv(t,e){return Ca(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Ob.className="ConvLSTM2DCell";bt(Ob);class r2 extends i2{constructor(t){const e=new Ob(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}r2.className="ConvLSTM2D";bt(r2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zb extends be{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,n=[];for(let i=0;i<this.noiseShape.length;++i)n.push(this.noiseShape[i]==null?e[i]:this.noiseShape[i]);return n}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=oe(t);if(0<this.rate&&this.rate<1){const i=e.training==null?!1:e.training,r=this.getNoiseShape(n);return Lh(()=>YT(n,this.rate,r,this.seed),()=>n,i)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}zb.className="Dropout";bt(zb);class o2 extends zb{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}o2.className="SpatialDropout1D";bt(o2);class Bb extends be{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Dn(this.units,"units"),this.activation=mo(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=Ze(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ze(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Tn(t.kernelConstraint),this.biasConstraint=Tn(t.biasConstraint),this.kernelRegularizer=Je(t.kernelRegularizer),this.biasRegularizer=Je(t.biasRegularizer),this.activityRegularizer=Je(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Ae(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Ae(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=oe(t),i=WT(this.activation.getClassName());let r;return i!=null?r=dr(n,this.kernel.read(),i,this.bias?this.bias.read():null):(r=dr(n,this.kernel.read()),this.bias!=null&&(r=ji(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:po(this.activation),useBias:this.useBias,kernelInitializer:tn(this.kernelInitializer),biasInitializer:tn(this.biasInitializer),kernelRegularizer:Be(this.kernelRegularizer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),kernelConstraint:In(this.kernelConstraint),biasConstraint:In(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Bb.className="Dense";bt(Bb);class a2 extends be{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Ae(t);for(const e of t.slice(1))if(e==null)throw new X(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],lo(t,1)]}call(t,e){return st(()=>{this.invokeCallHook(t,e);let n=oe(t);if(this.dataFormat==="channelsFirst"&&n.rank>1){const i=[0];for(let r=2;r<n.rank;++r)i.push(r);i.push(1),n=_e(n,i)}return sq(n)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}a2.className="Flatten";bt(a2);class l2 extends be{constructor(t){super(t),this.supportsMasking=!0,this.activation=mo(t.activation)}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=oe(t);return this.activation.apply(n)})}getConfig(){const t={activation:po(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}l2.className="Activation";bt(l2);class c2 extends be{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return st(()=>(t=oe(t),eq(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}c2.className="RepeatVector";bt(c2);class u2 extends be{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",i=e.slice();let r=1,o=null;for(let l=0;l<i.length;++l){const c=i[l];if(this.isUnknown(c))if(o===null)o=l;else throw new X("Can only specifiy one unknown dimension.");else r*=c}const a=lo(t);if(o!==null){if(r===0||a%r!==0)throw new X(n);i[o]=a/r}else if(a!==r)throw new X(n);return i}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=oe(t),i=n.shape,r=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return Q(n,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}u2.className="Reshape";bt(u2);class h2 extends be{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Wi(1,t.dims.length+1);if(!ke(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Cn({ndim:this.dims.length+1})]}computeOutputShape(t){t=Ae(t);const e=t.slice();return this.dims.forEach((n,i)=>{e[i+1]=t[n]}),e}call(t,e){return _e(oe(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}h2.className="Permute";bt(h2);class d2 extends be{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=oe(t),i=-1;return _x(hu(n,this.maskValue),i)}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=oe(t),i=-1,r=!0,o=_x(hu(n,this.maskValue),i,r);return q(n,Nt(o,n.dtype))})}}d2.className="Masking";bt(d2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class f2 extends be{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(He(t.inputLength))}this.inputDim=t.inputDim,Dn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Dn(this.outputDim,"outputDim"),this.embeddingsInitializer=Ze(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Je(t.embeddingsRegularizer),this.activityRegularizer=Je(t.activityRegularizer),this.embeddingsConstraint=Tn(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return st(()=>this.maskZero?(t=oe(t),hu(t,Ce(t))):null)}computeOutputShape(t){if(t=Ae(t),this.inputLength==null)return[...t,this.outputDim];const e=He(this.inputLength);if(e.length!==t.length-1)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let i=0;i<e.length;++i){const r=e[i],o=t[i+1];if(r!=null&&o!=null&&r!==o)throw new X(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return st(()=>{this.invokeCallHook(t,e);let n=oe(t);n.dtype!=="int32"&&(n=Ba(n,"int32"));const i=KT(this.embeddings.read(),Q(n,[n.size]));return Q(i,Ae(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:tn(this.embeddingsInitializer),embeddingsRegularizer:Be(this.embeddingsRegularizer),activityRegularizer:Be(this.activityRegularizer),embeddingsConstraint:In(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}f2.className="Embedding";bt(f2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ua extends be{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new le}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const n=t.slice(0,t.length-e.length);for(let i=0;i<e.length;++i){const r=t[t.length-e.length+i],o=e[i];if(r==null||o==null||r<0||o<0)n.push(null);else if(r===1)n.push(o);else if(o===1)n.push(r);else{if(r!==o)throw new X("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Ae(t)]),t=t,t.length<2)throw new X(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=ao(e),e.length>1)throw new X(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,o)}const i=t.map(r=>r.length);t.indexOf(null)===-1&&ao(i).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return st(()=>{if(t=t,this.reshapeRequired){const n=[],i=t.map(r=>r.rank);if(i.indexOf(null)===-1){const r=fo(i);for(let o of t){const a=o.rank;for(let l=0;l<r-a;++l)o=Dh(o,1);n.push(o)}return this.mergeFunction(n)}else{let r=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let f=Q(l,[h].concat(lo(u.slice(1))));f=_e(f,[1,0]),f=Q(f,d),n.push(f),r=!0}else if(c>1){const u=Wi(1,c).concat([0]);n.push(_e(l,u)),r=!0}else n.push(l)}let o=this.mergeFunction(n);const a=o.rank;if(r){if(a==null){const l=o.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));o=Q(_e(Q(o,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(Wi(0,a-1));o=_e(o,l)}}return o}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let i=1;i<t.length;++i){const r=t[i]==null?null:t[i].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const i of t)i!=null&&i[0]!==null&&n.push(i[0]);return n=ao(n),n.length===1?e=n.concat(e):e=[null].concat(e),e}computeMask(t,e){return st(()=>{if(e==null)return null;if(!Array.isArray(e))throw new X("`mask` should be an Array");if(!Array.isArray(t))throw new X("`inputs` should be an Array");if(e.length!==t.length)throw new X(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(i=>i==null))return null;e=e.map(i=>i==null?i:_s(i,0));let n=e[0];for(let i=1;i<e.length-1;++i)n=zr(n,e[i]);return n})}}class p2 extends Ua{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=_t(e,t[n]);return e})}}p2.className="Add";bt(p2);class m2 extends Ua{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=q(e,t[n]);return e})}}m2.className="Multiply";bt(m2);class g2 extends Ua{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=_t(e,t[n]);return q(1/t.length,e)})}}g2.className="Average";bt(g2);class x2 extends Ua{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Io(e,t[n]);return e})}}x2.className="Maximum";bt(x2);class v2 extends Ua{constructor(t){super(t)}mergeFunction(t){return st(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=nm(e,t[n]);return e})}}v2.className="Minimum";bt(v2);class b2 extends Ua{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new X("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const i of t)if(i!=null){e=!1;break}if(e)return;const n=[];for(let i=0;i<t.length;++i){const r=t[i].slice();r.splice(this.axis,1);let o=!1;for(const a of n)if(ke(a,r)){o=!0;break}o||n.push(r)}if(n.length>1)throw new X("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return st(()=>yb(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new X("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),i=this.axis<0?n.length+this.axis:this.axis;for(const r of e.slice(1)){if(n[i]==null||r[i]==null){n[i]=null;break}n[i]+=r[i]}return n}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new X("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new X("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new X(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return st(()=>{let n=!0;if(e.forEach(o=>{if(o!=null){n=!1;return}}),n)return null;const i=[];for(let o=0;o<t.length;++o)e[o]==null?i.push(Nt(mi(t[o]),"bool")):e[o].rank<t[o].rank?i.push(_s(e[o],-1)):i.push(e[o]);const r=Jn(i,this.axis);return AI(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}b2.className="Concatenate";bt(b2);function Lc(s,t){for(;s<0;)s+=t;return s}function C8(s,t,e){if(s.shape.length>3||t.shape.length>3)throw new le("batchDot is not implemented for tensors of 4D or higher rank yet");if(D(s.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${s.shape.length}`),D(s.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),s.dtype==="complex64"||t.dtype==="complex64")throw new le("batchDot is not implemented for complex64-type Tensors yet.");const n=s.shape.length,i=t.shape.length;e==null&&(e=[n-1,i-2]);const r=e;return st(()=>{let o;if(n>i){o=n-i;const l=[];for(let c=0;c<o;++c)l.push(1);t=Q(t,t.shape.concat(l))}else if(i>n){o=i-n;const l=[];for(let c=0;c<o;++c)l.push(1);s=Q(s,s.shape.concat(l))}else o=0;let a;if(s.shape.length===2&&t.shape.length===2)r[0]===r[1]?a=Vt(q(s,t),r[0]):a=Vt(q(_e(s,[1,0]),t),r[1]);else{const l=r[0]!==s.shape.length-1,c=r[1]===t.shape.length-1;a=Me(s,t,l,c)}if(o>0){let l;n>i?l=n+i-3:l=n-1;const c=[];for(let u=l;u<l+o;++u)c.push(u);a=Mh(a,c)}return a.shape.length===1&&(a=_s(a,1)),a})}class y2 extends Ua{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){D(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new le("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);if(e[i[0]]!==n[i[1]])throw new X(`Dimension incompatibility: ${e[i[0]]} !== ${n[i[1]]}`)}mergeFunction(t){if(t.length!==2)throw new X(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],n=t[1],i;return Array.isArray(this.axes)?i=this.axes.map((r,o)=>Lc(r,t[o].shape.length)):i=[Lc(this.axes,e.shape.length),Lc(this.axes,n.shape.length)],this.normalize&&(e=bf(e,i[0]),n=bf(n,i[1])),C8(e,n,i)}interpretAxes(t,e){let n;return Array.isArray(this.axes)?n=this.axes:n=[Lc(this.axes,t.length),Lc(this.axes,e.length)],n}computeOutputShape(t){D(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new le("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(e,n);e.splice(i[0],1),n.splice(i[1],1),n.splice(0,1);const r=e.concat(n);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}y2.className="Dot";bt(y2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class w2 extends be{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=oe(t);return Lh(()=>_t(cm(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}}w2.className="GaussianNoise";bt(w2);class _2 extends be{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return st(()=>{this.invokeCallHook(t,e);const n=oe(t);return this.rate>0&&this.rate<1?Lh(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return q(n,cm(n.shape,1,r))},()=>n,e.training||!1):n})}}_2.className="GaussianDropout";bt(_2);class S2 extends be{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||oe(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return st(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Lh(()=>{const r=oe(t),o=1.6732632423543772,a=1.0507009873554805,l=-o*a;let c=Pa(sm(n),this.rate);c=Ba(c,"float32");const u=((1-this.rate)*(1+this.rate*l**2))**-.5,h=-u*l*this.rate,d=_t(q(r,c),q(_t(c,-1),l));return _t(q(d,u),h)},()=>oe(t),e.training||!1)}return t})}}S2.className="AlphaDropout";bt(S2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pu(s,t,e,n,i,r=.001){let o;if(s.rank===2)o=oU(s,t,e,n,i,r);else if(s.rank===3)o=lU(s,t,e,n,i,r);else if(s.rank===4)o=uU(s,t,e,n,i,r);else throw new le(`batchNormalization is not implemented for array of rank ${s.rank} yet`);return o}function I8(s,t,e,n,i=.001){return st(()=>{const r=Av(s,n),o=r.mean,a=r.variance;return[pu(s,o,a,e,t,i),o,a]})}function T8(s,t,e,n,i=.001){return st(()=>{const r=Av(s,n),o=r.mean,a=r.variance,l=[];for(const p of Wi(0,s.rank))n.indexOf(p)!==-1?l.push(1):l.push(s.shape[p]);const c=Q(o,l),u=Q(a,l),h=t==null?null:Q(t,l),d=e==null?null:Q(e,l);return[pu(s,c,u,d,h,i),o,a]})}function E8(s,t,e,n,i=.001){return ke(n.slice().sort(),Wi(0,s.rank-1))?I8(s,t,e,n,i):T8(s,t,e,n,i)}class C2 extends be{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ze(t.betaInitializer||"zeros"),this.gammaInitializer=Ze(t.gammaInitializer||"ones"),this.movingMeanInitializer=Ze(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ze(t.movingVarianceInitializer||"ones"),this.betaConstraint=Tn(t.betaConstraint),this.gammaConstraint=Tn(t.gammaConstraint),this.betaRegularizer=Je(t.betaRegularizer),this.gammaRegularizer=Je(t.gammaRegularizer)}build(t){t=Ae(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(n==null)throw new X(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Cn({ndim:t.length,axes:{[e]:n}})];const i=[n];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return st(()=>{const n=e.training==null?!1:e.training,i=oe(t),r=i.shape,o=r.length,a=Wi(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const c=Ma(1,o);c[l]=r[l];const u=a.slice();u.sort();const h=!ke(u,Wi(0,o).slice(0,o-1)),d=()=>{if(h){const v=Q(this.movingMean.read(),c),y=Q(this.movingVariance.read(),c),b=this.center?Q(this.beta.read(),c):null,w=this.scale?Q(this.gamma.read(),c):null;return pu(i,v,y,b,w,this.epsilon)}else return pu(i,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();const[f,p,g]=E8(i,this.gamma.read(),this.beta.read(),a,this.epsilon),m=(v,y,b)=>{st(()=>{const w=1-b,S=v.read(),C=q(Wt(S,y),w);v.write(Wt(S,C))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,g,this.momentum)})(),f})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tn(this.betaInitializer),gammaInitializer:tn(this.gammaInitializer),movingMeanInitializer:tn(this.movingMeanInitializer),movingVarianceInitializer:tn(this.movingVarianceInitializer),betaRegularizer:Be(this.betaRegularizer),gammaRegularizer:Be(this.gammaRegularizer),betaConstraint:In(this.betaConstraint),gammaConstraint:In(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}C2.className="BatchNormalization";bt(C2);class I2 extends be{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=Ze(t.betaInitializer||"zeros"),this.gammaInitializer=Ze(t.gammaInitializer||"ones"),this.betaRegularizer=Je(t.betaRegularizer),this.gammaRegularizer=Je(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Ae(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ao(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(r=>t[r]),i=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,i):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,i):this.beta=null,this.built=!0}call(t,e){const n=oe(t),i=n.shape,r=i.length;return st(()=>{let{mean:a,variance:l}=Av(n,this.axis,!0);const c=Ma(1,r);for(const g of this.axis)c[g]=i[g];const u=g=>g!=null&&g.shape.length!==r?Q(g,c):g;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const f=[],p=[];for(let g=0;g<r;++g)this.axis.indexOf(g)!==-1?(f.push(i[g]),p.push(1)):(f.push(1),p.push(i[g]));return a=Di(a,f),l=Di(l,f),h!=null&&(h=Di(h,p)),d!=null&&(d=Di(d,p)),pu(n,a,l,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:tn(this.betaInitializer),gammaInitializer:tn(this.gammaInitializer),betaRegularizer:Be(this.betaRegularizer),gammaRegularizer:Be(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}I2.className="LayerNormalization";bt(I2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function M8(s,t,e){return st(()=>{if(s.rank!==4)throw new X(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new X("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Gi()),e!=="channelsLast"&&e!=="channelsFirst")throw new X(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],Nv(s,n)})}class T2 extends be{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Gi():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new X(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new X(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new X(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Cn({ndim:4})]}computeOutputShape(t){t=Ae(t);let e,n;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?n=t[3]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],t[1],e,n]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?n=t[2]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],e,n,t[3]])}call(t,e){return st(()=>M8(oe(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}T2.className="ZeroPadding2D";bt(T2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xm(s,t,e,n,i,r){return st(()=>{fn(i),HT(r),Gs(n),e==null&&(e=[1,1]),n==null&&(n="valid"),i==null&&(i=Gi()),r==null&&(r="max"),s=Db(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=kv(s,t,e,a):o=vv(s,t,e,a),i==="channelsFirst"&&(o=_e(o,[0,3,1,2])),o})}function E2(s,t,e,n,i,r){return st(()=>{fn(i),HT(r),Gs(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),i==null&&(i=Gi()),r==null&&(r="max"),s=HE(s,i);let o;const a=n==="same"?"same":"valid";return r==="max"?o=qV(s,t,e,a):o=Z4(s,t,e,a),i==="channelsFirst"&&(o=_e(o,[0,4,1,2,3])),o})}class M2 extends be{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new X(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Dn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new X(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Dn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Gs(this.padding),this.inputSpec=[new Cn({ndim:3})]}computeOutputShape(t){t=Ae(t);const e=zi(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return st(()=>{this.invokeCallHook(t,e),t=Dh(oe(t),2);const n=this.poolingFunction(oe(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Mh(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class k2 extends M2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return fn(r),Gs(i),xm(t,e,n,i,r,"max")}}k2.className="MaxPooling1D";bt(k2);class A2 extends M2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return fn(r),Gs(i),xm(t,e,n,i,r,"avg")}}A2.className="AveragePooling1D";bt(A2);class N2 extends be{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new X(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Dn(this.poolSize,"poolSize"),Dn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,fn(this.dataFormat),Gs(this.padding),this.inputSpec=[new Cn({ndim:4})]}computeOutputShape(t){t=Ae(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=zi(e,this.poolSize[0],this.padding,this.strides[0]),n=zi(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return st(()=>(this.invokeCallHook(t,e),this.poolingFunction(oe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class R2 extends N2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return fn(r),Gs(i),xm(t,e,n,i,r,"max")}}R2.className="MaxPooling2D";bt(R2);class $2 extends N2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return fn(r),Gs(i),xm(t,e,n,i,r,"avg")}}$2.className="AveragePooling2D";bt($2);class D2 extends be{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new X(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Dn(this.poolSize,"poolSize"),Dn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,fn(this.dataFormat),Gs(this.padding),this.inputSpec=[new Cn({ndim:5})]}computeOutputShape(t){t=Ae(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],i=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=zi(e,this.poolSize[0],this.padding,this.strides[0]),n=zi(n,this.poolSize[1],this.padding,this.strides[1]),i=zi(i,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n,i]:[t[0],e,n,i,t[4]]}call(t,e){return st(()=>(this.invokeCallHook(t,e),this.poolingFunction(oe(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class F2 extends D2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return fn(r),Gs(i),E2(t,e,n,i,r,"max")}}F2.className="MaxPooling3D";bt(F2);class L2 extends D2{constructor(t){super(t)}poolingFunction(t,e,n,i,r){return fn(r),Gs(i),E2(t,e,n,i,r,"avg")}}L2.className="AveragePooling3D";bt(L2);class P2 extends be{constructor(t){super(t),this.inputSpec=[new Cn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new le}}class O2 extends P2{constructor(t){super(t||{})}call(t,e){return st(()=>{const n=oe(t);return cn(n,1)})}}O2.className="GlobalAveragePooling1D";bt(O2);class z2 extends P2{constructor(t){super(t||{})}call(t,e){return st(()=>{const n=oe(t);return Oi(n,1)})}}z2.className="GlobalMaxPooling1D";bt(z2);class B2 extends be{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,fn(this.dataFormat),this.inputSpec=[new Cn({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new le}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class U2 extends B2{call(t,e){return st(()=>{const n=oe(t);return this.dataFormat==="channelsLast"?cn(n,[1,2]):cn(n,[2,3])})}}U2.className="GlobalAveragePooling2D";bt(U2);class V2 extends B2{call(t,e){return st(()=>{const n=oe(t);return this.dataFormat==="channelsLast"?Oi(n,[1,2]):Oi(n,[2,3])})}}V2.className="GlobalMaxPooling2D";bt(V2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class W2 extends be{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const i=e.layer,r=Or(i,n);delete e.layer;const o={layer:r};return Object.assign(o,e),new t(o)}}class G2 extends W2{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Ae(t),t.length<3)throw new X(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Ae(t);const e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),i=t[1];return[n[0],i].concat(n.slice(1))}call(t,e){return st(()=>(t=oe(t),t2((o,a)=>[oe(this.layer.call(o,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}G2.className="TimeDistributed";bt(G2);function k8(s){za(Y6,"BidirectionalMergeMode",s)}const A8="concat";class H2 extends W2{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Or(n),e.goBackwards=e.goBackwards!==!0;const i={};if(i.className=t.layer.getClassName(),i.config=e,this.backwardLayer=Or(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?A8:t.mergeMode,k8(this.mergeMode),t.weights)throw new le("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let n,i,r;return this.returnState&&(r=e.slice(1)),n=e[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,i=[n]):this.mergeMode==null?i=[n,n.slice()]:i=[n],this.returnState?this.mergeMode==null?i.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):ds(i)}apply(t,e){let n=e==null?null:e.initialState,i=e==null?null:e.constants;e==null&&(e={});const r=QE(t,n,i,this.numConstants);if(t=r.inputs,n=r.initialState,i=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(n==null||n.length===0)&&i==null)return super.apply(t,e);const o=[],a=[];if(n!=null){const c=n.length;if(c%2>0)throw new X("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const u=n.map(h=>new Cn({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(i!=null)throw new le("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof ar;for(const c of o)if(c instanceof ar!==l)throw new X("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,e);return this.inputSpec=h,d}else return super.apply(t,e)}call(t,e){return st(()=>{const n=e.initialState;let i,r;if(n==null)i=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const l=n.slice(0,n.length/2),c=n.slice(n.length/2);i=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let o;this.returnState&&(Array.isArray(i)&&(o=i.slice(1).concat(r.slice(1))),i=i[0],r=r[0]),this.returnSequences&&(r=Ta(r,1));let a;return this.mergeMode==="concat"?a=yb([i,r]):this.mergeMode==="sum"?a=_t(i,r):this.mergeMode==="ave"?a=q(.5,_t(i,r)):this.mergeMode==="mul"?a=q(i,r):this.mergeMode==null&&(a=[i,r]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){ca(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),ca(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[e,e]:n=e:this.mergeMode==null?n=[null,null]:n=null,this.returnState){const r=this.forwardLayer.states.map(o=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Or(e.layer);if(delete e.layer,e.numConstants!=null)throw new le("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=e;return i.layer=n,new t(i)}}H2.className="Bidirectional";bt(H2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class q2 extends be{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return st(()=>(t=oe(t),t.dtype!=="float32"&&(t=Ba(t,"float32")),_t(q(t,this.scale),this.offset)))}}q2.className="Rescaling";bt(q2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const N8=["bilinear","nearest"],w_=new Set(N8);class X2 extends be{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(w_.has(t.interpolation))this.interpolation=t.interpolation;else throw new X(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Ae(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return st(()=>{const n=[this.height,this.width];if(this.interpolation==="bilinear")return Il.resizeBilinear(t,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Il.resizeNearestNeighbor(t,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...w_]} are supported`)})}}X2.className="Resizing";bt(X2);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function R8(s,t,e,n){let i=oe(s);if(i.dtype!=="int32"&&(i=Ba(i,"int32")),t==="int")return i;const r=i.shape;if(i.rank===0&&(i=_s(i,-1)),t==="oneHot"&&i.shape[i.shape.length-1]!==1&&(i=_s(i,-1)),i.rank>2)throw new X(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${i.rank}.`);const o=["multiHot","oneHot"].includes(t),a=i;let l;if(typeof n<"u"&&t==="count"?l=W1(a,n,e,o):l=W1(a,[],e,o),t!=="tfIdf")return l;if(n)return q(l,n);throw new X("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class j2 extends be{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Ae(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return st(()=>{t=oe(t),t.dtype!=="int32"&&(t=Ba(t,"int32"));let n;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new X(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);n=oe(e.countWeights)}const i=Oi(t),r=df(t),o=Ws(this.numTokens,i).bufferSync().get(0),a=Pa(r,0).bufferSync().get(0);if(!(o&&a))throw new X(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return R8(t,this.outputMode,this.numTokens,n)})}}j2.className="CategoryEncoding";bt(j2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function __(s){return new Bb(s)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8=at();$8.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,s=>{s&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var S_;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_QINT16=15]="DT_QINT16",s[s.DT_QUINT16=16]="DT_QUINT16",s[s.DT_UINT16=17]="DT_UINT16",s[s.DT_COMPLEX128=18]="DT_COMPLEX128",s[s.DT_HALF=19]="DT_HALF",s[s.DT_RESOURCE=20]="DT_RESOURCE",s[s.DT_VARIANT=21]="DT_VARIANT",s[s.DT_UINT32=22]="DT_UINT32",s[s.DT_UINT64=23]="DT_UINT64",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",s[s.DT_QINT16_REF=115]="DT_QINT16_REF",s[s.DT_QUINT16_REF=116]="DT_QUINT16_REF",s[s.DT_UINT16_REF=117]="DT_UINT16_REF",s[s.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",s[s.DT_HALF_REF=119]="DT_HALF_REF",s[s.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",s[s.DT_VARIANT_REF=121]="DT_VARIANT_REF",s[s.DT_UINT32_REF=122]="DT_UINT32_REF",s[s.DT_UINT64_REF=123]="DT_UINT64_REF"})(S_||(S_={}));var C_;(function(s){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(C_||(C_={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function D8(s,t){return Cf(s,t)}function Cf(s,t,e=new Map,n=new Set){if(s==null)return null;if(typeof Blob=="function"&&s instanceof Blob)return s.slice();if(n.has(s))throw new Error("Circular references are not supported.");if(e.has(s))return e.get(s);const i=t(s);if(i.recurse&&i.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse)if(Ql(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const o in s){const a=s[o],l=Cf(a,t,e,n);r[o]=l}return n.delete(s),s.__proto__&&(r.__proto__=s.__proto__),r}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return e.set(s,i.value),i.value}function F8(s,t=Y2){return K2(s,t)}function K2(s,t,e=new Set){const n=s[0];if(e.has(n))throw new Error("Circular references are not supported.");const i=t(s);if(i.recurse&&i.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(i.recurse)if(Ql(n)){const r=Array.isArray(n)?[]:{};e.add(n);for(const o in n){const a=s.map(c=>c[o]),l=K2(a,t,e);r[o]=l}return e.delete(n),r}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return i.value}function Y2(s){return s===null?null:Ql(s[0])?{value:null,recurse:!0}:{value:s,recurse:!1}}async function Z2(s,t){const e=new Map;Cf(s,t,e);for(const i of Array.from(e.keys())){const r=e.get(i);if(h0(r)){const o=await r;e.set(i,o)}}return Cf(s,t,e)}function Ql(s){let t=!1;if(at().get("IS_BROWSER"))t=s instanceof TextDecoder;else{const{StringDecoder:e}=require("string_decoder");t=s instanceof e}return s!=null&&!ArrayBuffer.isView(s)&&(Array.isArray(s)||typeof s=="object"&&!(s instanceof Ye)&&!(s instanceof Promise)&&!t)}function L8(s){return s==null||P8(s)||Array.isArray(s)||typeof s=="object"&&s instanceof Ye||Vi(s)}function P8(s){return s===null||typeof s!="object"&&typeof s!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function O8(s){return D8(s,z8)}function z8(s){return s instanceof Ye?{value:s.clone(),recurse:!1}:Ql(s)?{value:null,recurse:!0}:{value:s,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class J2{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class vm extends J2{constructor(){super(vm.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=this.capacity*2,e=new Array(t),n=this.length();for(let i=0;i<n;i++)e[i]=this.get(this.wrap(this.begin+i));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}vm.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function Q2(s){return new W8(s)}function B8(s){return new G8(s)}function U8(s,t){return new tM(s,t)}function V8(s,t=so.FAIL){return new tX(s,t)}class ms{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Z8(this,t)}filter(t){return new K8(this,t)}map(t){return new Y8(this,t)}mapAsync(t){return new I_(this,t)}serialMapAsync(t){return new I_(this,t).serial()}flatmap(t){return new Q8(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new j8(this,t,e)}columnMajorBatch(t,e=!0,n=Y2){return this.rowMajorBatch(t,e).map(r=>F8(r,n))}concatenate(t,e){return new tM(Q2([this,t]),e)}take(t){return t<0||t==null?this:new X8(this,t)}skip(t){return t<0||t==null?this:new q8(this,t)}prefetch(t){return new eM(this,t)}shuffle(t,e){return new eX(this,t,e)}serial(){return new H8(this)}}class W8 extends ms{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:O8(t),done:!1}}}class G8 extends ms{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class H8 extends ms{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class q8 extends ms{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;de(t.value)}return this.upstream.next()}}class X8 extends ms{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class j8 extends ms{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class K8 extends ms{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;de(t.value)}}}class Y8 extends ms{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=uo(t.value),n=this.transform(t.value),i=uo(n);for(const r of e)ov(r,i)||r.dispose();return{value:n,done:!1}}}class Z8 extends ms{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class I_ extends ms{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=uo(t.value),n=await this.transform(t.value),i=uo(n);for(const r of e)ov(r,i)||r.dispose();return{value:n,done:!1}}}class J8 extends ms{constructor(){super(),this.outputQueue=new vm,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Q8 extends J8{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=uo(t.value),n=this.transform(t.value),i=uo(n);this.outputQueue.pushAll(n);for(const r of e)ov(r,i)||r.dispose();return!0}}class tM extends ms{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){const n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var so;(function(s){s[s.FAIL=0]="FAIL",s[s.SHORTEST=1]="SHORTEST",s[s.LONGEST=2]="LONGEST"})(so||(so={}));class tX extends ms{constructor(t,e=so.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;function i(o){return o instanceof ms?{value:o.next().then(l=>(e++,l.done&&n++,l.value)),recurse:!1}:{value:null,recurse:!0}}const r=await Z2(this.iterators,i);if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case so.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case so.SHORTEST:return{value:null,done:!0};case so.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class eM extends ms{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new J2(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class eX extends eM{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Eh.alea(n||Kn().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(e.done)this.upstreamExhausted=!0;else return this.refill(),e}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Ub{constructor(){this.size=null}batch(t,e=!0){const n=this;D(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let i;return this.size===1/0||this.size==null?i=this.size:e?i=Math.ceil(this.size/t):i=Math.floor(this.size/t),Ys(async()=>(await n.iterator()).columnMajorBatch(t,e,sX),i)}concatenate(t){const e=this;let n;return this.size===1/0||t.size===1/0?n=1/0:this.size!=null&&t.size!=null?n=this.size+t.size:n=null,Ys(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return this.size===1/0?n=1/0:n=null,Ys(async()=>(await e.iterator()).filter(i=>st(()=>t(i))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Ys(async()=>(await e.iterator()).map(n=>st(()=>t(n))),this.size)}mapAsync(t){const e=this;return Ys(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Ys(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return this.size!=null&&t>0?n=this.size*t:t===0?n=0:this.size!=null&&(t===void 0||t<0)?n=1/0:n=null,Ys(async()=>{const i=B8(async()=>({value:await e.iterator(),done:!1}));return U8(i.take(t))},n)}skip(t){const e=this;let n;return this.size!=null&&t>=0&&this.size>=t?n=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?n=0:n=null,Ys(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const i=this,r=Eh.alea(e||Kn().toString());return Ys(async()=>{let o=r.int32();return n&&(o+=r.int32()),(await i.iterator()).shuffle(t,o.toString())},this.size)}take(t){const e=this;let n;return this.size!=null&&this.size>t?n=t:this.size!=null&&this.size<=t?n=this.size:n=null,Ys(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}Ub.MAX_BUFFER_SIZE=1e4;function Ys(s,t=null){return new class extends Ub{constructor(){super(...arguments),this.size=t}async iterator(){return s()}}}function T_(s){return Ys(async()=>Q2(s),s.length)}function nX(s){if(!Ql(s))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(s))for(let e=0;e<s.length;e++)t=t==null?s[e].size:Math.min(t,s[e].size);else if(s instanceof Object)for(const e in s)t=t==null?s[e].size:Math.min(t,s[e].size);return Ys(async()=>{const e=await Z2(s,n=>{if(n instanceof Ub)return{value:n.iterator(),recurse:!1};if(Ql(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return V8(e,so.SHORTEST)},t)}function sX(s){if(s===null)return null;const t=s[0];return L8(t)?{value:iX(s),recurse:!1}:{value:null,recurse:!0}}function iX(s){if(s.length===0)throw new Error("Can't make a batch of zero elements.");return s[0]instanceof Ye?ho(s):av(s)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zt(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&D(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rX=uT;class bm extends l0{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new IC(this,er())}nextDataId(){return bm.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,at().get("IS_NODE")&&Ls(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const i={id:this.nextDataId()};return this.data.set(i,{values:t,dtype:n,refCount:1}),i}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Tu(n[0])){const r=n.map(o=>oo(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return{dataId:i,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,n,i,r){this.data.set(t,{values:e,dtype:i,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if(e==="complex64"){const i=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return Br(i,r)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>co(i));return fe(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return fe(t.shape,t.dtype,e)}makeOutput(t,e,n){return er().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Kn();return t(),{kernelMs:Kn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){zt([t],"where");const e=this.readSync(t.dataId);return rX(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}bm.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(s){const t=new Float32Array(s.length);for(let e=0;e<s.length;++e)t[e]=Math.abs(s[e]);return t}const oX=s=>{const{x:t}=s.inputs,e=s.backend;zt(t,"abs");let n=new Float32Array(ht(t.shape));const i=e.data.get(t.dataId).values;return n=nM(i),e.makeOutput(n,t.shape,t.dtype)},aX={kernelName:Xf,backendName:"cpu",kernelFunc:oX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(s){return(t,e,n,i,r)=>{const o=ae(t,e),a=o.length,l=Zt(o),c=ht(o),u=Gn(r,c),h=t.length,d=e.length,f=Zt(t),p=Zt(e),g=jl(t,o),m=jl(e,o);if(g.length+m.length===0)for(let x=0;x<u.length;++x)u[x]=s(n[x%n.length],i[x%i.length]);else for(let x=0;x<u.length;++x){const v=uc(x,a,l),y=v.slice(-h);g.forEach(C=>y[C]=0);const b=ur(y,h,f),w=v.slice(-d);m.forEach(C=>w[C]=0);const S=ur(w,d,p);u[x]=s(n[b],i[S])}return[u,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ss(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=e.makeTensorInfo(n.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",r),imag:e.makeTensorInfo(i.shape,"float32",o)},a}const lX={kernelName:b0,backendName:"cpu",kernelFunc:Ss};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function If(s,t,e="float32"){if(e==="complex64"){const i=If(s,t,"float32"),r=If(s,t,"float32");return Ss({inputs:{real:i,imag:r},backend:s})}const n=Qn(ht(t),e);return s.makeTensorInfo(t,e,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const cX={kernelName:ju,backendName:"cpu",kernelFunc:mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ka(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.real,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const uX={kernelName:V0,backendName:"cpu",kernelFunc:ka};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(s,t,e,n){if(n==="int32"){const i=Int32Array.from(s);return[t,"int32",i]}if(n==="bool"){const i=La([0],e),[r,o]=bn((a,l)=>a!==l?1:0)(t,[],s,i,"bool");return[o,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function xo(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return mr({inputs:{x:i},backend:e});const u=If(e,i.shape,i.dtype),h=xo({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),d=Ss({inputs:{real:h,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),d}if(i.dtype==="complex64"){const u=ka({inputs:{input:i},backend:e}),h=xo({inputs:{x:u},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(u),h}if(!MC(i.dtype,r)){const u=mr({inputs:{x:i},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:r}}const o=e.data.get(i.dataId).values,[a,l,c]=sM(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}const hX={kernelName:Fu,backendName:"cpu",kernelFunc:xo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(s,t,e,n){return e==null?({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;zt([o,a],s);const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=o.dtype==="string"?Ea(c):c,d=o.dtype==="string"?Ea(u):u,f=n||o.dtype,[p,g]=t(o.shape,a.shape,h,d,f);return l.makeTensorInfo(g,f,p)}:({inputs:i,backend:r})=>{const{a:o,b:a}=i,l=r;if(o.dtype==="complex64"||a.dtype==="complex64"){const c=xo({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,f=l.data.get(h.dataId).values,p=l.data.get(d.dataId).values,g=xo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(g.dataId),x=m.complexTensorInfos.real,v=m.complexTensorInfos.imag,y=l.data.get(x.dataId).values,b=l.data.get(v.dataId).values,[w,S,C]=e(o.shape,a.shape,f,p,y,b),_=l.makeTensorInfo(C,"float32",w),I=l.makeTensorInfo(C,"float32",S),T=Ss({inputs:{real:_,imag:I},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(_),l.disposeIntermediateTensorInfo(I),T}else{const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=n||o.dtype,[d,f]=t(o.shape,a.shape,c,u,h);return l.makeTensorInfo(f,h,d)}}}function Vb(s){return(t,e,n,i,r,o)=>{const a=ae(t,e),l=ht(a),c=a.length,u=Zt(a),h=Gn("float32",l),d=Gn("float32",l),f=jl(t,a),p=jl(e,a),g=Br(n,i),m=Br(r,o),x=t.length,v=Zt(t),y=e.length,b=Zt(e);if(f.length+p.length===0)for(let w=0;w<h.length;w++){const S=w%g.length,C=w%m.length,_=s(g[S*2],g[S*2+1],m[C*2],m[C*2+1]);h[w]=_.real,d[w]=_.imag}else for(let w=0;w<h.length;w++){const S=uc(w,c,u),C=S.slice(-x);f.forEach(P=>C[P]=0);const _=ur(C,x,v),I=S.slice(-y);p.forEach(P=>I[P]=0);const T=ur(I,y,b),N=s(g[_*2],g[_*2+1],m[T*2],m[T*2+1]);h[w]=N.real,d[w]=N.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iM=bn((s,t)=>s+t),dX=Vb((s,t,e,n)=>({real:s+e,imag:t+n})),tc=On(hc,iM,dX),fX={kernelName:hc,backendName:"cpu",kernelFunc:tc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wb(s,t,e,n,i){const r=ht(n),o=Qn(i,e);for(let a=0;a<s.length;a++){const l=s[a];if(l<0)throw new Error("Input x must be non-negative!");l>=i||(r>0?o[l]+=t[a]:o[l]+=1)}return o}function rM(s,t,e,n=!1){const i=s.shape[0],r=s.shape[1],o=fe([i,e],t.dtype);for(let a=0;a<i;a++)for(let l=0;l<r;l++){const c=s.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(n?o.set(1,a,c):t.size>0?o.set(o.get(a,c)+t.get(a,l),a,c):o.set(o.get(a,c)+1,a,c))}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(s){return(t,e,n)=>{const i=Gn(e,t.length);for(let r=0;r<t.length;++r)i[r]=s(t[r],n);return i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(zt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=ht(o.shape),u=e||o.dtype,h=gn(u,c);for(let d=0;d<c;++d)h[d]=t(l[d],i);return a.makeTensorInfo(o.shape,u,h)}}function xc(s,t,e){return({inputs:n,attrs:i,backend:r})=>{const{x:o}=n;if(zt(o,s),o.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=r,l=a.data.get(o.dataId).values,c=e||o.dtype,u=t(l,c,i);return a.makeTensorInfo(o.shape,c,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oM=Ao(s=>Math.ceil(s)),pX=xc(Lu,oM),mX={kernelName:Lu,backendName:"cpu",kernelFunc:pX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(s,t,e,n){const i=gn(e,ht(t));if(n&&e!=="string"){let r=0;s.forEach(o=>{const a=ht(o.shape);i.set(o.vals,r),r+=a})}else{let r=0;s.forEach(o=>{const a=e==="string"?Ea(o.vals):o.vals;let l=0;for(let c=0;c<o.shape[0];++c){const u=c*t[1]+r;for(let h=0;h<o.shape[1];++h)i[u+h]=a[l++]}r+=o.shape[1]})}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lM=bn((s,t)=>s===t?1:0),cM=On(lp,lM,null,"bool"),gX={kernelName:lp,backendName:"cpu",kernelFunc:cM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uM=Ao(s=>Math.exp(s)),hM=xc(Wu,uM,"float32"),xX={kernelName:Wu,backendName:"cpu",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dM=Ao(s=>Math.expm1(s)),vX=xc(Gu,dM),bX={kernelName:Gu,backendName:"cpu",kernelFunc:vX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fM=Ao(s=>Math.floor(s)),yX=xc(Hu,fM),wX={kernelName:Hu,backendName:"cpu",kernelFunc:yX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(s,t,e,n,i,r,o,a,l){const c=fe([n,r],e);for(let u=0;u<n;u++){const h=[];let d=0;for(let f=0;f<i;f++){const p=s[u*i+f];d+=p*o[f],h.push(p)}if(d<0||d>=l/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<r;f++)c.values[u*r+f]=t.get(...t.indexToLoc(d*r+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(s,t,e){const n=fe(e,s.dtype);for(let i=0;i<n.size;++i){const o=n.indexToLoc(i).slice(),a=o[0],l=o[2],c=t.locToIndex([a,l]);o[2]=t.values[c];const u=s.locToIndex(o);0<=u&&u<s.values.length&&(n.values[i]=s.values[u])}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM=bn((s,t)=>s>t?1:0),_X=On(dp,gM,null,"bool"),SX={kernelName:dp,backendName:"cpu",kernelFunc:_X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xM=bn((s,t)=>s>=t?1:0),CX=On(Xu,xM,null,"bool"),IX={kernelName:Xu,backendName:"cpu",kernelFunc:CX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vM=bn((s,t)=>s<t?1:0),TX=On(pp,vM,null,"bool"),EX={kernelName:pp,backendName:"cpu",kernelFunc:TX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bM=bn((s,t)=>s<=t?1:0),MX=On(mp,bM,null,"bool"),kX={kernelName:mp,backendName:"cpu",kernelFunc:MX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(s,t,e){const n=(t-s)/(e-1),i=Qn(e,"float32");i[0]=s;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=Ao(s=>Math.log(s)),AX=xc(Ju,wM),NX={kernelName:Ju,backendName:"cpu",kernelFunc:AX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(s,t,e,n){const i=Gn(n,ht(e));for(let r=0;r<i.length;++r){const o=r*t;let a=s[o];for(let l=0;l<t;++l){const c=s[o+l];(Number.isNaN(c)||c>a)&&(a=c)}i[r]=a}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM=bn((s,t)=>Math.max(s,t)),RX=On(th,SM),$X={kernelName:th,backendName:"cpu",kernelFunc:RX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CM=bn((s,t)=>Math.min(s,t)),DX=On(eh,CM),FX={kernelName:eh,backendName:"cpu",kernelFunc:DX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gb=bn((s,t)=>s*t),LX=Vb((s,t,e,n)=>({real:s*e-t*n,imag:s*n+t*e})),ym=On(sh,Gb,LX),PX={kernelName:sh,backendName:"cpu",kernelFunc:ym};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(s,t,e){const n=_o(-1,e);return Gb([],t,n,s,e)}function OX(s){const{inputs:t,backend:e}=s,{x:n}=t;zt(n,"neg");const i=e.data.get(n.dataId).values,[r,o]=IM(i,n.shape,n.dtype);return e.makeTensorInfo(o,n.dtype,r)}const zX={kernelName:Tp,backendName:"cpu",kernelFunc:OX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TM=bn((s,t)=>s!==t?1:0),BX=On(Ep,TM,null,"bool"),UX={kernelName:Ep,backendName:"cpu",kernelFunc:BX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hb(s,t,e,n,i){const r=t.length,o=ht(t),a=Zt(t),l=Zt(i),c=Gn(e,ht(i));for(let u=0;u<o;++u){const h=uc(u,r,a),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[n[p]];const f=ur(d,r,l);c[f]=s[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(s){const{inputs:t,attrs:e,backend:n}=s,{x:i}=t,{perm:r}=e;zt(i,"transpose");const o=i.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=i.shape[r[h]];const l=n.data.get(i.dataId).values,c=Hb(l,i.shape,i.dtype,r,a);return{dataId:n.write(c,a,i.dtype),shape:a,dtype:i.dtype}}const VX={kernelName:Nl,backendName:"cpu",kernelFunc:gs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(s,t,e,n){const[i,r]=Pn(s,n),o=Ts(t,"int32"),a=Qn(ht(i),o),l=ht(r);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=e[u+d];a[c]=h}return{outVals:a,outShape:i,outDtype:o}}function WX(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;zt(i,"prod");const a=i.shape.length,l=pe(r,i.shape),c=sn(l,a);let u=l,h=i;const d=[];c!=null&&(h=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),d.push(h),u=dn(u.length,a));const f=e.data.get(h.dataId).values,{outVals:p,outShape:g,outDtype:m}=EM(h.shape,h.dtype,f,u);let x=g;return o&&(x=hn(g,l)),d.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(x,m,p)}const GX={kernelName:$p,backendName:"cpu",kernelFunc:WX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(s,t,e){s.forEach((n,i)=>{if(n<0||n>=e){const r=uc(i,t.length,Zt(t)).join(",");throw new Error(`indices[${r}] = ${n} is not in [0, ${e})`)}})}function qX(s,t){for(let e=0;e<s.length;++e){const n=s[e],i=e===s.length-1?t:s[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>i)throw new Error("Ragged splits must not point past values");for(let r=1;r<n.length;++r)if(n[r-1]>n[r])throw new Error("Ragged splits must be sorted in ascending order")}}function XX(s,t,e,n){const i=[];let r=0;const o=t.length-1+e.length,a=new Array(o).fill(null).map(()=>[0]);qX(e,n);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<s.length;++c){let u=s[c],h=s[c]+1;for(let d=0;d<e.length;++d){const f=e[d],p=d+t.length-1;if(p>=0){const g=a[p],m=g[g.length-1]-f[u];for(let x=u;x<h;++x)a[p].push(f[x+1]+m)}u=f[u],h=f[h]}h!==u&&(i.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:i,numValues:r}}function jX(s){const t=[];for(let e=0;e<s.length;++e){const n=s[e].length,i=gn("int32",n);t.push(i),s[e].forEach((r,o)=>i[o]=r)}return t}function E_(s,t){const e=s.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<s.length;n++)e[t-1]*=s[n];return e}function KX(s,t,e,n,i,r){const o=E_(t,2)[1],a=E_(r,2)[1];let l=0;for(const c of e)for(let u=c[0];u<c[1];++u){for(let h=0;h<n;++h)i[l*a+h]=s[u*o+h];++l}}function YX(s,t,e,n,i){const r=t.slice();r[0]=i;const o=gn(e,ht(r)),a=s.length,l=a===0?0:a/t[0];return KX(s,t,n,l,o,r),[o,r]}function MM(s,t,e,n,i,r,o,a){if(s.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(HX(r,o,l),n.length===0)throw new Error("params.rank must be nonzero");const c=n[0],{outSplits:u,valueSlices:h,numValues:d}=XX(r,o,s,c),f=jX(u),p=YX(e,n,i,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_=2147483647;function kM(s,t,e,n,i,r,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,l=i.length===0,c=o.length===0,u=[];a||u.push(t[0]),l||u.push(i[0]),c||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=gn("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const x=a?s[0]:s[m],v=l?n[0]:n[m],y=c?r[0]:r[m];if(y===0)throw new Error("Requires delta != 0");let b;if(y>0&&v<x||y<0&&v>x)b=0;else if(b=Math.ceil(Math.abs((v-x)/y)),b>M_)throw new Error(`Requires ((limit - start) / delta) <= ${M_}`);d[m+1]=d[m]+b}const f=d[h],p=gn(e,f);let g=0;for(let m=0;m<h;++m){const x=d[m+1]-d[m];let v=a?s[0]:s[m];const y=c?r[0]:r[m];for(let b=0;b<x;++b)p[g++]=v,v+=y}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ks=ki;class Tf{constructor(t,e,n,i,r,o,a,l,c,u){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=i,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=gT(u),this.raggedRank=xT(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Ks.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Ks.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Ks.VALUE_ROWIDS:return Tf.getMaxWidthValueRowID(e);case Ks.ROW_SPLITS:return Tf.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Ks[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let n=0;for(let i=0;i<e-1;++i){const r=t[i+1]-t[i];r>n&&(n=r)}return n}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let n=0,i=t[0],r=0;for(let o=1;o<e;++o){const a=t[o];a!==i&&(i=a,r=Math.max(o-n,r),n=o)}return Math.max(e-n,r)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return A_(t,n)}calculateOutputSize(t){const e=this.valuesShape,n=this.defaultValueShape;vT(n,e);const i=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=mT(this.raggedRank,i,e);o[0]<0&&(o[0]=t);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(t,e,n){const i=Math.min(t,n),r=[];let o=0;for(let a=0;a<i;++a,o+=e)r.push(o);for(let a=i;a<t;++a)r.push(-1);return D(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,n,i){const r=t.length,o=[];for(let a=0;a<r-1;++a){const l=t[a+1]-t[a];let c=Math.min(i,l),u=e[a];u===-1&&(c=0);for(let h=0;h<c;++h)o.push(u),u+=n;for(let h=0;h<l-c;++h)o.push(-1)}if(r>0&&o.length!==t[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,e,n,i){const r=t.length,o=[];if(r===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];o.push(c);for(let u=1;u<r;++u){const h=t[u];if(h===l)c>=0&&(++a,a<i?c+=n:c=-1);else{if(a=0,l=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}o.push(c)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,e,n,i){const r=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case Ks.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,n,i);case Ks.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,n,i);default:throw new Error(`Unsupported partition type: ${Ks[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Ks.FIRST_DIM_SIZE:return t[0];case Ks.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ks.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ks[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),i=new Array(this.raggedRank+1);i[i.length-1]=1;for(let l=i.length-2;l>=0;--l)i[l]=i[l+1]*n[l+1];const r=A_(n,!1),o=gn(this.valuesDType,ht(r));if(i[0]*n[0]>0){let l=this.calculateFirstParentOutputIndex(e,i[0],n[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,i[c],n[c]);this.setOutput(this.raggedRank,l,o,r)}return[r,o]}setOutput(t,e,n,i){if(n.length===0)return;const r=this.values,o=n;let a=i.slice();a=a.slice(t+1);const l=ht(a),c=e.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const p=this.defaultValueShape;st(()=>{const g=Q(u,p);u=Jc(g,a).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=c;++p){let g=p<c?e[p]:-1;if(g===f){++f;continue}if(d<f){const m=r.subarray(h*l),x=o.subarray(d*l),v=(f-d)*l;k_(x,m,v)}if(p>=c){const m=n.length;g=Math.floor(m/l)}if(g>f)if(this.defaultValue.length===1)o.subarray(f*l,g*l).fill(this.defaultValue[0]),f=g;else for(;g>f;){const m=o.slice(f*l);k_(m,u,l),++f}g<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function k_(s,t,e){for(let n=0;n<e;n++)s[n]=t[n]}function A_(s,t){const e=[];for(let n of s){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function AM(s,t,e,n,i,r,o,a,l,c){return new Tf(s,t,e,n,i,r,o,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(s,t,e,n){const i=s===t,r=s<t&&e<0,o=t<s&&e>1;if(i||r||o)return Qn(0,n);const a=Math.abs(Math.ceil((t-s)/e)),l=Qn(a,n);t<s&&e===1&&(e=-1),l[0]=s;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RM=Ao(s=>1/Math.sqrt(s)),ZX=xc(ch,RM),JX={kernelName:ch,backendName:"cpu",kernelFunc:ZX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tl(s,t,e,n,i,r,o,a,l,c){const u=[n/i,i],h=s.values,d=t.values;if(n===0)return fe(e,t.dtype);const f=fe(u,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<r;p++){const g=[];let m=0;for(let x=0;x<o;x++){const v=h[p*o+x];g.push(v),m+=v*a[x]}if(m<0||m>=n/i)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let x=0;x<i;x++)c?f.values[m*i+x]+=d[p*i+x]:f.values[m*i+x]=t.rank===0?d[0]:d[p*i+x]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QX=Ao(s=>1/(1+Math.exp(-s))),$M=Pe(ph,s=>1/(1+Math.exp(-s))),tj={kernelName:ph,backendName:"cpu",kernelFunc:$M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(s,t,e,n,i){const r=pv(n,t,e),o=ht(e),a=Zt(n);if(r){const h=mv(t,a);return i==="string"?s.slice(h,h+o):s.subarray(h,h+o)}const l=i==="string"?Ea(s):s,c=fe(n,i,l),u=fe(e,i);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),f=d.map((p,g)=>p+t[g]);u.set(c.get(...f),...d)}return i==="string"?OT(u.values):u.values}function Aa(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n;zt(i,"slice");const[a,l]=Zp(i,r,o);dv(i,a,l);const c=e.data.get(i.dataId).values,u=DM(c,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,u)}const ej={kernelName:zp,backendName:"cpu",kernelFunc:Aa};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(s,t,e,n,i,r,o){const a=t[0],l=r[0],c=new Array(l),u=new Array(a),h=t[1];if(l===0){if(a!==0)throw new Error(IT(a));const m=gn(e,0),x=gn(i,0);return[m,[0,h],x,c,u]}let d=!0,f=0;const p=new Array(l).fill(0);for(let m=0;m<a;++m){const x=s[m*h];if(x<0)throw new Error(TT(m,x));if(x>=l)throw new Error(ET(m,x,l));++p[x],d=d&&x>=f,f=x}let g=!0;for(let m=0;m<l;++m){const x=p[m]===0;c[m]=x,g=g&&!x,p[m]=Math.max(p[m],1),m>0&&(p[m]+=p[m-1])}if(g&&d){const m=s,x=n;for(let v=0;v<a;++v)u[v]=v;return[m,[a,h],x,c,u]}else{const m=p[l-1],x=gn(e,m*h),v=gn(i,m),y=new Array(l).fill(0);for(let b=0;b<a;++b){const w=s[b*h],S=y[w],C=(w===0?0:p[w-1])+S;y[w]++;for(let _=0;_<h;++_)x[C*h+_]=s[b*h+_];v[C]=n[b],u[b]=C}for(let b=0;b<l;++b)if(y[b]===0){const S=b===0?0:p[b-1];x[S*h+0]=b;for(let C=1;C<h;++C)x[S*h+C]=0;v[S]=o}return[x,[m,h],v,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(s,t,e,n,i){const r=ht(n),o=t[0],a=i.length,l=[];let c=1,u=-1;for(let m=0;m<a;++m){const x=i[m];if(x===-1){if(u!==-1)throw new Error(MT(u,m));u=m,l.push(1)}else{if(x<0)throw new Error(kT(m,x));c*=x,l.push(x)}}if(u!==-1){if(c<=0)throw new Error(AT());const m=Math.trunc(r/c);if(c*m!==r)throw new Error(NT(n,l));l[u]=m}if(ht(l)!==r)throw new Error(RT(n,l));const d=n.length,f=[];if(d>0){f[d-1]=1;for(let m=d-2;m>=0;--m)f[m]=f[m+1]*n[m+1]}const p=[];if(a>0){p[a-1]=1;for(let m=a-2;m>=0;--m)p[m]=p[m+1]*l[m+1]}const g=gn(e,o*a);for(let m=0;m<o;++m){let x=0;for(let v=0;v<d;++v)x+=s[m*d+v]*f[v];for(let v=0;v<a;++v)g[m*a+v]=Math.trunc(x/p[v]),x%=p[v]}return[g,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qb(s,t,e,n,i,r=!1,o=0){const a=n.length,l=[t[0],s.length/t[0]],c=l[1],h=a>0?i[a-1]+1:0;if(h<0)throw new Error(Tx());const d=t.slice();d[0]=h;const f=d.reduce((y,b)=>y*b,1),p=gn(e,f);if(a===0)return h>0&&p.fill(o),[p,d];if(h<=0)throw new Error(Tx());let g=0,m=1,x=0,v=i[g];for(;;){let y=0;if(m<a){if(y=i[m],v===y){++m;continue}if(v>=y)throw new Error($T())}if(v<0||v>=h)throw new Error(DT(v,h));v>x&&p.fill(o,x*c,v*c);for(let b=g;b<m;++b){const w=n[b];if(w<0||w>=l[0])throw new Error(FT(b,n[b],l[0]));for(let S=0;S<c;S++)p[v*c+S]+=s[w*c+S]}if(r)for(let b=0;b<c;b++)p[v*c+b]/=m-g;if(g=m,++m,x=v+1,v=y,m>a)break}return x<h&&p.fill(o,x*c,h*c),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj=Ao(s=>Math.sqrt(s)),sj=Pe(gh,s=>Math.sqrt(s)),ij={kernelName:gh,backendName:"cpu",kernelFunc:sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PM=bn((s,t)=>{const e=s-t;return e*e}),rj=On(xh,PM),oj={kernelName:xh,backendName:"cpu",kernelFunc:rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(s,t,e,n){const i=fe(s,t.dtype);for(let r=0;r<i.size;r++){const o=i.indexToLoc(r),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*e[l]+n[l];i.set(t.get(...a),...o)}return i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aj{constructor(t,e,n,i,r,o){this.separator=oo(t),this.nGramWidths=e,this.leftPad=oo(n),this.rightPad=oo(i),this.padWidth=r,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,i,r,o){for(let a=0;a<r;++a){const l=this.getPadWidth(o),c=Math.max(0,l-a),u=Math.max(0,l-(r-(a+1))),h=o-(c+u),d=e+(c>0?0:a-l);let f=0;f+=c*this.leftPad.length;for(let v=0;v<h;++v)f+=t[d+v].length;f+=u*this.rightPad.length;const p=c+u+h-1;f+=p*this.separator.length,n[i+a]=new Uint8Array(f);const g=n[i+a];let m=0;const x=v=>v.forEach(y=>g[m++]=y);for(let v=0;v<c;++v)x(this.leftPad),x(this.separator);for(let v=0;v<h-1;++v)x(t[d+v]),x(this.separator);if(h>0){x(t[d+h-1]);for(let v=0;v<u;++v)x(this.separator),x(this.rightPad)}else{for(let v=0;v<u-1;++v)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){const n=t.length,i=e.length;if(i>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<i;++c){let u=e[c]>=l;if(u=u&&e[c]<=n,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${n}]`);l=e[c]}if(l!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${l}`)}const r=i-1,o=gn("int32",i);if(n===0||i===0){const l=new Array(n);for(let c=0;c<=r;++c)o[c]=0;return[l,o]}o[0]=0;for(let l=1;l<=r;++l){const c=e[l]-e[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),o[l]=o[l-1]+u}const a=new Array(o[r]);for(let l=0;l<r;++l){const c=e[l];let u=o[l];if(this.nGramWidths.forEach(h=>{const d=e[l+1]-e[l],f=this.getNumNGrams(d,h);this.createNGrams(t,c,a,u,f,h),u+=f}),this.preserveShort&&u===o[l]){const h=e[l+1]-e[l];if(h===0)continue;const d=h+2*this.padWidth,f=1;this.createNGrams(t,c,a,u,f,d)}}return[a,o]}}function zM(s,t,e,n,i,r,o,a){return new aj(e,n,i,r,o,a).compute(s,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(s,t,e,n){if(!s.length)return;if(t.length===0){for(let r=0;r<s.length;++r)n.push(s.subarray(r,r+1));return}if(t.length===1){const r=t[0];let o=s.indexOf(r);for(;o!==-1;){const a=s.subarray(0,o);(!e||a.length!==0)&&n.push(a),s=s.subarray(o+1),o=s.indexOf(r)}(!e||s.length!==0)&&n.push(s);return}let i=0;for(let r=0;r<s.length+1;r++)if(r===s.length||t.indexOf(s[r])!==-1){const o=s.subarray(i,r);(!e||o.length!==0)&&n.push(o),i=r+1}}function BM(s,t,e){const n=s.length,i=[];let r=0,o=0;const a=new Array(n);for(let d=0;d<n;++d){const f=i.length;lj(s[d],t,e,i);const p=i.length-f;a[d]=p,r+=p,o=Math.max(o,p)}const l=gn("int32",r*2),c=new Array(r),u=[n,o];let h=0;for(let d=0;d<n;++d)for(let f=0;f<a[d];++f)l[h*2]=d,l[h*2+1]=f,c[h]=i[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(s,t){const e=gn("int32",s.length);for(let n=0;n<s.length;++n)e[n]=aB(s[n]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VM=bn((s,t)=>s-t),cj=Vb((s,t,e,n)=>({real:s-e,imag:t-n})),Xb=On(vh,VM,cj),uj={kernelName:vh,backendName:"cpu",kernelFunc:Xb};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(s,t){const e=new Array(s.rank);for(let i=0;i<e.length;i++)e[i]=s.shape[i]*t[i];const n=fe(e,s.dtype);for(let i=0;i<n.values.length;++i){const r=n.indexToLoc(i),o=new Array(s.rank);for(let l=0;l<o.length;l++)o[l]=r[l]%s.shape[l];const a=s.locToIndex(o);n.values[i]=s.values[a]}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gc=(s,t)=>{const e=t.value-s.value;return e===0?s.index-t.index:e};function GM(s,t,e=0,n=s.length-1){for(;n>e;){if(n-e>600){const a=n-e+1,l=t-e+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(e,Math.floor(t-l*u/a+h)),f=Math.min(n,Math.floor(t+(a-l)*u/a+h));GM(s,t,d,f)}const i=s[t];let r=e,o=n;for(bl(s,e,t),Gc(s[n],i)>0&&bl(s,e,n);r<o;){for(bl(s,r,o),r++,o--;Gc(s[r],i)<0;)r=r+1;for(;Gc(s[o],i)>0;)o=o-1}Gc(s[e],i)===0?bl(s,e,o):(o=o+1,bl(s,o,n)),o<=t&&(e=o+1),t<=o&&(n=o-1)}}function HM(s,t,e,n,i){const r=t[t.length-1],[o,a]=[s.length/r,r],l=Gn(e,o*n),c=Gn("int32",o*n);for(let h=0;h<o;h++){const d=h*a,f=s.subarray(d,d+a);let p=new Array(f.length);f.forEach((v,y)=>p[y]={value:v,index:y}),n<p.length&&(GM(p,n),p=p.slice(0,n)),i&&p.sort(Gc);const g=h*n,m=l.subarray(g,g+n),x=c.subarray(g,g+n);for(let v=0;v<n;v++)m[v]=p[v].value,x[v]=p[v].index}const u=t.slice();return u[u.length-1]=n,[fe(u,e,l),fe(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(s,t,e,n){const i=pe(t,e)[0],r=[1,e[0],1];for(let p=0;p<i;p++)r[0]*=e[p];r[1]=e[i];for(let p=i+1;p<e.length;p++)r[2]*=e[p];const o={},a=new Int32Array(e[i]),l=new Zn(r,n,s),c=[],u=r[0]===1&&r[2]===1;for(let p=0;p<e[i];p++){let g;if(u)g=s[p].toString();else{const m=[];for(let x=0;x<r[0];x++)for(let v=0;v<r[2];v++)m.push(l.get(x,p,v));g=m.join(",")}if(o[g]!==void 0)a[p]=o[g];else{const m=Object.keys(o).length;o[g]=m,a[p]=m,c.push(p)}}const h=r.slice();h[1]=Object.keys(o).length;const d=new Zn(h,n);c.forEach((p,g)=>{for(let m=0;m<r[0];m++)for(let x=0;x<r[2];x++)d.set(l.get(m,p,x),m,g,x)});const f=e.slice();return f[i]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:nM,addImpl:iM,bincountImpl:Wb,bincountReduceImpl:rM,castImpl:sM,ceilImpl:oM,concatImpl:aM,equalImpl:lM,expImpl:uM,expm1Impl:dM,floorImpl:fM,gatherNdImpl:pM,gatherV2Impl:mM,greaterImpl:gM,greaterEqualImpl:xM,lessImpl:vM,lessEqualImpl:bM,linSpaceImpl:yM,logImpl:wM,maxImpl:_M,maximumImpl:SM,minimumImpl:CM,multiplyImpl:Gb,negImpl:IM,notEqualImpl:TM,prodImpl:EM,raggedGatherImpl:MM,raggedRangeImpl:kM,raggedTensorToTensorImpl:AM,rangeImpl:NM,rsqrtImpl:RM,scatterImpl:Tl,sigmoidImpl:QX,sliceImpl:DM,sparseFillEmptyRowsImpl:FM,sparseReshapeImpl:LM,sparseSegmentReductionImpl:qb,sqrtImpl:nj,squaredDifferenceImpl:PM,stridedSliceImpl:OM,stringNGramsImpl:zM,stringSplitImpl:BM,stringToHashBucketFastImpl:UM,subImpl:VM,tileImpl:WM,topKImpl:HM,transposeImpl:Hb,uniqueImpl:qM},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */bI("cpu",()=>new bm,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XM=Pe(Uu,s=>s>=0?s:Math.exp(s)-1),dj={kernelName:Uu,backendName:"cpu",kernelFunc:XM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n;zt([i],"leakyRelu");const o=ht(i.shape),a=e.data.get(i.dataId).values,l=Gn("float32",o);for(let c=0;c<a.length;c++)l[c]=a[c]<0?r*a[c]:a[c];return e.makeTensorInfo(i.shape,"float32",l)}const fj={kernelName:fp,backendName:"cpu",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj=bn((s,t)=>s<0?t*s:s);function KM(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t;zt([n,i],"prelu");const r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,[a,l]=pj(n.shape,i.shape,r,o,"float32");return e.makeTensorInfo(l,"float32",a)}const mj={kernelName:Rp,backendName:"cpu",kernelFunc:KM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YM=Pe(oh,s=>Math.max(0,s)),gj={kernelName:oh,backendName:"cpu",kernelFunc:YM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM=Pe(ah,s=>Math.min(Math.max(0,s),6)),xj={kernelName:ah,backendName:"cpu",kernelFunc:ZM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ef(s,t,e,n,i){if(e==="linear")return mr({inputs:{x:t},backend:s});if(e==="relu")return YM({inputs:{x:t},backend:s});if(e==="elu")return XM({inputs:{x:t},backend:s});if(e==="relu6")return ZM({inputs:{x:t},backend:s});if(e==="prelu")return KM({inputs:{x:t,alpha:n},backend:s});if(e==="leakyrelu")return jM({inputs:{x:t},backend:s,attrs:{alpha:i}});if(e==="sigmoid")return $M({inputs:{x:t},backend:s});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=ht(i.shape),a=EC(r,o),l=ht(a);D(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${i.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),e.incRef(i.dataId);const c=e.data.get(i.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:i.dataId,shape:a,dtype:i.dtype}}const vj={kernelName:Dp,backendName:"cpu",kernelFunc:We};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;zt([i,r],"matMul");const l=i.shape.length,c=r.shape.length,u=o?i.shape[l-2]:i.shape[l-1],h=a?r.shape[c-1]:r.shape[c-2],d=o?i.shape[l-1]:i.shape[l-2],f=a?r.shape[c-2]:r.shape[c-1],p=i.shape.slice(0,-2),g=r.shape.slice(0,-2),m=ht(p),x=ht(g),y=ae(i.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,f]);D(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${i.shape} and ${r.shape} and transposeA=${o} and transposeB=${a} must match.`);const b=o?[m,u,d]:[m,d,u],w=a?[x,f,h]:[x,h,f],S=We({inputs:{x:i},backend:e,attrs:{shape:b}}),C=We({inputs:{x:r},backend:e,attrs:{shape:w}}),_=o?S.shape[1]:S.shape[2],I=o?S.shape[2]:S.shape[1],T=a?C.shape[1]:C.shape[2],N=Math.max(m,x),P=e.data.get(S.dataId).values,E=e.data.get(C.dataId).values,M=Zt(S.shape),A=Zt(C.shape),[R,V,L]=o?[M[0],1,M[1]]:[M[0],M[1],1],[$,U,H]=a?[1,A[1],A[0]]:[A[1],1,A[0]],W=I*T,Z=fe([N,I,T],S.dtype),it=Z.values,lt=e.blockSize;for(let J=0;J<N;J++)for(let vt=0;vt<I;vt+=lt)for(let mt=0;mt<T;mt+=lt)for(let xt=0;xt<_;xt+=lt){const dt=Math.min(vt+lt,I),rt=Math.min(mt+lt,T),yt=Math.min(xt+lt,_);for(let Tt=vt;Tt<dt;Tt++)for(let ne=mt;ne<rt;ne++){let re=0;for(let se=xt;se<yt;se++){const ye=Math.min(J,m-1)*R,ue=Math.min(J,x-1)*H,me=P[ye+Tt*V+se*L],Ne=E[se*$+ne*U+ue];re+=me*Ne}it[J*W+(Tt*T+ne)]+=re}}return e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(C),e.makeTensorInfo(y,Z.dtype,Z.values)}const bj={kernelName:Jf,backendName:"cpu",kernelFunc:JM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;let d,f,p;const g=[];d=JM({inputs:{a:i,b:r},attrs:{transposeA:l,transposeB:c},backend:e}),o&&(f=tc({inputs:{a:d,b:o},backend:e}),g.push(d),d=f),u&&(p=Ef(e,d,u,a,h),g.push(d),d=p);for(const x of g)e.disposeIntermediateTensorInfo(x);return d}const wj={kernelName:rf,backendName:"cpu",kernelFunc:yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j=Pe(Mu,s=>Math.acos(s)),Sj={kernelName:Mu,backendName:"cpu",kernelFunc:_j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj=Pe(ku,s=>Math.acosh(s)),Ij={kernelName:ku,backendName:"cpu",kernelFunc:Cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tj(s){const{inputs:t,backend:e}=s,n=t;zt(t,"addN");const i=n.map(a=>e.data.get(a.dataId).values),r=fe(n[0].shape,n[0].dtype),o=r.values;for(let a=0;a<n.length;a++){const l=i[a];for(let c=0;c<o.length;c++)o[c]+=l[c]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const Ej={kernelName:f0,backendName:"cpu",kernelFunc:Tj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;zt(i,"all");const a=pe(r,i.shape);let l=a;const c=sn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=dn(l.length,i.shape.length)),Xn("all",l,u.shape.length);const[h,d]=Pn(u.shape,l),f=ht(d),p=Qn(ht(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let y=g[v];for(let b=0;b<f;++b){const w=g[v+b];y=y&&w}p[x]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=hn(h,a),v=We({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const kj={kernelName:p0,backendName:"cpu",kernelFunc:Mj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;zt(i,"any");const a=pe(r,i.shape);let l=a;const c=sn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=dn(l.length,i.shape.length)),Xn("any",l,u.shape.length);const[h,d]=Pn(u.shape,l),f=ht(d),p=Qn(ht(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let y=g[v];for(let b=0;b<f;++b){const w=g[v+b];y=y||w}p[x]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=hn(h,a),v=We({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const Nj={kernelName:m0,backendName:"cpu",kernelFunc:Aj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;zt(i,"argMax");let o=pe(r,i.shape);const a=sn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=dn(o.length,l.shape.length)),o=[o[0]],Xn("argMax",o,l.shape.length);const[u,h]=Pn(l.shape,o),d=ht(u),f=Qn(d,"int32"),p=ht(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x],y=0;for(let b=0;b<p;++b){const w=g[x+b];w>v&&(v=w,y=b)}f[m]=y}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const $j={kernelName:jf,backendName:"cpu",kernelFunc:Rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;zt(i,"argMin");let o=pe(r,i.shape);const a=sn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=gs({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=dn(o.length,l.shape.length)),o=[o[0]],Xn("argMin",o,l.shape.length);const[u,h]=Pn(l.shape,o),d=ht(u),f=Qn(d,"int32"),p=ht(h),g=e.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const x=m*p;let v=g[x],y=0;for(let b=0;b<p;++b){const w=g[x+b];w<v&&(v=w,y=b)}f[m]=y}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(u,"int32",f)}const Fj={kernelName:Kf,backendName:"cpu",kernelFunc:Dj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lj=Pe(Au,s=>Math.asin(s)),Pj={kernelName:Au,backendName:"cpu",kernelFunc:Lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oj=Pe(Nu,s=>Math.asinh(s)),zj={kernelName:Nu,backendName:"cpu",kernelFunc:Oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bj=Pe(Ru,s=>Math.atan(s)),Uj={kernelName:Ru,backendName:"cpu",kernelFunc:Bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj=bn((s,t)=>Math.atan2(s,t)),Wj=On(Du,Vj),Gj={kernelName:Du,backendName:"cpu",kernelFunc:Wj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hj=Pe($u,s=>Math.atanh(s)),qj={kernelName:$u,backendName:"cpu",kernelFunc:Hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jb(s,t,e,n,i,r){const o=i.strideHeight,a=i.strideWidth,l=i.dilationHeight,c=i.dilationWidth,u=i.effectiveFilterHeight,h=i.effectiveFilterWidth,d=i.padInfo.top,f=i.padInfo.left,p=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=fe(i.outShape,e),m=g.values,x=i.outShape[1]*i.outShape[2]*i.outShape[3],v=i.outShape[2]*i.outShape[3],y=i.outShape[3];for(let b=0;b<i.batchSize;++b){const w=b*x,S=b*n[0];for(let C=0;C<i.inChannels;++C)for(let _=0;_<i.outHeight;++_){const I=_*o-d,T=Math.max(0,I),N=Math.min(i.inHeight,u+I),P=w+_*v;for(let E=0;E<i.outWidth;++E){const M=E*a-f,A=Math.max(0,M),R=Math.min(i.inWidth,h+M);let V=p,L=0,$=0;for(let H=T;H<N;H+=l){const W=S+H*n[1];for(let Z=A;Z<R;Z+=c){const it=W+Z*n[2],lt=s[it+C];r==="max"&&lt>V?V=lt:r==="avg"&&(L+=lt,$++)}if(isNaN(V))break}const U=P+E*y+C;m[U]=r==="avg"?L/$:V}}}return g}function QM(s,t,e,n,i=!1,r=!1){const o=fe(n.outShape,"int32"),a=n.strideHeight,l=n.strideWidth,c=n.dilationHeight,u=n.dilationWidth,h=n.effectiveFilterHeight,d=n.effectiveFilterWidth,f=n.padInfo.top,p=n.padInfo.left,g=fe(t,e,s);for(let m=0;m<n.batchSize;++m)for(let x=0;x<n.inChannels;++x)for(let v=0;v<n.outHeight;++v){const y=v*a-f;let b=y;for(;b<0;)b+=c;const w=Math.min(n.inHeight,h+y);for(let S=0;S<n.outWidth;++S){const C=S*l-p;let _=C;for(;_<0;)_+=u;const I=Math.min(n.inWidth,d+C);let T=Number.NEGATIVE_INFINITY,N=-1;for(let P=b;P<w;P+=c){const E=P-y;for(let M=_;M<I;M+=u){const A=M-C,R=g.get(m,P,M,x);R>T&&(T=R,i?N=r?((m*n.inHeight+P)*n.inWidth+M)*n.inChannels+x:(P*n.inWidth+M)*n.inChannels+x:N=E*d+A)}}o.set(N,m,v,S,x)}}return o}function tk(s,t,e,n,i,r){const o=i.strideDepth,a=i.strideHeight,l=i.strideWidth,c=i.dilationDepth,u=i.dilationHeight,h=i.dilationWidth,d=i.effectiveFilterDepth,f=i.effectiveFilterHeight,p=i.effectiveFilterWidth,g=i.padInfo.front,m=i.padInfo.top,x=i.padInfo.left,v=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=fe(i.outShape,e),b=y.values,w=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],S=i.outShape[2]*i.outShape[3]*i.outShape[4],C=i.outShape[3]*i.outShape[4],_=i.outShape[4];for(let I=0;I<i.batchSize;++I){const T=I*w,N=I*n[0];for(let P=0;P<i.inChannels;++P)for(let E=0;E<i.outDepth;++E){const M=E*o-g;let A=M;for(;A<0;)A+=c;const R=Math.min(i.inDepth,d+M),V=T+E*S;for(let L=0;L<i.outHeight;++L){const $=L*a-m;let U=$;for(;U<0;)U+=u;const H=Math.min(i.inHeight,f+$),W=V+L*C;for(let Z=0;Z<i.outWidth;++Z){const it=Z*l-x;let lt=it;for(;lt<0;)lt+=h;const J=Math.min(i.inWidth,p+it),vt=W+Z*_;let mt=v,xt=0,dt=0;for(let yt=A;yt<R;yt+=c){const Tt=N+yt*n[1];for(let ne=U;ne<H;ne+=u){const re=Tt+ne*n[2];for(let se=lt;se<J;se+=h){const ye=re+se*n[3],ue=s[ye+P];if(r==="max"&&ue>mt?mt=ue:r==="avg"&&(xt+=ue,dt++),isNaN(mt))break}if(isNaN(mt))break}if(isNaN(mt))break}const rt=vt+P;b[rt]=r==="avg"?xt/dt:mt}}}}return y}function Xj(s,t){const e=fe(t.outShape,"int32"),n=t.strideDepth,i=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,p=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let x=0;x<t.outDepth;++x){const v=x*n-d;let y=v;for(;y<0;)y+=o;const b=Math.min(t.inDepth,c+v);for(let w=0;w<t.outHeight;++w){const S=w*i-f;let C=S;for(;C<0;)C+=a;const _=Math.min(t.inHeight,u+S);for(let I=0;I<t.outWidth;++I){const T=I*r-p;let N=T;for(;N<0;)N+=l;const P=Math.min(t.inWidth,h+T);let E=Number.NEGATIVE_INFINITY,M=-1;for(let A=y;A<b;A+=o){const R=A-v;for(let V=C;V<_;V+=a){const L=V-S;for(let $=N;$<P;$+=l){const U=$-T,H=s.get(g,A,V,$,m);H>=E&&(E=H,M=R*u*h+L*u+U)}}}e.set(M,g,x,w,I,m)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;zt(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;D(ts(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=bi(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&ke(u.inShape,u.outShape))h=mr({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=Zt(i.shape),p=jb(d,i.shape,i.dtype,f,u,"avg");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const Kj={kernelName:Yf,backendName:"cpu",kernelFunc:jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yj(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;zt(i,"avgPool3d");const u=Vr(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=tk(h,i.shape,i.dtype,Zt(i.shape),u,"avg");return e.makeTensorInfo(d.shape,"float32",d.values)}const Zj={kernelName:Zf,backendName:"cpu",kernelFunc:Yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;zt([i,r],"avgPool3DGrad");const u=Vr(r.shape,o,a,1,l,c),h=u.strideDepth,d=u.strideHeight,f=u.strideWidth,p=u.filterDepth,g=u.filterHeight,m=u.filterWidth,x=u.dilationDepth,v=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,S=u.effectiveFilterWidth,C=b-1-u.padInfo.front,_=S-1-u.padInfo.left,I=w-1-u.padInfo.top,T=fe(r.shape,"float32"),N=1/(p*g*m),P=e.bufferSync(i);for(let E=0;E<u.batchSize;++E)for(let M=0;M<u.inChannels;++M)for(let A=0;A<u.inDepth;++A)for(let R=0;R<u.inHeight;++R)for(let V=0;V<u.inWidth;++V){const L=A-C,$=R-I,U=V-_;let H=0;for(let W=0;W<b;W+=x){const Z=(L+W)/h;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let it=0;it<w;it+=v){const lt=($+it)/d;if(!(lt<0||lt>=u.outHeight||Math.floor(lt)!==lt))for(let J=0;J<S;J+=y){const vt=(U+J)/f;if(vt<0||vt>=u.outWidth||Math.floor(vt)!==vt)continue;const mt=P.get(E,Z,lt,vt,M);H+=mt}}}T.set(H*N,E,A,R,V,M)}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const Qj={kernelName:x0,backendName:"cpu",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t9(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;zt([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=bi(o.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,f=u.filterHeight,p=u.filterWidth,g=u.dilationHeight,m=u.dilationWidth,x=u.effectiveFilterHeight,v=u.effectiveFilterWidth,y=v-1-u.padInfo.left,b=x-1-u.padInfo.top,w=fe(o.shape,"float32"),S=1/(f*p),C=e.data.get(i.dataId).values,_=fe(i.shape,"float32",C);for(let I=0;I<u.batchSize;++I)for(let T=0;T<u.inChannels;++T)for(let N=0;N<u.inHeight;++N)for(let P=0;P<u.inWidth;++P){const E=N-b,M=P-y;let A=0;for(let R=0;R<x;R+=g){const V=(E+R)/h;if(!(V<0||V>=u.outHeight||Math.floor(V)!==V))for(let L=0;L<v;L+=m){const $=(M+L)/d;if($<0||$>=u.outWidth||Math.floor($)!==$)continue;const U=_.get(I,V,$,T);A+=U}}w.set(A*S,I,N,P,T)}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const e9={kernelName:g0,backendName:"cpu",kernelFunc:t9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,scale:r,offset:o,mean:a,variance:l}=t;D(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),zt([i,a,l,r,o],"batchNorm");let{varianceEpsilon:c}=n;c==null&&(c=.001);const u=e.data.get(i.dataId).values,h=e.data.get(a.dataId).values,d=e.data.get(l.dataId).values,f=r?e.data.get(r.dataId).values:new Float32Array([1]),p=o?e.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(u.length),m=p.length,x=f.length,v=d.length,y=h.length;let b=0,w=0,S=0,C=0;for(let _=0;_<u.length;++_)g[_]=p[b++]+(u[_]-h[w++])*f[S++]/Math.sqrt(d[C++]+c),b>=m&&(b=0),w>=y&&(w=0),S>=x&&(S=0),C>=v&&(C=0);return e.makeTensorInfo(i.shape,i.dtype,g)}const s9={kernelName:up,backendName:"cpu",kernelFunc:n9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;zt([i],"batchToSpaceND");const a=r.reduce((x,v)=>x*v),l=Ah(i.shape,r,a),c=Nh(l.length,r.length),u=Rh(i.shape,r,a),h=eb(o,r.length),d=nb(u,o,r.length),f=We({inputs:{x:i},backend:e,attrs:{shape:l}}),p=gs({inputs:{x:f},backend:e,attrs:{perm:c}}),g=We({inputs:{x:p},backend:e,attrs:{shape:u}}),m=Aa({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const r9={kernelName:Qf,backendName:"cpu",kernelFunc:i9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=Wb(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const a9={kernelName:v0,backendName:"cpu",kernelFunc:o9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l9(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.data.get(n.dataId).values,o=e.data.get(i.dataId).values,a=ae(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const c9={kernelName:DC,backendName:"cpu",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u9=Pe(Pu,(s,t)=>{const e=t;return s>e.clipValueMax?e.clipValueMax:s<e.clipValueMin?e.clipValueMin:s}),h9={kernelName:Pu,backendName:"cpu",kernelFunc:u9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d9=s=>{const{x:t}=s.inputs,e=s.backend,n=new Float32Array(ht(t.shape)),i=e.data.get(t.dataId),r=i.complexTensorInfos.real,o=i.complexTensorInfos.imag,a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];n[c]=Math.hypot(u,h)}return e.makeOutput(n,t.shape,"float32")},f9={kernelName:tp,backendName:"cpu",kernelFunc:d9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ec(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.data.get(n.dataId).complexTensorInfos.imag,r=e.data.get(i.dataId).values;return e.makeTensorInfo(i.shape,i.dtype,r)}const p9={kernelName:D0,backendName:"cpu",kernelFunc:ec};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nc(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=pe(i,t[0].shape)[0],o=t.map(g=>g.shape);Jv(o,r);let a=hr(t.map(g=>g.shape),r);if(ht(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(g=>ht(g.shape)>0);if(l.length===1)return mr({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){const g=l.map(b=>ka({inputs:{input:b},backend:e})),m=l.map(b=>ec({inputs:{input:b},backend:e})),x=nc({inputs:g,backend:e,attrs:{axis:r}}),v=nc({inputs:m,backend:e,attrs:{axis:r}}),y=Ss({inputs:{real:x,imag:v},backend:e});return g.forEach(b=>e.disposeIntermediateTensorInfo(b)),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),y}const c=l.map(g=>{const x=[-1,ht(g.shape.slice(r))];return We({inputs:{x:g},backend:e,attrs:{shape:x}})}),u=c.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));a=hr(c.map(g=>g.shape),1);const h=c[0].shape[0]===1,d=aM(u,a,t[0].dtype,h),f=hr(l.map(g=>g.shape),r),p=e.makeTensorInfo(f,t[0].dtype,d);return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const m9={kernelName:ep,backendName:"cpu",kernelFunc:nc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n;zt([i,r],"conv2d");const h=Wr(l),d=qn(i.shape,r.shape,o,c,a,u,!1,h),f=d.filterHeight,p=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,x=d.padInfo.left,v=d.padInfo.top,y=d.dataFormat==="channelsLast",b=new Zn(d.outShape,i.dtype),w=Zt(i.shape),S=Zt(r.shape),C=w[0],_=y?w[1]:w[2],I=y?w[2]:1,T=y?1:w[1],N=b.strides[0],P=y?b.strides[1]:b.strides[2],E=y?b.strides[2]:1,M=y?1:b.strides[1],A=e.data.get(i.dataId).values,R=e.data.get(r.dataId).values,V=b.values;for(let L=0;L<d.batchSize;++L){const $=L*C,U=L*N;for(let H=0;H<d.outHeight;++H){const W=U+H*P,Z=H*d.strideHeight-v;for(let it=0;it<f;++it){const lt=Z+it*g;if(lt<0||lt>=d.inHeight)continue;const J=it*S[0],vt=$+lt*_;for(let mt=0;mt<d.outWidth;++mt){const xt=W+mt*E,dt=mt*d.strideWidth-x;for(let rt=0;rt<p;++rt){const yt=dt+rt*m;if(yt<0||yt>=d.inWidth)continue;const Tt=J+rt*S[1],ne=vt+yt*I;let re=Tt;for(let se=0;se<d.inChannels;++se){const ye=A[ne+se*T];for(let ue=0;ue<d.outChannels;++ue)V[xt+ue*M]+=ye*R[re+ue];re+=d.outChannels}}}}}}return e.makeTensorInfo(b.shape,b.dtype,V)}const g9={kernelName:np,backendName:"cpu",kernelFunc:ek};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n;zt([i,r],"conv2dBackpropFilter");const h=Wr(l),d=qn(i.shape,u,o,1,a,c,!1,h),{strideHeight:f,strideWidth:p,filterHeight:g,filterWidth:m}=d,x=d.dataFormat==="channelsLast",v=new Zn(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,w=e.data.get(i.dataId).values,S=e.data.get(r.dataId).values,C=new Zn(i.shape,i.dtype,w),_=new Zn(r.shape,r.dtype,S);for(let I=0;I<g;++I){const T=Math.max(0,Math.ceil((b-I)/f)),N=Math.min(d.outHeight,(d.inHeight+b-I)/f);for(let P=0;P<m;++P){const E=Math.max(0,Math.ceil((y-P)/p)),M=Math.min(d.outWidth,(d.inWidth+y-P)/p);for(let A=0;A<d.inChannels;++A)for(let R=0;R<d.outChannels;++R){let V=0;for(let L=0;L<d.batchSize;++L)for(let $=T;$<N;++$){const U=I+$*f-b;for(let H=E;H<M;++H){const W=P+H*p-y;x?V+=C.get(L,U,W,A)*_.get(L,$,H,R):V+=C.get(L,A,U,W)*_.get(L,R,$,H)}}v.set(V,I,P,A,R)}}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const v9={kernelName:y0,backendName:"cpu",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n;zt([i,r],"conv2dBackpropInput");const h=Zt(r.shape),d=Zt(i.shape);let f=Wr(c);const p=qn(o,r.shape,a,1,l,u,!1,f),g=new Zn(p.inShape,"float32"),m=g.values,x=e.data.get(i.dataId).values,v=e.data.get(r.dataId).values,[y,b,w]=h,{batchSize:S,filterHeight:C,filterWidth:_,inChannels:I,inHeight:T,inWidth:N,outChannels:P,outHeight:E,outWidth:M,strideHeight:A,strideWidth:R}=p;f=p.dataFormat;const V=C-1-p.padInfo.top,L=_-1-p.padInfo.left,$=f==="channelsLast",U=g.strides[0],H=$?g.strides[1]:g.strides[2],W=$?g.strides[2]:1,Z=$?1:g.strides[1],it=d[0],lt=$?d[1]:d[2],J=$?d[2]:1,vt=$?1:d[1];for(let mt=0;mt<S;++mt)for(let xt=0;xt<I;++xt)for(let dt=0;dt<T;++dt){const rt=dt-V,yt=Math.max(0,Math.ceil(rt/A)),Tt=Math.min(E,(C+rt)/A);for(let ne=0;ne<N;++ne){const re=ne-L,se=Math.max(0,Math.ceil(re/R)),ye=Math.min(M,(_+re)/R);let ue=0;for(let Ne=yt;Ne<Tt;++Ne){const pn=Ne*A-rt;for(let B=se;B<ye;++B){const F=B*R-re,ut=it*mt+lt*Ne+J*B,St=y*(C-1-pn)+b*(_-1-F)+w*xt;for(let Ct=0;Ct<P;++Ct){const Mt=x[ut+vt*Ct],Jt=v[St+Ct];ue+=Mt*Jt}}}const me=U*mt+H*dt+W*ne+Z*xt;m[me]=ue}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const y9={kernelName:sp,backendName:"cpu",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n;zt([i,r],"conv3d");const c=So(i.shape,r.shape,o,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:g,padInfo:m}=c,x=m.front,v=m.left,y=m.top,b=new Zn(c.outShape,i.dtype),w=e.data.get(i.dataId).values,S=e.data.get(r.dataId).values,C=b.values,_=Zt(i.shape),I=Zt(r.shape);for(let T=0;T<c.batchSize;++T){const N=T*_[0],P=T*b.strides[0];for(let E=0;E<c.outDepth;++E){const M=P+E*b.strides[1],A=E*c.strideDepth-x;for(let R=0;R<u;++R){const V=A+R*f;if(V<0||V>=c.inDepth)continue;const L=R*I[0],$=N+V*_[1];for(let U=0;U<c.outHeight;++U){const H=M+U*b.strides[2],W=U*c.strideHeight-y;for(let Z=0;Z<h;++Z){const it=W+Z*p;if(it<0||it>=c.inHeight)continue;const lt=L+Z*I[1],J=$+it*_[2];for(let vt=0;vt<c.outWidth;++vt){const mt=H+vt*c.outChannels,xt=vt*c.strideWidth-v;for(let dt=0;dt<d;++dt){const rt=xt+dt*g;if(rt<0||rt>=c.inWidth)continue;const yt=lt+dt*I[2],Tt=J+rt*c.inChannels;let ne=yt;for(let re=0;re<c.inChannels;++re){const se=w[Tt+re];for(let ye=0;ye<c.outChannels;++ye)C[mt+ye]+=se*S[ne+ye];ne+=c.outChannels}}}}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const _9={kernelName:ip,backendName:"cpu",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n;zt([i,r],"conv3dBackpropFilterV2");const c=Zt(i.shape),u=Zt(r.shape),h=So(i.shape,l,o,1,a),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,g=h.filterDepth,m=h.filterHeight,x=h.filterWidth,v=new Zn(h.filterShape,"float32"),y=v.values,[b,w,S,C]=v.strides,_=e.data.get(r.dataId).values,[I,T,N,P]=u,E=e.data.get(i.dataId).values,[M,A,R,V]=c,L=h.padInfo.front,$=h.padInfo.left,U=h.padInfo.top;for(let H=0;H<g;++H){const W=Math.max(0,Math.ceil((L-H)/d)),Z=Math.min(h.outDepth,(h.inDepth+L-H)/d),it=H*b;for(let lt=0;lt<m;++lt){const J=Math.max(0,Math.ceil((U-lt)/f)),vt=Math.min(h.outHeight,(h.inHeight+U-lt)/f),mt=lt*w+it;for(let xt=0;xt<x;++xt){const dt=Math.max(0,Math.ceil(($-xt)/p)),rt=Math.min(h.outWidth,(h.inWidth+$-xt)/p),yt=xt*S+mt;for(let Tt=0;Tt<h.inChannels;++Tt){const ne=Tt*C+yt;for(let re=0;re<h.outChannels;++re){let se=0;for(let ye=0;ye<h.batchSize;++ye){const ue=ye*M,me=ye*I;for(let Ne=W;Ne<Z;++Ne){const B=(H+Ne*d-L)*A+ue,F=Ne*T+me;for(let ut=J;ut<vt;++ut){const Ct=(lt+ut*f-U)*R+B,Mt=ut*N+F;for(let Jt=dt;Jt<rt;++Jt){const et=(xt+Jt*p-$)*V+Ct,Dt=Jt*P+Mt;se+=E[et+Tt]*_[Dt+re]}}}}y[ne+re]=se}}}}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const C9={kernelName:w0,backendName:"cpu",kernelFunc:S9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n;zt([i],"conv3dBackpropInputV2");const c=Zt(i.shape),u=Zt(r.shape),h=So(l,r.shape,a,1,o),d=new Zn(h.inShape,"float32"),f=d.values,[p,g,m,x]=d.strides,v=e.data.get(i.dataId).values,[y,b,w,S]=c,C=e.data.get(r.dataId).values,[_,I,T,N]=u,{batchSize:P,filterDepth:E,filterHeight:M,filterWidth:A,inChannels:R,inDepth:V,inHeight:L,inWidth:$,outChannels:U,outDepth:H,outHeight:W,outWidth:Z,strideDepth:it,strideHeight:lt,strideWidth:J}=h,vt=E-1-h.padInfo.front,mt=M-1-h.padInfo.top,xt=A-1-h.padInfo.left;for(let dt=0;dt<P;++dt)for(let rt=0;rt<R;++rt)for(let yt=0;yt<V;++yt){const Tt=yt-vt,ne=Math.max(0,Math.ceil(Tt/it)),re=Math.min(H,(E+Tt)/it);for(let se=0;se<L;++se){const ye=se-mt,ue=Math.max(0,Math.ceil(ye/lt)),me=Math.min(W,(M+ye)/lt);for(let Ne=0;Ne<$;++Ne){const pn=Ne-xt,B=Math.max(0,Math.ceil(pn/J)),F=Math.min(Z,(A+pn)/J);let ut=0;for(let St=ne;St<re;++St){const Ct=St*it-Tt;for(let Mt=ue;Mt<me;++Mt){const Jt=Mt*lt-ye;for(let G=B;G<F;++G){const et=G*J-pn,Dt=y*dt+b*St+w*Mt+S*G,Lt=_*(E-1-Ct)+I*(M-1-Jt)+T*(A-1-et)+N*rt;for(let Rt=0;Rt<U;++Rt){const Kt=v[Dt+Rt],Xt=C[Lt+Rt];ut+=Kt*Xt}}}}f[p*dt+g*yt+m*se+x*Ne+rt]=ut}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}const T9={kernelName:_0,backendName:"cpu",kernelFunc:I9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E9=Pe(Ou,s=>Math.cos(s)),M9={kernelName:Ou,backendName:"cpu",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k9=Pe(zu,s=>Math.cosh(s)),A9={kernelName:zu,backendName:"cpu",kernelFunc:k9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,[u,h,d,f]=i.shape,p=r.shape[0],[g,m]=a,x=fe([p,g,m,f],"float32"),v=e.data.get(r.dataId).values,y=e.data.get(o.dataId).values,b=e.data.get(i.dataId).values,w=Zt(i.shape),S=Zt(x.shape);for(let C=0;C<p;C++){const _=C*4,I=v[_],T=v[_+1],N=v[_+2],P=v[_+3],E=y[C];if(E>=u)continue;const M=g>1?(N-I)*(h-1)/(g-1):0,A=m>1?(P-T)*(d-1)/(m-1):0;for(let R=0;R<g;R++){const V=g>1?I*(h-1)+R*M:.5*(I+N)*(h-1);if(V<0||V>h-1){for(let L=0;L<m;L++)for(let $=0;$<f;$++){const U=$+L*S[2]+R*S[1]+C*S[0];x.values[U]=c}continue}if(l==="bilinear"){const L=Math.floor(V),$=Math.ceil(V),U=V-L;for(let H=0;H<m;H++){const W=m>1?T*(d-1)+H*A:.5*(T+P)*(d-1);if(W<0||W>d-1){for(let J=0;J<f;J++){const vt=J+H*S[2]+R*S[1]+C*S[0];x.values[vt]=c}continue}const Z=Math.floor(W),it=Math.ceil(W),lt=W-Z;for(let J=0;J<f;J++){let vt=J+Z*w[2]+L*w[1]+E*w[0];const mt=b[vt];vt=J+it*w[2]+L*w[1]+E*w[0];const xt=b[vt];vt=J+Z*w[2]+$*w[1]+E*w[0];const dt=b[vt];vt=J+it*w[2]+$*w[1]+E*w[0];const rt=b[vt],yt=mt+(xt-mt)*lt,Tt=dt+(rt-dt)*lt;vt=J+H*S[2]+R*S[1]+C*S[0],x.values[vt]=yt+(Tt-yt)*U}}}else for(let L=0;L<m;++L){const $=m>1?T*(d-1)+L*A:.5*(T+P)*(d-1);if($<0||$>d-1){for(let W=0;W<f;W++){const Z=W+L*S[2]+R*S[1]+C*S[0];x.values[Z]=c}continue}const U=Math.round($),H=Math.round(V);for(let W=0;W<f;W++){const Z=W+U*w[2]+H*w[1]+E*w[0],it=W+L*S[2]+R*S[1]+C*S[0];x.values[it]=b[Z]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const R9={kernelName:C0,backendName:"cpu",kernelFunc:N9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;zt(i,"cumprod");const l=sn([r],i.shape.length);let c=i;l!=null&&(c=gs({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=dn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Ts(c.dtype,"int32"),d=u0(ht(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,v)=>x+p-v-1:(x,v)=>x+v;for(let x=0;x<f.length;x+=p)for(let v=0;v<p;v++){const y=g(x,v);if(v===0)d[y]=o?1:f[y];else{const b=g(x,v-1);d[y]=o?f[b]*d[b]:f[y]*d[b]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Co(l),v=gs({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),v}return m}const D9={kernelName:S0,backendName:"cpu",kernelFunc:$9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;zt(i,"cumsum");const l=sn([r],i.shape.length);let c=i;l!=null&&(c=gs({inputs:{x:i},backend:e,attrs:{perm:l}}));const u=dn(1,i.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=Ts(c.dtype,"int32"),d=Qn(ht(c.shape),h),f=e.data.get(c.dataId).values,p=c.shape[c.shape.length-1],g=a?(x,v)=>x+p-v-1:(x,v)=>x+v;for(let x=0;x<f.length;x+=p)for(let v=0;v<p;v++){const y=g(x,v);if(v===0)d[y]=o?0:f[y];else{const b=g(x,v-1);d[y]=o?f[b]+d[b]:f[y]+d[b]}}const m=e.makeTensorInfo(c.shape,h,d);if(l!=null){const x=Co(l),v=gs({inputs:{x:m},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),v}return m}const L9={kernelName:rp,backendName:"cpu",kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Wb(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=rM(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const O9={kernelName:I0,backendName:"cpu",kernelFunc:P9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n;D(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=i.shape[0],l=i.shape[1],c=i.shape[2],u=i.shape[3],h=l*r,d=c*r,f=u/(r*r),p=e.data.get(i.dataId).values,g=new Float32Array(a*h*d*f);let m=0;for(let x=0;x<a;++x)for(let v=0;v<h;++v){const y=Math.floor(v/r),b=v%r;for(let w=0;w<d;++w){const S=Math.floor(w/r),C=w%r,_=(b*r+C)*f;for(let I=0;I<f;++I){const N=I+_+u*(S+c*(y+l*x));g[m++]=p[N]}}}return e.makeTensorInfo([a,h,d,f],i.dtype,g)}const B9={kernelName:T0,backendName:"cpu",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;zt([i,r],"depthwiseConv2DNative");const u=Zt(i.shape),h=Zt(r.shape);let d=l;d==null&&(d=[1,1]),D(ts(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=qn(i.shape,r.shape,o,d,a,c,!0),{filterHeight:p,filterWidth:g,dilationHeight:m,dilationWidth:x,padInfo:v}=f,y=v.left,b=v.top,w=f.outChannels/f.inChannels,S=new Zn(f.outShape,i.dtype),C=e.data.get(i.dataId).values,_=e.data.get(r.dataId).values,I=S.values;for(let T=0;T<f.batchSize;++T){const N=T*u[0],P=T*S.strides[0];for(let E=0;E<f.outHeight;++E){const M=P+E*S.strides[1],A=E*f.strideHeight-b;for(let R=0;R<p;++R){const V=A+R*m;if(V<0||V>=f.inHeight)continue;const L=R*h[0],$=N+V*u[1];for(let U=0;U<f.outWidth;++U){const H=M+U*S.strides[2],W=U*f.strideWidth-y;for(let Z=0;Z<g;++Z){const it=W+Z*x;if(it<0||it>=f.inWidth)continue;const lt=L+Z*h[1],J=$+it*f.inChannels;let vt=H,mt=lt;for(let xt=0;xt<f.inChannels;++xt){const dt=C[J+xt];for(let rt=0;rt<w;++rt)I[vt+rt]+=dt*_[mt+rt];vt+=w,mt+=w}}}}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const U9={kernelName:op,backendName:"cpu",kernelFunc:nk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V9(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n;zt([i,r],"depthwiseConv2dNativeBackpropFilter");const h=qn(i.shape,u,o,a,l,c,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:g}=h,m=new Zn(h.filterShape,"float32"),x=h.padInfo.left,v=h.padInfo.top,y=h.outChannels/h.inChannels,b=e.data.get(i.dataId).values,w=new Zn(i.shape,i.dtype,b),S=e.data.get(r.dataId).values,C=new Zn(r.shape,r.dtype,S);for(let _=0;_<p;++_){const I=Math.max(0,Math.ceil((v-_)/d)),T=Math.min(h.outHeight,(h.inHeight+v-_)/d);for(let N=0;N<g;++N){const P=Math.max(0,Math.ceil((x-N)/f)),E=Math.min(h.outWidth,(h.inWidth+x-N)/f);for(let M=0;M<h.outChannels;++M){const A=Math.trunc(M/y),R=M%y;let V=0;for(let L=0;L<h.batchSize;++L)for(let $=I;$<T;++$){const U=_+$*d-v;for(let H=P;H<E;++H){const W=N+H*f-x;V+=w.get(L,U,W,A)*C.get(L,$,H,M)}}m.set(V,_,N,A,R)}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const W9={kernelName:E0,backendName:"cpu",kernelFunc:V9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n;zt([i,r],"depthwiseConv2DNativeBackpropInput");const h=Zt(i.shape),d=Zt(r.shape),f=qn(u,r.shape,o,a,l,c,!0),p=new Zn(f.inShape,"float32"),g=p.values,[m,x,v]=p.strides,y=e.data.get(i.dataId).values,[b,w,S]=h,C=e.data.get(r.dataId).values,[_,I,T]=d,{batchSize:N,filterHeight:P,filterWidth:E,inChannels:M,inHeight:A,inWidth:R,outChannels:V,outHeight:L,outWidth:$,strideHeight:U,strideWidth:H}=f,W=P-1-f.padInfo.top,Z=E-1-f.padInfo.left,it=V/M;for(let lt=0;lt<N;++lt)for(let J=0;J<M;++J)for(let vt=0;vt<A;++vt){const mt=vt-W,xt=Math.max(0,Math.ceil(mt/U)),dt=Math.min(L,(P+mt)/U);for(let rt=0;rt<R;++rt){const yt=rt-Z,Tt=Math.max(0,Math.ceil(yt/H)),ne=Math.min($,(E+yt)/H);let re=0;for(let se=xt;se<dt;++se){const ye=se*U-mt;for(let ue=Tt;ue<ne;++ue){const me=ue*H-yt,Ne=b*lt+w*se+S*ue,pn=_*(P-1-ye)+I*(E-1-me)+T*J;for(let B=0;B<it;++B){const F=J*it+B,ut=y[Ne+F],St=C[pn+B];re+=ut*St}}}g[m*lt+x*vt+v*rt+J]=re}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}const H9={kernelName:M0,backendName:"cpu",kernelFunc:G9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q9(s){const{inputs:t,backend:e}=s,{x:n}=t,i=ht(n.shape),r=e.data.get(n.dataId).values,o=fe([i,i],n.dtype),a=o.values;for(let c=0;c<r.length;c++)a[c*i+c]=r[c];const l=[...n.shape,...n.shape];return e.makeTensorInfo(l,o.dtype,o.values)}const X9={kernelName:FC,backendName:"cpu",kernelFunc:q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j9={kernelName:ap,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i}=s,{strides:r,pad:o,dilations:a}=e,l=t,c=l.data.get(n.dataId).values,u=n.shape.length,h=l.data.get(i.dataId).values,d=i.shape.length,{batchSize:f,inHeight:p,inWidth:g,inChannels:m,outHeight:x,outWidth:v,padInfo:y,strideHeight:b,strideWidth:w,filterHeight:S,filterWidth:C,dilationHeight:_,dilationWidth:I,outShape:T}=Ch(n.shape,i.shape,r,o,"NHWC",a),N=ht(T),P=T.length,E=gn(n.dtype,N);for(let A=0;A<f;++A)for(let R=0;R<x;++R){const V=R*b-y.top;for(let L=0;L<v;++L){const $=L*w-y.left;for(let U=0;U<m;++U){let H=Number.MIN_SAFE_INTEGER;for(let Z=0;Z<S;++Z){const it=V+Z*_;if(it>=0&&it<p)for(let lt=0;lt<C;++lt){const J=$+lt*I;if(J>=0&&J<g){const vt=ur([A,it,J,U],u,Zt(n.shape)),mt=ur([Z,lt,U],d,Zt(i.shape)),xt=c[vt]+h[mt];xt>H&&(H=xt)}}}const W=ur([A,R,L,U],P,Zt(T));E[W]=H}}}return{dataId:l.write(La(E,n.dtype),T,n.dtype),shape:T,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K9={kernelName:lx,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Pi(n.shape,c.data.get(n.dataId).values),h=Pi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:v,strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:C,dilationWidth:_,outShape:I}=Ch(n.shape,i.shape,o,a,"NHWC",l);D(r.rank===I.length,()=>`Error in ${lx}, dy must have the same rank as output ${I.length}, but got ${r.rank}`);const T=Pi(I,c.data.get(r.dataId).values),N=AC(i.shape,i.dtype);for(let E=0;E<d;++E)for(let M=0;M<m;++M){const A=M*y-v.top;for(let R=0;R<x;++R){const V=R*b-v.left;for(let L=0;L<g;++L){let $=Number.MIN_SAFE_INTEGER,U=0,H=0;for(let W=0;W<w;++W){const Z=A+W*C;if(Z>=0&&Z<f)for(let it=0;it<S;++it){const lt=V+it*_;if(lt>=0&&lt<p){const J=u[E][Z][lt][L]+h[W][it][L];J>$&&($=J,U=W,H=it)}}}N[U][H][L]+=T[E][M][R][L]}}}return{dataId:c.write(La(N,n.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y9={kernelName:ax,backendName:"cpu",kernelFunc:({inputs:s,backend:t,attrs:e})=>{const{x:n,filter:i,dy:r}=s,{strides:o,pad:a,dilations:l}=e,c=t,u=Pi(n.shape,c.data.get(n.dataId).values),h=Pi(i.shape,c.data.get(i.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:g,outHeight:m,outWidth:x,padInfo:v,strideHeight:y,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:C,dilationWidth:_,outShape:I}=Ch(n.shape,i.shape,o,a,"NHWC",l);D(r.rank===I.length,()=>`Error in ${ax}, dy must have the same rank as output ${I.length}, but got ${r.rank}`);const T=Pi(I,c.data.get(r.dataId).values),N=AC(n.shape,n.dtype);for(let E=0;E<d;++E)for(let M=0;M<m;++M){const A=M*y-v.top;for(let R=0;R<x;++R){const V=R*b-v.left;for(let L=0;L<g;++L){let $=Number.MIN_SAFE_INTEGER,U=A<0?0:A,H=V<0?0:V;for(let W=0;W<w;++W){const Z=A+W*C;if(Z>=0&&Z<f)for(let it=0;it<S;++it){const lt=V+it*_;if(lt>=0&&lt<p){const J=u[E][Z][lt][L]+h[W][it][L];J>$&&($=J,U=Z,H=lt)}}}N[E][U][H][L]+=T[E][M][R][L]}}}return{dataId:c.write(La(N,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uh(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;zt(i,"sum");let a;i.dtype==="bool"?a=xo({inputs:{x:i},backend:e,attrs:{dtype:"int32"}}):a=mr({inputs:{x:i},backend:e});const l=a.shape.length,c=pe(r,a.shape),u=sn(c,l);let h=c,d=a;u!=null&&(d=gs({inputs:{x:a},backend:e,attrs:{perm:u}}),h=dn(h.length,l)),Xn("sum",h,d.shape.length);const[f,p]=Pn(d.shape,h),g=Ts(d.dtype,"int32");let m=If(e,f,g);const x=ht(p),v=e.data.get(m.dataId).values,y=e.data.get(d.dataId).values;for(let b=0;b<v.length;++b){const w=b*x;let S=0;for(let C=0;C<x;++C)S+=y[w+C];v[b]=S}if(o){const b=hn(m.shape,c),w=m;m=We({inputs:{x:m},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(w)}return e.disposeIntermediateTensorInfo(a),u!=null&&e.disposeIntermediateTensorInfo(d),m}const Z9={kernelName:Bp,backendName:"cpu",kernelFunc:Uh};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J9(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=ub(i,r.length);db(o.length,l,r);const{path:c,steps:u}=fb(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:v}=hb(f,l[m]);let y;pb(x)?y=r[m]:(y=gs({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(y));const b=y.shape.slice();for(let w=0;w<v.length;++w)b.splice(v[w],0,1);ke(y.shape,b)||(y=We({inputs:{x:y},backend:e,attrs:{shape:b}}),p.push(y)),d===null?d=y:(d=ym({inputs:{a:y,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=Uh({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const Q9={kernelName:LC,backendName:"cpu",kernelFunc:J9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(s){const{inputs:t,backend:e}=s,{dy:n,y:i}=t;zt([n,i],"eluGrad");const r=new Float32Array(ht(i.shape)),o=e.data.get(i.dataId).values,a=e.data.get(n.dataId).values;for(let l=0;l<o.length;++l){const c=o[l];c>=1?r[l]=a[l]:r[l]=a[l]*(c+1)}return e.makeTensorInfo(i.shape,"float32",r)}const e7={kernelName:k0,backendName:"cpu",kernelFunc:t7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7=sb,s7=ib,i7=rb,r7=ob,o7=ab,a7=lb,l7=Pe(Vu,s=>{const t=Math.sign(s),e=Math.abs(s),n=1/(1+n7*e);return t*(1-((((a7*n+o7)*n+r7)*n+i7)*n+s7)*n*Math.exp(-e*e))}),c7={kernelName:Vu,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(s){const{inputs:t,backend:e,attrs:n}=s,{input:i}=t,{dim:r}=n,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(D(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),We({inputs:{x:i},backend:e,attrs:{shape:a}})}const u7={kernelName:cp,backendName:"cpu",kernelFunc:Mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7=bn((s,t)=>s/t),Kb=On(Bu,h7),Ox={kernelName:Bu,backendName:"cpu",kernelFunc:Kb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(s,t,e){const n=s.shape,i=n[0],r=n[1],o=e.data.get(s.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[i,r],u=ht(c),h=Gn("float32",u),d=Gn("float32",u);for(let m=0;m<i;m++){const x=Aa({inputs:{x:a},backend:e,attrs:{begin:[m,0],size:[1,r]}}),v=Aa({inputs:{x:l},backend:e,attrs:{begin:[m,0],size:[1,r]}}),y=Ss({inputs:{real:x,imag:v},backend:e}),{real:b,imag:w}=d7(y,t,e),S=Br(b,w);for(let C=0;C<r;C++){const _=cb(S,C);h[m*r+C]=_.real,d[m*r+C]=_.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(y)}const f=e.makeTensorInfo(c,"float32",h),p=e.makeTensorInfo(c,"float32",d),g=Ss({inputs:{real:f,imag:p},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}function d7(s,t,e){const n=ht(s.shape),i=e.data.get(s.dataId),r=e.data.get(i.complexTensorInfos.real.dataId).values,o=e.data.get(i.complexTensorInfos.imag.dataId).values;if(f7(n)){const a=zx(r,o,n,t,e),l=[s.shape[0],s.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",a.real),u=e.makeTensorInfo(l,"float32",a.imag),h=e.makeTensorInfo([],"float32",_o(n,"float32")),d=mr({inputs:{x:h},backend:e}),f=Ox.kernelFunc({inputs:{a:c,b:h},backend:e}),p=Ox.kernelFunc({inputs:{a:u,b:d},backend:e}),g=e.data.get(f.dataId).values,m=e.data.get(p.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),{real:g,imag:m}}return a}else{const a=Br(r,o),l=p7(a,n,t);return bT(l)}}function f7(s){return(s&s-1)===0}function zx(s,t,e,n,i){if(e===1)return{real:s,imag:t};const r=Br(s,t),o=e/2,a=yT(r),l=a.real,c=a.imag,u=[l.length],h=i.makeTensorInfo(u,"float32",l),d=i.makeTensorInfo(u,"float32",c),f=Ss({inputs:{real:h,imag:d},backend:i}),p=wT(r),g=p.real,m=p.imag,x=[g.length],v=i.makeTensorInfo(x,"float32",g),y=i.makeTensorInfo(x,"float32",m),b=Ss({inputs:{real:v,imag:y},backend:i}),w=zx(l,c,o,n,i),S=w.real,C=w.imag,_=[S.length],I=i.makeTensorInfo(_,"float32",S),T=i.makeTensorInfo(_,"float32",C),N=Ss({inputs:{real:I,imag:T},backend:i}),P=zx(g,m,o,n,i),E=P.real,M=P.imag,A=[E.length],R=i.makeTensorInfo(A,"float32",E),V=i.makeTensorInfo(A,"float32",M),L=Ss({inputs:{real:R,imag:V},backend:i}),$=ST(e,n),U=[$.real.length],H=i.makeTensorInfo(U,"float32",$.real),W=i.makeTensorInfo(U,"float32",$.imag),Z=Ss({inputs:{real:H,imag:W},backend:i}),it=ym({inputs:{a:Z,b:L},backend:i}),lt=tc({inputs:{a:N,b:it},backend:i}),J=Xb({inputs:{a:N,b:it},backend:i}),vt=ka({inputs:{input:lt},backend:i}),mt=ka({inputs:{input:J},backend:i}),xt=ec({inputs:{input:lt},backend:i}),dt=ec({inputs:{input:J},backend:i}),rt=nc({inputs:[vt,mt],backend:i,attrs:{axis:0}}),yt=nc({inputs:[xt,dt],backend:i,attrs:{axis:0}}),Tt=i.data.get(rt.dataId).values,ne=i.data.get(yt.dataId).values;return i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(d),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(I),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(R),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(Z),i.disposeIntermediateTensorInfo(it),i.disposeIntermediateTensorInfo(lt),i.disposeIntermediateTensorInfo(J),i.disposeIntermediateTensorInfo(vt),i.disposeIntermediateTensorInfo(xt),i.disposeIntermediateTensorInfo(mt),i.disposeIntermediateTensorInfo(dt),i.disposeIntermediateTensorInfo(rt),i.disposeIntermediateTensorInfo(yt),{real:Tt,imag:ne}}function p7(s,t,e){const n=new Float32Array(t*2);for(let i=0;i<t;i++){let r=0,o=0;for(let a=0;a<t;a++){const l=CT(i*a,t,e),c=cb(s,a);r+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}e&&(r/=t,o/=t),_T(n,r,o,i)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(s){const{inputs:t,backend:e}=s,{input:n}=t,i=ht(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=We({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=sk(a,!1,e),c=We({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const g7={kernelName:A0,backendName:"cpu",kernelFunc:m7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(s){const{backend:t,attrs:e}=s,{shape:n,value:i,dtype:r}=e,o=r||Eu(i),a=gn(o,ht(n));return v7(a,i,o),t.makeTensorInfo(n,o,a)}const x7={kernelName:N0,backendName:"cpu",kernelFunc:Yb};function v7(s,t,e){s.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b7={kernelName:R0,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,i=e,r=Gn(n.dtype,ht(n.shape)),[o,a,l,c]=n.shape,u=i.data.get(n.dataId).values;for(let d=0;d<o;d++){const f=d*l*a*c;for(let p=0;p<a;p++){const g=p*(l*c);for(let m=0;m<l;m++){const x=m*c;for(let v=0;v<c;v++){const y=Math.round(l-m-1),b=f+g+x+v;let w=u[b];if(y>=0&&y<l){const S=y*c,C=f+g+S+v;w=u[C]}r[b]=w}}}}return{dataId:i.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y7=bn((s,t)=>Math.floor(s/t)),w7=On(qu,y7,null,"int32"),_7={kernelName:qu,backendName:"cpu",kernelFunc:w7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=ek({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;if(u==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const x=We({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});g=tc({inputs:{a:g,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else g=tc({inputs:{a:g,b:o},backend:e});e.disposeIntermediateTensorInfo(m)}if(f){const m=g;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=We({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});g=Ef(e,g,f,x,p),e.disposeIntermediateTensorInfo(x)}else g=Ef(e,g,f,a,p);e.disposeIntermediateTensorInfo(m)}return g}const C7={kernelName:of,backendName:"cpu",kernelFunc:S7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n;let g=nk({inputs:{x:i,filter:r},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=g;g=tc({inputs:{a:g,b:o},backend:e}),e.disposeIntermediateTensorInfo(m)}if(f){const m=g;g=Ef(e,g,f,a,p),e.disposeIntermediateTensorInfo(m)}return g}const T7={kernelName:XC,backendName:"cpu",kernelFunc:I7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=ht(n.shape),o=i.shape,a=o[o.length-1],[l,c,u,h]=hv(n,i);if(c===0)return e.makeTensorInfo(l,n.dtype,[]);const d=e.data.get(i.dataId).values,f=e.bufferSync(n),p=pM(d,f,n.dtype,c,a,u,h,n.shape,r);return e.makeTensorInfo(l,n.dtype,p.values)}const M7={kernelName:PC,backendName:"cpu",kernelFunc:E7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n;zt([i,r],"gatherV2");const l=pe(o,i.shape)[0],c=e.data.get(r.dataId).values,u=i.shape[l];for(let b=0;b<c.length;++b){const w=c[b];D(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=ht(r.shape),f=gb(i,r,l,h),p=We({inputs:{x:i},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=We({inputs:{x:r},backend:e,attrs:{shape:[f.batchSize,d/f.batchSize]}}),m=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],x=e.bufferSync(g),v=e.bufferSync(p),y=mM(v,x,m);return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(f.outputShape,y.dtype,y.values)}const A7={kernelName:hp,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(s){const{inputs:t,backend:e}=s,{input:n}=t,i=ht(n.shape),r=n.shape[n.shape.length-1],o=i/r,a=We({inputs:{x:n},backend:e,attrs:{shape:[o,r]}}),l=sk(a,!0,e),c=We({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const R7={kernelName:$0,backendName:"cpu",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7=Pe(Ku,s=>Number.isFinite(s)?1:0,"bool"),D7={kernelName:Ku,backendName:"cpu",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F7=Pe(Yu,s=>Math.abs(s)===1/0?1:0,"bool"),L7={kernelName:Yu,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P7=Pe(Zu,s=>Number.isNaN(s)?1:0,"bool"),O7={kernelName:Zu,backendName:"cpu",kernelFunc:P7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z7(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=yM(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const B7={kernelName:OC,backendName:"cpu",kernelFunc:z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7=Pe(Qu,s=>Math.log1p(s)),V7={kernelName:Qu,backendName:"cpu",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W7=bn((s,t)=>s&&t),G7=On(gp,W7,null,"bool"),H7={kernelName:gp,backendName:"cpu",kernelFunc:G7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7=Pe(xp,s=>s?0:1,"bool"),X7={kernelName:xp,backendName:"cpu",kernelFunc:q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j7=bn((s,t)=>s||t),K7=On(vp,j7,null,"bool"),Y7={kernelName:vp,backendName:"cpu",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n;zt(i,"LRN");const c=i.shape[3],u=c-1,h=e.data.get(i.dataId).values,d=ht(i.shape),f=new Float32Array(d);function p(g){const m=g%c;let x=g-m+Math.max(0,m-r);const v=g-m+Math.min(m+r,u);let y=0;for(;x<=v;x++){const b=h[x];y+=b*b}return y}for(let g=0;g<d;g++){const m=p(g),x=h[g]*Math.pow(o+a*m,-l);f[g]=x}return e.makeTensorInfo(i.shape,i.dtype,f)}const J7={kernelName:bp,backendName:"cpu",kernelFunc:Z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n;zt(o,"LRNGrad");const h=ht(o.shape),d=o.shape[3],f=e.data.get(o.dataId).values,p=e.data.get(i.dataId).values,g=e.data.get(r.dataId).values,m=new Float32Array(h),x=h;for(let v=0;v<x;v++){const y=v%d,b=v-y+Math.max(0,y-a),w=v-y+Math.min(d,y+a+1);let S=0;for(let C=b;C<w;C++)S+=Math.pow(p[C],2);S=c*S+l;for(let C=b;C<w;C++){let _=-2*c*u*p[C]*g[v]/S;v===C&&(_+=Math.pow(S,-u)),_*=f[v],m[C]+=_}}return e.makeTensorInfo(o.shape,i.dtype,m)}const tK={kernelName:F0,backendName:"cpu",kernelFunc:Q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=e;let l=i.shape;const c=l.length,u=pe(r,l);let h=u;const d=sn(h,c);let f=a.data.get(i.dataId).values;if(d!=null){const b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[d[w]];f=Hb(f,l,i.dtype,d,b),h=dn(h.length,c),l=b}zt(i,"max"),Xn("max",h,c);const[p,g]=Pn(l,h),m=ht(g),x=_M(f,m,p,i.dtype),v=a.write(x,p,i.dtype);let y=p;return o&&(y=hn(p,u)),{dataId:v,shape:y,dtype:i.dtype}}const eK={kernelName:yp,backendName:"cpu",kernelFunc:ik};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;zt(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;D(ts(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=bi(i.shape,r,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&ke(u.inShape,u.outShape))h=mr({inputs:{x:i},backend:e});else{const d=e.data.get(i.dataId).values,f=Zt(i.shape),p=jb(d,i.shape,i.dtype,f,u,"max");h=e.makeTensorInfo(u.outShape,i.dtype,p.values)}return h}const sK={kernelName:wp,backendName:"cpu",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n;zt(i,"maxPool3d");const u=Vr(i.shape,r,o,1,a,l,c),h=e.data.get(i.dataId).values,d=tk(h,i.shape,i.dtype,Zt(i.shape),u,"max");return e.makeTensorInfo(d.shape,"float32",d.values)}const rK={kernelName:_p,backendName:"cpu",kernelFunc:iK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=n;zt([i,r],"maxPool3DGrad");const u=Vr(r.shape,o,a,1,l,c),h=e.bufferSync(r),d=Xj(h,u),f=u.strideDepth,p=u.strideHeight,g=u.strideWidth,m=u.dilationDepth,x=u.dilationHeight,v=u.dilationWidth,y=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,S=y-1-u.padInfo.front,C=w-1-u.padInfo.left,_=b-1-u.padInfo.top,I=fe(r.shape,"float32"),T=e.bufferSync(i);for(let N=0;N<u.batchSize;++N)for(let P=0;P<u.inChannels;++P)for(let E=0;E<u.inDepth;++E)for(let M=0;M<u.inHeight;++M)for(let A=0;A<u.inWidth;++A){const R=E-S,V=M-_,L=A-C;let $=0;for(let U=0;U<y;U+=m){const H=(R+U)/f;if(!(H<0||H>=u.outDepth||Math.floor(H)!==H))for(let W=0;W<b;W+=x){const Z=(V+W)/p;if(!(Z<0||Z>=u.outHeight||Math.floor(Z)!==Z))for(let it=0;it<w;it+=v){const lt=(L+it)/g;if(lt<0||lt>=u.outWidth||Math.floor(lt)!==lt)continue;const J=y*b*w-1-d.get(N,H,Z,lt,P),vt=U*b*w+W*w+it,mt=J===vt?1:0;if(mt===0)continue;const xt=T.get(N,H,Z,lt,P);$+=xt*mt}}}I.set($,N,E,M,A,P)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const aK={kernelName:P0,backendName:"cpu",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lK(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;zt([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=bi(a.shape,l,c,1,u,h),f=e.data.get(a.dataId).values,p=fe(d.outShape,a.dtype,QM(f,a.shape,a.dtype,d).values),g=d.strideHeight,m=d.strideWidth,x=d.dilationHeight,v=d.dilationWidth,y=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,S=y-1-d.padInfo.top,C=fe(a.shape,"float32"),_=e.data.get(i.dataId).values,I=fe(i.shape,"float32",_);for(let T=0;T<d.batchSize;++T)for(let N=0;N<d.inChannels;++N)for(let P=0;P<d.inHeight;++P)for(let E=0;E<d.inWidth;++E){const M=P-S,A=E-w;let R=0;for(let V=0;V<y;V+=x){const L=(M+V)/g;if(!(L<0||L>=d.outHeight||Math.floor(L)!==L))for(let $=0;$<b;$+=v){const U=(A+$)/m;if(U<0||U>=d.outWidth||Math.floor(U)!==U)continue;const H=y*b-1-p.get(T,L,U,N),W=V*b+$,Z=H===W?1:0;if(Z===0)continue;const it=I.get(T,L,U,N);R+=it*Z}}C.set(R,T,P,E,N)}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const cK={kernelName:L0,backendName:"cpu",kernelFunc:lK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(s,t,e,n,i){const r=Zt(t),o=jb(s,t,e,r,i,"max"),a=QM(s,t,e,i,!0,n);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hK={kernelName:zC,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;zt(n,"MaxPoolWithArgmax");const c=l.data.get(n.dataId).values,u=bi(n.shape,i,r,[1,1],o),[h,d]=uK(c,n.shape,n.dtype,a,u),f=l.write(h,u.outShape,n.dtype),p=l.write(d,u.outShape,n.dtype);return[{dataId:f,shape:u.outShape,dtype:n.dtype},{dataId:p,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=pe(r,i.shape),c=Pn(i.shape,a)[1],u=ht(c),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const f=xo({inputs:{x:i},backend:e,attrs:{dtype:"float32"}});h.push(f);const p=Kb({inputs:{a:f,b:d},backend:e});h.push(p);const g=Uh({inputs:{x:p},backend:e,attrs:{axis:r,keepDims:o}});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),g}const fK={kernelName:Sp,backendName:"cpu",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;zt(i,"min");const a=pe(r,i.shape);let l=a;const c=sn(l,i.shape.length);let u=i;c!=null&&(u=gs({inputs:{x:i},backend:e,attrs:{perm:c}}),l=dn(l.length,i.shape.length)),Xn("min",l,u.shape.length);const[h,d]=Pn(u.shape,l),f=ht(d),p=Qn(ht(h),u.dtype),g=e.data.get(u.dataId).values;for(let x=0;x<p.length;++x){const v=x*f;let y=g[v];for(let b=0;b<f;++b){const w=g[v+b];(Number.isNaN(w)||w<y)&&(y=w)}p[x]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const m=e.makeTensorInfo(h,u.dtype,p);if(o){const x=hn(h,a),v=We({inputs:{x:m},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(m),v}return m}const mK={kernelName:Cp,backendName:"cpu",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,mode:o}=n;zt(i,"mirrorPad");const a=r.map((y,b)=>y[0]+i.shape[b]+y[1]),l=r.map(y=>y[0]),c=r.map((y,b)=>y[0]+i.shape[b]),u=o==="reflect"?0:1,h=e.data.get(i.dataId).values,d=i.shape.length,f=Zt(i.shape),p=ht(a),g=a.length,m=Zt(a),x=Gn(i.dtype,p);for(let y=0;y<p;y++){let b=uc(y,g,m);for(let S=0;S<g;S++)b[S]<l[S]?b[S]=l[S]*2-b[S]-u:b[S]>=c[S]&&(b[S]=(c[S]-1)*2-b[S]+u);b=b.map((S,C)=>S-l[C]);const w=ur(b,d,f);x[y]=h[w]}return{dataId:e.write(x,a,i.dtype),shape:a,dtype:i.dtype}}const xK={kernelName:Ip,backendName:"cpu",kernelFunc:gK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK=bn((s,t)=>{const e=s%t;return s<0&&t<0||s>=0&&t>=0?e:(e+t)%t}),bK=On(nh,vK),yK={kernelName:nh,backendName:"cpu",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=i.shape.length;let a=r;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=pe([a],i.shape),c=ik({inputs:{x:i},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=hn(c.shape,l),h=We({inputs:{x:c},backend:e,attrs:{shape:u}}),d=Xb({inputs:{a:i,b:h},backend:e}),f=hM({inputs:{x:d},backend:e}),p=Uh({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),g=We({inputs:{x:p},backend:e,attrs:{shape:u}}),m=Kb({inputs:{a:f,b:g},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(g),m}const wK={kernelName:Wp,backendName:"cpu",kernelFunc:rk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n;zt(i,"multinomial");const l=a?i:rk({inputs:{logits:i},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=e.data.get(l.dataId).values,d=[c,r],f=Qn(ht(d),"int32");for(let p=0;p<c;++p){const g=p*u,m=new Float32Array(u-1);m[0]=h[g];for(let y=1;y<m.length;++y)m[y]=m[y-1]+h[g+y];const x=Eh.alea(o.toString()),v=p*r;for(let y=0;y<r;++y){const b=x();f[v+y]=m.length;for(let w=0;w<m.length;w++)if(b<m[w]){f[v+y]=w;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",f)}const SK={kernelName:BC,backendName:"cpu",kernelFunc:_K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=Vv;function IK(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n;zt(i,"NonMaxSuppression");const c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,{selectedIndices:h}=CK(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const TK={kernelName:O0,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK=Wv;function MK(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n;zt(i,"NonMaxSuppressionPadded");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,{selectedIndices:d,validOutputs:f}=EK(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const kK={kernelName:z0,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK=Gv;function NK(s){const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n;zt(i,"NonMaxSuppressionWithScore");const u=e.data.get(i.dataId).values,h=e.data.get(r.dataId).values,d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=AK(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const RK={kernelName:B0,backendName:"cpu",kernelFunc:NK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n;zt(i,"oneHot");const c=ht(i.shape),u=new Float32Array(c*o);u.fill(l);const h=e.data.get(i.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=a);return e.makeTensorInfo([...i.shape,o],r,u)}const DK={kernelName:kp,backendName:"cpu",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kf(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){const i=ka({inputs:{input:n},backend:e}),r=kf({inputs:{x:i},backend:e}),o=ec({inputs:{input:n},backend:e}),a=kf({inputs:{x:o},backend:e}),l=Ss({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Yb({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}const FK={kernelName:qp,backendName:"cpu",kernelFunc:kf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){const i=ka({inputs:{input:n},backend:e}),r=ok({inputs:{x:i},backend:e}),o=ec({inputs:{input:n},backend:e}),a=kf({inputs:{x:o},backend:e}),l=Ss({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return Yb({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}const LK={kernelName:Mp,backendName:"cpu",kernelFunc:ok};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return Mf({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{vi(r,u.shape,"All tensors passed to stack must have matching shapes"),D(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=Mf({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=nc({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const PK={kernelName:Ap,backendName:"cpu",kernelFunc:ak};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OK(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;zt(i,"pad");const a=r.map((v,y)=>v[0]+i.shape[y]+v[1]),l=r.map(v=>v[0]),c=e.data.get(i.dataId).values,u=ht(i.shape),h=i.shape.length,d=Zt(i.shape),f=ht(a),p=a.length,g=Zt(a),m=Gn(i.dtype,f);o!==0&&m.fill(o);for(let v=0;v<u;v++){const b=uc(v,h,d).map((S,C)=>S+l[C]),w=ur(b,p,g);m[w]=c[v]}return{dataId:e.write(m,a,i.dtype),shape:a,dtype:i.dtype}}const lk={kernelName:Np,backendName:"cpu",kernelFunc:OK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zK=bn((s,t)=>Math.pow(s,t)),BK=On(ih,zK),UK={kernelName:ih,backendName:"cpu",kernelFunc:BK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,a=i.map(m=>e.data.get(m.dataId).values),l=i.map(m=>m.shape),c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,[h,d,f]=MM(a,l,c,r.shape,r.dtype,u,o.shape),p=h.map(m=>e.makeTensorInfo([m.length],"int32",m)),g=e.makeTensorInfo(f,r.dtype,d);return p.concat([g])}const WK={kernelName:UC,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=kM(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const HK={kernelName:VC,backendName:"cpu",kernelFunc:GK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.data.get(i.dataId).values,u=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=a.map(m=>e.data.get(m.dataId).values),f=a.map(m=>m.shape),[p,g]=AM(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const XK={kernelName:WC,backendName:"cpu",kernelFunc:qK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(s){const{backend:t,attrs:e}=s,{start:n,stop:i,dtype:r,step:o}=e,a=NM(n,i,o,r);return t.makeTensorInfo([a.length],r,a)}const KK={kernelName:U0,backendName:"cpu",kernelFunc:jK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK=Pe(rh,s=>1/s),ZK={kernelName:rh,backendName:"cpu",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;zt(i,"resizeBilinear");const l=Zt(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(ht([h,c,u,p])),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],v=[r&&c>1?c-1:c,r&&u>1?u-1:u];let y=0;const b=x[0]/v[0],w=x[1]/v[1];for(let S=0;S<h;S++)for(let C=0;C<c;C++){let _;o?_=b*(C+.5)-.5:_=b*C;const I=Math.max(0,Math.floor(_)),T=_-I,N=Math.min(d-1,Math.ceil(_)),P=S*l[0]+I*l[1],E=S*l[0]+N*l[1];for(let M=0;M<u;M++){let A;o?A=w*(M+.5)-.5:A=w*M;const R=Math.max(0,Math.floor(A)),V=A-R,L=Math.min(f-1,Math.ceil(A)),$=P+R*l[2],U=E+R*l[2],H=P+L*l[2],W=E+L*l[2];for(let Z=0;Z<p;Z++){const it=g[$+Z],lt=g[U+Z],J=g[H+Z],vt=g[W+Z],mt=it+(J-it)*V,xt=lt+(vt-lt)*V,dt=mt+(xt-mt)*T;m[y++]=dt}}}return e.makeTensorInfo([h,c,u,p],"float32",m)}const QK={kernelName:Lp,backendName:"cpu",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;zt([r,i],"resizeBilinearGrad");const a=Zt(i.shape),[l,c,u,h]=i.shape,[,d,f]=r.shape,p=new Float32Array(l*c*u*h),g=[o&&d>1?c-1:c,o&&f>1?u-1:u],m=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=g[0]/m[0],v=g[1]/m[1],y=e.data.get(r.dataId).values;let b=0;for(let w=0;w<l;w++){const S=w*a[0];for(let C=0;C<d;C++){const _=C*x,I=Math.floor(_),T=Math.min(Math.ceil(_),c-1),N=S+I*a[1],P=S+T*a[1],E=_-I,M=1-E;for(let A=0;A<f;A++){const R=A*v,V=Math.floor(R),L=Math.min(Math.ceil(R),u-1),$=R-V,U=1-$,H=N+V*a[2],W=N+L*a[2],Z=P+V*a[2],it=P+L*a[2],lt=M*U,J=M*$,vt=E*U,mt=E*$;for(let xt=0;xt<h;xt++){const dt=y[b++];p[H+xt]+=dt*lt,p[W+xt]+=dt*J,p[Z+xt]+=dt*vt,p[it+xt]+=dt*mt}}}}return e.makeTensorInfo([l,u,c,h],"float32",p)}const eY={kernelName:G0,backendName:"cpu",kernelFunc:tY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n;zt(i,"resizeNearestNeighbor");const l=Zt(i.shape),[c,u]=a,[h,d,f,p]=i.shape,g=e.data.get(i.dataId).values,m=new Float32Array(h*c*u*p),x=[r&&c>1?d-1:d,r&&u>1?f-1:f],v=[r&&c>1?c-1:c,r&&u>1?u-1:u],y=x[0]/v[0],b=x[1]/v[1];let w=0;for(let S=0;S<h;S++){const C=S*l[0];for(let _=0;_<c;_++){const I=o?y*(_+.5):y*_;let T=Math.min(d-1,r?Math.round(I):Math.floor(I));o&&(T=Math.max(0,T));const N=C+T*l[1];for(let P=0;P<u;P++){const E=o?b*(P+.5):b*P;let M=Math.min(f-1,r?Math.round(E):Math.floor(E));o&&(M=Math.max(0,M));const A=N+M*l[2];for(let R=0;R<p;R++){const V=g[A+R];m[w++]=V}}}}return e.makeTensorInfo([h,c,u,p],i.dtype,m)}const sY={kernelName:Fp,backendName:"cpu",kernelFunc:nY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n;zt([r,i],"resizeNearestNeighborGrad");const a=Zt(i.shape),l=Zt(r.shape),[c,u,h,d]=i.shape,[,f,p]=r.shape,g=new Float32Array(c*u*h*d),m=e.data.get(r.dataId).values,x=[o&&f>1?u-1:u,o&&p>1?h-1:h],v=[o&&f>1?f-1:f,o&&p>1?p-1:p],y=x[0]/v[0],b=x[1]/v[1],w=1/y,S=1/b,C=Math.ceil(w)*2+2,_=Math.ceil(S)*2+2;for(let I=0;I<c;I++){const T=I*a[0];for(let N=0;N<u;N++){const P=T+N*a[1],E=Math.floor(N*w),M=Math.floor(E-C/2);for(let A=0;A<h;A++){const R=P+A*a[2],V=Math.floor(A*S),L=Math.floor(V-_/2);for(let $=0;$<d;$++){let U=0;for(let H=0;H<C;H++){const W=H+M;if(W<0||W>=f)continue;const Z=T+W*l[1],it=W*y,lt=Math.min(u-1,o?Math.round(it):Math.floor(it));if(N===lt)for(let J=0;J<_;J++){const vt=J+L;if(vt<0||vt>=p)continue;const mt=Z+vt*l[2],xt=vt*b,dt=Math.min(h-1,o?Math.round(xt):Math.floor(xt));A===dt&&(U+=m[mt+$])}}g[R+$]=U}}}}return e.makeTensorInfo(i.shape,i.dtype,g)}const rY={kernelName:W0,backendName:"cpu",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n;zt(i,"reverse");const o=i.shape.length,a=pe(r,i.shape);if(o===0)return mr({inputs:{x:i},backend:e});const l=new Zn(i.shape,i.dtype),c=e.bufferSync(i);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(f=>d[f]=i.shape[f]-1-d[f]),l.set(c.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const aY={kernelName:Pp,backendName:"cpu",kernelFunc:oY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY={kernelName:sv,backendName:"cpu",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=Gn(n.dtype,ht(n.shape)),[c,u,h,d]=n.shape,[f,p]=tb(o,u,h),g=255,m=Math.sin(i),x=Math.cos(i),v=a.data.get(n.dataId).values;for(let b=0;b<c;b++){const w=b*h*u*d;for(let S=0;S<u;S++){const C=S*(h*d);for(let _=0;_<h;_++){const I=_*d;for(let T=0;T<d;T++){const N=[c,S,_,T],P=N[2],E=N[1];let M=(P-f)*x-(E-p)*m,A=(P-f)*m+(E-p)*x;M=Math.round(M+f),A=Math.round(A+p);let R=r;if(typeof r!="number"&&(T===3?R=g:R=r[T]),M>=0&&M<h&&A>=0&&A<u){const L=A*(h*d),$=M*d,U=w+L+$+T;R=v[U]}const V=w+C+I+T;l[V]=R}}}}return{dataId:a.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cY=Pe(lh,s=>{const t=Math.floor(s);return s-t<.5?Math.floor(s):s-t>.5?Math.ceil(s):t%2===0?t:t+1}),uY={kernelName:lh,backendName:"cpu",kernelFunc:cY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Sh(r,i,o),d=!0,f=e.bufferSync(i),p=e.bufferSync(r),g=Tl(f,p,o,h,c,l,a,u,0,d);return e.makeTensorInfo(o,g.dtype,g.values)}const dY={kernelName:GC,backendName:"cpu",kernelFunc:hY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<t?e=i+1:n=i;return n}function pY(s,t){let e=0,n=s.length,i=0;for(;e<n;)i=Math.floor((e+n)/2),s[i]<=t?e=i+1:n=i;return n}function mY(s,t,e,n,i,r){const o=gn("int32",e*i);for(let a=0;a<e;++a){const l=s.slice(a*n,(a+1)*n),c=a*i;for(let u=0;u<i;++u)o[c+u]=r==="left"?fY(l,t[u+c]):pY(l,t[u+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gY(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,c=mY(a,l,i.shape[0],i.shape[1],r.shape[1],o);return e.makeTensorInfo(r.shape,"int32",c)}const xY={kernelName:HC,backendName:"cpu",kernelFunc:gY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t;zt([n,i,r],"select");const o=n.shape.length,a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=Ts(i.dtype,r.dtype),h=Qn(ht(i.shape),u);let d=0;const f=o===0||o>1||i.shape.length===1?1:ht(i.shape.slice(1));for(let p=0;p<a.length;p++)for(let g=0;g<f;g++)a[p]===1?h[d++]=l[p]:h[d++]=c[p];return e.makeTensorInfo(i.shape,u,h)}const bY={kernelName:Op,backendName:"cpu",kernelFunc:vY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY=om,wY=am,_Y=Pe(uh,s=>s>=0?wY*s:yY*(Math.exp(s)-1)),SY={kernelName:uh,backendName:"cpu",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CY=Pe(fh,s=>s<0?-1:s>0?1:0),IY={kernelName:fh,backendName:"cpu",kernelFunc:CY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TY=Pe(hh,s=>Math.sin(s)),EY={kernelName:hh,backendName:"cpu",kernelFunc:TY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MY=Pe(dh,s=>Math.sinh(s)),kY={kernelName:dh,backendName:"cpu",kernelFunc:MY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AY=11920928955078125e-23,N_=Math.log(AY)+2,NY=Pe(mh,s=>{const t=s>-N_,e=s<N_,n=Math.exp(s);let i;return e?i=n:t?i=s:i=Math.log(1+n),i}),RY={kernelName:mh,backendName:"cpu",kernelFunc:NY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;zt([i],"spaceToBatchND");const a=ht(r),l=[[0,0]];l.push(...o);for(let S=1+r.length;S<i.shape.length;++S)l.push([0,0]);const c=lk.kernelFunc({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),u=Ah(c.shape,r,a,!1),h=Nh(u.length,r.length,!1),d=Rh(c.shape,r,a,!1),g=We({inputs:{x:c},backend:e,attrs:{shape:u}}),v=gs({inputs:{x:g},backend:e,attrs:{perm:h}}),w=We({inputs:{x:v},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(v),w}const DY={kernelName:Up,backendName:"cpu",kernelFunc:$Y};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.data.get(n.dataId).values,l=e.data.get(i.dataId).values,c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values[0],[h,d,f,p,g]=FM(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const LY={kernelName:H0,backendName:"cpu",kernelFunc:FY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PY(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.data.get(i.dataId).values),a=e.data.get(n.dataId).values,l=Array.from(e.data.get(r.dataId).values),[c,u,h]=LM(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const OY={kernelName:q0,backendName:"cpu",kernelFunc:PY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=qb(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const BY={kernelName:X0,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(i.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const o=e.data.get(n.dataId).values,a=e.data.get(i.dataId).values,l=e.data.get(r.dataId).values,[c,u]=qb(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const VY={kernelName:j0,backendName:"cpu",kernelFunc:UY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Sh(r,i,a),f=!1,p=e.bufferSync(i);let g;switch(r.dtype){case"bool":{const m=e.bufferSync(r),x=Boolean(e.data.get(o.dataId).values[0]);g=Tl(p,m,a,d,u,c,l,h,x,f);break}case"float32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=Tl(p,m,a,d,u,c,l,h,x,f);break}case"int32":{const m=e.bufferSync(r),x=e.data.get(o.dataId).values[0];g=Tl(p,m,a,d,u,c,l,h,x,f);break}case"string":{const m=e.bufferSync(r),x=co(e.data.get(o.dataId).values[0]);g=Tl(p,m,a,d,u,c,l,h,x,f);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(a,g.dtype,g.values)}const GY={kernelName:qC,backendName:"cpu",kernelFunc:WY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=pe(o,i.shape)[0],l=mb(i,r,a),c=new Array(i.shape.length).fill(0),u=i.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const f=Aa({inputs:{x:i},backend:e,attrs:{begin:c,size:d}});return c[a]+=h,f})}const qY={kernelName:Vp,backendName:"cpu",kernelFunc:HY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XY={kernelName:K0,backendName:"cpu",kernelFunc:({inputs:s,backend:t})=>{const{x:e}=s,n=t;zt(e,"square");const i=n.data.get(e.dataId).values,r=new Float32Array(i.length);for(let a=0;a<i.length;++a){const l=i[a];r[a]=l*l}return{dataId:n.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY=Pe(_h,(s,t)=>{const e=t;return isNaN(s)?NaN:s>0?1:e.alpha}),KY={kernelName:_h,backendName:"cpu",kernelFunc:jY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YY(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n;zt(i,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:v,end:y,strides:b}=gv(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=We({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){D(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const S=fv(v,y,b),C=Aa({inputs:{x:i},backend:e,attrs:{begin:v,size:S}});w=We({inputs:{x:C},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(C)}else{const S=e.bufferSync(i),C=OM(f,S,b,v);w=e.makeTensorInfo(p,C.dtype,C.values)}return w}const ZY={kernelName:Y0,backendName:"cpu",kernelFunc:YY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.data.get(u.dataId).values,f=e.data.get(h.dataId).values,[p,g]=zM(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const QY={kernelName:Z0,backendName:"cpu",kernelFunc:JY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tZ(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values[0],[c,u,h]=BM(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const eZ={kernelName:J0,backendName:"cpu",kernelFunc:tZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nZ(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.data.get(r.dataId).values,a=UM(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const sZ={kernelName:Q0,backendName:"cpu",kernelFunc:nZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iZ=Pe(bh,s=>Math.tan(s)),rZ={kernelName:bh,backendName:"cpu",kernelFunc:iZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oZ=Pe(yh,s=>Math.tanh(s)),aZ={kernelName:yh,backendName:"cpu",kernelFunc:oZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;zt(i,"tile");const o=WM(e.bufferSync(i),r);return e.makeTensorInfo(o.shape,o.dtype,o.values)}const cZ={kernelName:wh,backendName:"cpu",kernelFunc:lZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n;zt(i,"topk");const a=e.data.get(i.dataId).values,[l,c]=HM(a,i.shape,i.dtype,r,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const hZ={kernelName:tv,backendName:"cpu",kernelFunc:uZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(s){const{inputs:t,attrs:e,backend:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=e,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=Zt(i.shape),v=x[0],y=x[1],b=x[2],w=Zt(m),S=w[0],C=w[1],_=w[2],I=Gn(i.dtype,ht(m));I.fill(l);const T=n.data.get(i.dataId).values,N=n.data.get(r.dataId).values;for(let E=0;E<u;++E){const M=r.shape[0]===1?N:N.subarray(E*8,E*8+8);for(let A=0;A<p;++A)for(let R=0;R<g;++R)for(let V=0;V<f;++V){let L;const $=M[6]*R+M[7]*A+1;if($===0)continue;const U=(M[0]*R+M[1]*A+M[2])/$,H=(M[3]*R+M[4]*A+M[5])/$,W=R_(U,d,a),Z=R_(H,h,a);switch(o){case"nearest":L=vZ(T,h,d,v,y,b,E,Z,W,V,l);break;case"bilinear":L=bZ(T,h,d,v,y,b,E,Z,W,V,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const it=E*S+A*C+R*_+V;I[it]=L}return n.makeTensorInfo(m,i.dtype,I)}return{dataId:n.write(I,m,i.dtype),shape:i.shape,dtype:i.dtype}}const fZ={kernelName:ev,backendName:"cpu",kernelFunc:dZ};function R_(s,t,e){switch(e){case"reflect":return pZ(s,t);case"wrap":return mZ(s,t);case"nearest":return xZ(s,t);case"constant":default:return gZ(s)}}function pZ(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{const n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return ba(0,e,t-1)}function mZ(s,t){let e=s;if(e<0)if(t<=1)e=0;else{const n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{const n=t-1;e-=t*Math.trunc(e/n)}return ba(0,e,t-1)}function gZ(s,t){return s}function xZ(s,t){return ba(0,s,t-1)}function Hc(s,t,e,n,i,r,o,a,l,c,u){const h=o*n+a*i+l*r+c;return 0<=a&&a<t&&0<=l&&l<e?s[h]:u}function vZ(s,t,e,n,i,r,o,a,l,c,u){const h=Math.round(a),d=Math.round(l);return Hc(s,t,e,n,i,r,o,h,d,c,u)}function bZ(s,t,e,n,i,r,o,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),f=h+1,p=d+1,g=(p-l)*Hc(s,t,e,n,i,r,o,h,d,c,u)+(l-d)*Hc(s,t,e,n,i,r,o,h,p,c,u),m=(p-l)*Hc(s,t,e,n,i,r,o,f,d,c,u)+(l-d)*Hc(s,t,e,n,i,r,o,f,p,c,u);return(f-a)*g+(a-h)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yZ(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;zt(r,"unique");const o=n.data.get(r.dataId).values,{outputValues:a,outputShape:l,indices:c}=qM(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const wZ={kernelName:nv,backendName:"cpu",kernelFunc:yZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i.shape.length,a=i.shape[r],l=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==r&&(l[c++]=i.shape[f]);const u=new Array(o).fill(0),h=i.shape.slice();h[r]=1;const d=new Array(a);for(let f=0;f<d.length;f++){u[r]=f;const p=Aa({inputs:{x:i},backend:e,attrs:{begin:u,size:h}});d[f]=We({inputs:{x:p},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(p)}return d}const SZ={kernelName:Gp,backendName:"cpu",kernelFunc:_Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CZ(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n;zt(i,"unsortedSegmentSum");const a=i.shape.length,l=r.shape.length,c=[],u=[],h=a-l;let d=r;for(let p=0;p<h;++p){const g=Mf({inputs:{input:d},backend:e,attrs:{dim:p+1}});d=g,u.push(g)}for(let p=0;p<o;++p){const g=_o(p,"int32"),m=e.makeTensorInfo([],"int32",g),x=cM({inputs:{a:m,b:d},backend:e}),v=xo({inputs:{x},backend:e,attrs:{dtype:"float32"}}),y=ym({inputs:{a:v,b:i},backend:e}),b=Uh({inputs:{x:y},backend:e,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(m),u.push(x),u.push(v),u.push(y),u.push(b)}const f=ak({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const IZ={kernelName:Hp,backendName:"cpu",kernelFunc:CZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TZ=[wj,aX,Sj,Ij,fX,Ej,kj,Nj,$j,Fj,Pj,zj,Uj,Gj,qj,Kj,Zj,Qj,e9,bj,s9,r9,a9,c9,hX,mX,h9,lX,f9,m9,g9,v9,y9,_9,C9,T9,M9,A9,R9,D9,L9,O9,B9,U9,W9,H9,X9,j9,K9,Y9,Q9,dj,e7,gX,c7,xX,u7,bX,g7,x7,b7,wX,_7,C7,T7,M7,A7,SX,IX,cX,R7,p9,D7,L7,O7,fj,EX,kX,B7,NX,V7,H7,X7,Y7,J7,tK,eK,$X,sK,rK,aK,cK,hK,fK,mK,FX,xK,yK,SK,PX,zX,TK,kK,RK,UX,DK,LK,PK,lk,UK,mj,GX,WK,HK,XK,KK,uX,Ox,ZK,gj,xj,vj,QK,eY,sY,rY,aY,lY,uY,JX,dY,xY,bY,SY,tj,IY,EY,kY,ej,wK,RY,DY,LY,OY,BY,VY,GY,qY,ij,XY,oj,KY,ZY,QY,eZ,sZ,uj,Z9,rZ,aZ,cZ,hZ,fZ,VX,wZ,SZ,IZ,FK];for(const s of TZ)jC(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko={},Fd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function EZ(s,t){Ko[s]=t}function Hi(s,t){if(!(s in Ko)||t!=null){const n=kZ(s,t);if(n!==null)Ko[s]=n;else return console.log("Could not get context for WebGL version",s),null}const e=Ko[s];return e==null||e.isContextLost()?(delete Ko[s],Hi(s)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Ko[s])}function MZ(s){if(typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function kZ(s,t){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t==null?MZ(s):t;return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Ko[s]},!1),at().getBool("SOFTWARE_WEBGL_ENABLED")&&(Fd.failIfMajorPerformanceCaveat=!1),s===1?e.getContext("webgl",Fd)||e.getContext("experimental-webgl",Fd):e.getContext("webgl2",Fd)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var mu;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(mu||(mu={}));var Ps;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(Ps||(Ps={}));var Un;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Un||(Un={}));function Vh(s,t){return[t,s]}function AZ(s,t){return s*t}function Ld(s){const t=ht(s),e=Math.ceil(t/4);return nx(e)}function vc(s,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(s/2))]}function NZ(s,t){const[e,n]=vc(s,t);return e*n*4}function Zb(s,t){const e=s;let n,i,r,o,a,l,c,u,h,d;return at().getNumber("WEBGL_VERSION")===2?(n=e.R32F,i=e.R16F,r=e.RGBA16F,o=e.RGBA32F,a=e.RED,c=4,u=1,h=e.HALF_FLOAT,d=e.FLOAT,l=e.RGBA8):(n=s.RGBA,i=s.RGBA,r=s.RGBA,o=e.RGBA,a=s.RGBA,c=4,u=4,h=t!=null?t.HALF_FLOAT_OES:null,d=s.FLOAT,l=s.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(s,t){const e=t();return at().getBool("DEBUG")&&RZ(s),e}function RZ(s){const t=s.getError();if(t!==s.NO_ERROR)throw new Error("WebGL Error: "+LZ(s,t))}const $Z=596e-10,DZ=65504;function FZ(s){return!!(at().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||$Z<Math.abs(s)&&Math.abs(s)<DZ)}function LZ(s,t){switch(t){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Pd(s,t){return Hr(s,()=>s.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function PZ(s,t){const e=Hr(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ut(s,()=>s.shaderSource(e,t)),Ut(s,()=>s.compileShader(e)),s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function OZ(s,t){const e=Hr(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ut(s,()=>s.shaderSource(e,t)),Ut(s,()=>s.compileShader(e)),at().get("ENGINE_COMPILE_ONLY"))return e;if(s.getShaderParameter(e,s.COMPILE_STATUS)===!1)throw ck(t,s.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const zZ=/ERROR: [0-9]+:([0-9]+):/g;function ck(s,t){const e=zZ.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(s);return}const n=+e[1],i=s.split(`
`),r=i.length.toString().length+2,o=i.map((h,d)=>Al((d+1).toString(),r)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,n-1),c=o.slice(n-1,n),u=o.slice(n);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${Al(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function BZ(s){return Hr(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function UZ(s,t){if(Ut(s,()=>s.linkProgram(t)),!at().get("ENGINE_COMPILE_ONLY")&&s.getProgramParameter(t,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Rg(s,t){if(Ut(s,()=>s.validateProgram(t)),s.getProgramParameter(t,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function VZ(s,t){const e=Hr(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return Ut(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),Ut(s,()=>s.bufferData(s.ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function WZ(s,t){const e=Hr(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return Ut(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e)),Ut(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,t,s.STATIC_DRAW)),e}function GZ(s){return Hr(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function HZ(s,t){const e=at().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||t<=0){const n=`[${s}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(s>e||t>e){const n=`[${s}x${t}]`,i=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+i+".")}}function qZ(s){return Hr(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function $_(s,t,e,n,i,r,o){const a=s.getAttribLocation(t,e);return a===-1?!1:(Ut(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),Ut(s,()=>s.vertexAttribPointer(a,i,s.FLOAT,!1,r,o)),Ut(s,()=>s.enableVertexAttribArray(a)),!0)}function XZ(s,t,e){JZ(s,e),Ut(s,()=>s.activeTexture(s.TEXTURE0+e)),Ut(s,()=>s.bindTexture(s.TEXTURE_2D,t))}function jZ(s,t,e){return Hr(s,()=>s.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function KZ(s,t,e){return s.getUniformLocation(t,e)}function YZ(s,t,e,n){Ut(s,()=>XZ(s,t,n)),Ut(s,()=>s.uniform1i(e,n))}function $g(s,t,e){Ut(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,e)),Ut(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0))}function D_(s,t){Ut(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),Ut(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function Od(s){const t=s.checkFramebufferStatus(s.FRAMEBUFFER);if(t!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ZZ(s,t))}function ZZ(s,t){switch(t){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Hr(s,t,e){const n=Ut(s,()=>t());if(n==null)throw new Error(e);return n}function JZ(s,t){const e=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+s.TEXTURE0;if(n<s.TEXTURE0||n>e){const i=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${i}.`)}}function sc(s,t=2){return ht(s.slice(0,s.length-t))}function ic(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function zd(s){let t=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(t=[sc(s),...ic(s)]),t}function QZ(s,t=!1){let e=at().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=at().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&at().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,s=s.map((a,l)=>l>=s.length-2?c0(s[l]):s[l]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=wo(s).newShape);let i=ht(s),r=null;s.length<=1&&i<=e?r=[1,i]:s.length===2&&s[0]<=e&&s[1]<=e?r=s:s.length===3&&s[0]*s[1]<=e&&s[2]<=e?r=[s[0]*s[1],s[2]]:s.length===3&&s[0]<=e&&s[1]*s[2]<=e?r=[s[0],s[1]*s[2]]:s.length===4&&s[0]*s[1]*s[2]<=e&&s[3]<=e?r=[s[0]*s[1]*s[2],s[3]]:s.length===4&&s[0]<=e&&s[1]*s[2]*s[3]<=e&&(r=[s[0],s[1]*s[2]*s[3]]);const o=r!=null&&Math.max(...r)>n&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||o)if(t){const a=sc(s);let l=2,c=2;s.length&&([l,c]=ic(s)),i=a*(l/2)*(c/2),r=nx(i).map(u=>u*2)}else r=nx(i);return r}function Bd(s){return s%2===0}function Af(s,t){if(s=s.slice(-2),t=t.slice(-2),ke(s,t)||!s.length||!t.length||s[0]===0||s[1]===0||t[0]===0||t[1]===0)return!0;if(s.length!==t.length){const e=s.slice(-1)[0],n=t.slice(-1)[0];if(e===n||Bd(e)&&Bd(n)&&(s[0]===1||t[0]===1))return!0}return s[1]===t[1]&&Bd(s[0])&&Bd(t[0])}let Dg,Fg;function tJ(s){if(Dg==null){const t=Hi(s);Dg=t.getParameter(t.MAX_TEXTURE_SIZE)}return Dg}function eJ(s){if(Fg==null){const t=Hi(s);Fg=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Fg)}function nJ(s){if(s===0)return 0;let t;const e=Hi(s);return ci(e,"EXT_disjoint_timer_query_webgl2")&&s===2?t=2:ci(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function ci(s,t){return s.getExtension(t)!=null}function F_(s){try{if(Hi(s)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function sJ(s){if(s===0)return!1;const t=Hi(s);if(s===1){if(!ci(t,"OES_texture_float"))return!1}else if(!ci(t,"EXT_color_buffer_float"))return!1;return Bx(t)}function iJ(s){if(s===0)return!1;const t=Hi(s);if(s===1){if(!ci(t,"OES_texture_float")||!ci(t,"WEBGL_color_buffer_float"))return!1}else{if(ci(t,"EXT_color_buffer_float"))return Bx(t);const n="EXT_color_buffer_half_float";if(ci(t,n)){const i=t.getExtension(n);return rJ(t,i)}return!1}return Bx(t)}function Bx(s){const t=Zb(s),e=s.createTexture();s.bindTexture(s.TEXTURE_2D,e);const n=1,i=1;s.texImage2D(s.TEXTURE_2D,0,t.internalFormatFloat,n,i,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,e,0);const o=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(e),s.deleteFramebuffer(r),o}function rJ(s,t){const e=Zb(s,t),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n);const i=1,r=1;s.texImage2D(s.TEXTURE_2D,0,e.internalFormatHalfFloat,i,r,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const o=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,o),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const a=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(o),a}function oJ(s){return s!==2?!1:Hi(s).fenceSync!=null}function Wh(s,t){Array.isArray(s)||(s=[s]),s.forEach(e=>{e!=null&&D(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=at();qt.registerFlag("HAS_WEBGL",()=>qt.getNumber("WEBGL_VERSION")>0);qt.registerFlag("WEBGL_VERSION",()=>F_(2)?2:F_(1)?1:0);qt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);qt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>qt.get("WEBGL_VERSION")===2);qt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);qt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);qt.registerFlag("WEBGL_PACK",()=>qt.getBool("HAS_WEBGL"));qt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_PACK_CLIP",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_PACK_REDUCE",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_LAZILY_UNPACK",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_CONV_IM2COL",()=>qt.getBool("WEBGL_PACK"));qt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>tJ(qt.getNumber("WEBGL_VERSION")));qt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>eJ(qt.getNumber("WEBGL_VERSION")));qt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=qt.getNumber("WEBGL_VERSION");return s===0?0:nJ(s)});qt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>qt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!rI());qt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>sJ(qt.getNumber("WEBGL_VERSION")));qt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>qt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:qt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));qt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>iJ(qt.getNumber("WEBGL_VERSION")));qt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>oJ(qt.getNumber("WEBGL_VERSION")));qt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>qt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);qt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});qt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>rI()?1:-1,s=>{if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});qt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);qt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);qt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);qt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);qt.registerFlag("WEBGL_EXP_CONV",()=>!1);qt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>qt.getBool("IS_TEST"));qt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);qt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);qt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(){let s,t,e,n,i,r,o,a,l,c;return at().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",t="in",e="out",n="in",i="texture",r="outputColor",o="out vec4 outputColor;",a=at().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",t="attribute",e="varying",n="varying",i="texture2D",r="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:t,varyingVs:e,varyingFs:n,texture2D:i,output:r,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(s,t,e="index"){const n=Zt(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / ${i}`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * ${i}`:`index -= ${s[r]} * ${i}`;return`${o}; ${a};`}).join("")}function wm(s,t,e="index"){const n=Zt(t);return n.map((i,r)=>{const o=`int ${s[r]} = ${e} / outShapeStrides[${r}]`,a=r===n.length-1?`int ${s[r+1]} = ${e} - ${s[r]} * outShapeStrides[${r}]`:`index -= ${s[r]} * outShapeStrides[${r}]`;return`${o}; ${a};`}).join("")}function aJ(s,t){const e=s.length,n=s.map(r=>`${t}[${r}]`),i=new Array(e-1);i[e-2]=n[e-1];for(let r=e-3;r>=0;--r)i[r]=`(${i[r+1]} * ${n[r+1]})`;return i}function lJ(s,t,e="index"){const n=s.map((r,o)=>o),i=aJ(n,t);return i.map((r,o)=>{const a=`int ${s[o]} = ${e} / ${i[o]}`,l=o===i.length-1?`int ${s[o+1]} = ${e} - ${s[o]} * ${i[o]}`:`index -= ${s[o]} * ${i[o]}`;return`${a}; ${l};`}).join("")}function Jb(s){const t=Zt(s).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Qb(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const uk=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:hk}=PH;function cJ(s,t,e){const n=[];if(s.forEach(f=>{const p=ht(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){const{uniformShape:g}=ty(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const i=n.join(`
`),r=s.map(f=>uJ(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),o=t.texShape,a=ls(),l=fJ(a);let c,u,h=gJ(a);return t.isPacked?(c=hJ(t.logicalShape,o,e.enableShapeUniforms),u=mJ(a)):(c=dJ(t.logicalShape,o,e.enableShapeUniforms),u=pJ(a)),e.packedInputs&&(h+=yJ),[h,l,u,i,c,r,e.userCode].join(`
`)}function bc(s,t=!1){const e=s.shapeInfo.logicalShape;switch(e.length){case 0:return RJ(s,t);case 1:return DJ(s,t);case 2:return LJ(s,t);case 3:return OJ(s,t);case 4:return BJ(s,t);case 5:return UJ(s);case 6:return VJ(s);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function dk(s,t){switch(s.shapeInfo.logicalShape.length){case 0:return NJ(s);case 1:return $J(s,t);case 2:return FJ(s,t);case 3:return PJ(s,t);default:return zJ(s,t)}}function uJ(s,t,e=!1,n){let i="";e?i+=dk(s,n):i+=bc(s,n);const r=s.shapeInfo.logicalShape,o=t.logicalShape;return r.length<=o.length&&(e?i+=WJ(s,t):i+=GJ(s,t)),i}function hJ(s,t,e){switch(s.length){case 0:return fk();case 1:return wJ(s,t,e);case 2:return kJ(s,t,e);case 3:return SJ(s,t,e);default:return IJ(s,t,e)}}function dJ(s,t,e){switch(s.length){case 0:return fk();case 1:return _J(s,t,e);case 2:return AJ(s,t,e);case 3:return CJ(s,t,e);case 4:return TJ(s,t,e);case 5:return EJ(s,t);case 6:return MJ(s,t);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function fJ(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function pJ(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function mJ(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function gJ(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${xJ}
    ${vJ}
    ${bJ}
  `}const xJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vJ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,bJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,yJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function fk(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function wJ(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function _J(s,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function SJ(s,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[2]/2),r=i*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec3(b, r, c);
    }
  `}function CJ(s,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${wm(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const n=Va(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function IJ(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],i=Math.ceil(s[s.length-1]/2),r=i*Math.ceil(s[s.length-2]/2);let o=r,a="",l="b, r, c";for(let c=2;c<s.length-1;c++)o*=s[s.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,l=`b${c}, `+l;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec${s.length}(${l});
    }
  `}function TJ(s,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${wm(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const n=Va(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function EJ(s,t){const e=Va(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function MJ(s,t){const e=Va(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function kJ(s,t,e){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ke(s,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;const i=Math.ceil(s[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${i});
      int c = imod(index, ${i}) * 2;

      return ivec2(r, c);
    }
  `}function AJ(s,t,e){return ke(s,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:s[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function Wa(s){return`offset${s}`}function NJ(s){const t=s.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=ls();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function RJ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[i,r]=s.shapeInfo.texShape;if(i===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const o=Wa(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${o});
      return sampleTexture(${e}, uv);
    }
  `;const[a,l]=s.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${e}, uv);
    }
  `}function $J(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=s.shapeInfo.texShape,r=ls();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function DJ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(s.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${yc(s)}
      }
    `;const i=s.shapeInfo.texShape,r=i[0],o=i[1];if(o===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=Wa(e);return o===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function FJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=r[0],a=r[1],l=ls();if(r!=null&&ke(e,r))return t?`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${i}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${i}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function LJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape;if(r!=null&&ke(e,r)){if(t)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;const d=r[0],f=r[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `}const{newShape:o,keptDims:a}=wo(e),l=o;if(l.length<e.length){const d=wc(s,l),f=["row","col"];return`
      ${bc(d,t)}
      float ${i}(int row, int col) {
        return ${i}(${_c(f,a)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${yc(s)}
      }
    `;const c=r[0],u=r[1],h=Wa(n);return u===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `:c===1?t?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${n}, uv);
  }
`}function PJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const d=e.slice(1),f=[1,2],p=wc(s,d),g=["b","row","col"];return`
        ${dk(p,t)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${_c(g,f)});
        }
      `}const a=ls();if(t)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;const l=o[0],c=o[1],u=Math.ceil(e[2]/2),h=u*Math.ceil(e[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function OJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],o=e[2],{newShape:a,keptDims:l}=wo(e),c=a;if(c.length<e.length){const g=wc(s,c),m=["row","col","depth"];return`
        ${bc(g,t)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${_c(m,l)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${yc(s)}
      }
    `;const u=s.shapeInfo.texShape,h=u[0],d=u[1],f=s.shapeInfo.flatOffset;if(d===r&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(d===o&&f==null)return t?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `;const p=Wa(n);return t?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${n}, uv);
      }
  `}function zJ(s,t){const e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=ls();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${e}, uv);
    }
  `;const r=s.shapeInfo.logicalShape,o=r.length,a=s.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(r[o-1]/2);let d=h*Math.ceil(r[o-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<o-1;g++)f=`int b${g}, `+f,d*=r[o-g-1],p=`b${g} * ${d} + `+p;return`
    vec4 ${n}(${f}) {
      int index = ${p};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${i.texture2D}(${e}, uv);
    }
  `}function BJ(s,t){const e=s.shapeInfo.logicalShape,n=s.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],o=e[2]*r,a=e[1]*o,{newShape:l,keptDims:c}=wo(e);if(l.length<e.length){const v=wc(s,l),y=["row","col","depth","depth2"];return`
      ${bc(v,t)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${_c(y,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${r}, 1)));
        ${yc(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${n}Shape[3];`,g=`int stride1 = ${n}Shape[2] * stride2;`,m=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${p}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===r&&u==null)return t?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const x=Wa(n);return t?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${g}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function UJ(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),i=t[4],r=t[3]*i,o=t[2]*r,a=t[1]*o,{newShape:l,keptDims:c}=wo(t);if(l.length<t.length){const g=wc(s,l),m=["row","col","depth","depth2","depth3"];return`
      ${bc(g)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${_c(m,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${r}, ${i})) +
          depth3;
        ${yc(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${r}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===i&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;const p=Wa(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${r} +
          depth2 * ${i} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function VJ(s){const t=s.shapeInfo.logicalShape,e=s.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:i,keptDims:r}=wo(t);if(i.length<t.length){const m=wc(s,i),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${bc(m)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${_c(x,r)});
      }
    `}const o=t[5],a=t[4]*o,l=t[3]*a,c=t[2]*l,u=t[1]*c;if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${yc(s)}
      }
    `;const h=s.shapeInfo.flatOffset,d=s.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===o&&h==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;const g=Wa(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function yc(s){const t=s.name,e=ht(s.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function WJ(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=s.shapeInfo.logicalShape.length,o=t.logicalShape.length,a=hk(s.shapeInfo.logicalShape,t.logicalShape),l=Ge(o),c=o-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":o<2&&a.length>=1?u="coords = 0;":u=a.map(v=>`coords.${h[v+c]} = 0;`).join(`
`);let d="";o<2&&r>0?d="coords":d=s.shapeInfo.logicalShape.map((v,y)=>`coords.${h[y+c]}`).join(", ");let f="return outputValue;";const g=ht(s.shapeInfo.logicalShape)===1,x=ht(t.logicalShape)===1;if(r===1&&!g&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)o===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const v=r-2,y=r-1;a.indexOf(v)>-1&&a.indexOf(y)>-1?f="return vec4(outputValue.x);":a.indexOf(v)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(y)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${i}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${n}(${d});
      ${f}
    }
  `}function GJ(s,t){const e=s.name,n=e.charAt(0).toUpperCase()+e.slice(1),i="get"+n+"AtOutCoords",r=t.texShape,o=s.shapeInfo.texShape,a=s.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!s.shapeInfo.isUniform&&a===l&&s.shapeInfo.flatOffset==null&&ke(o,r))return`
      float ${i}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=Ge(l),u=hk(s.shapeInfo.logicalShape,t.logicalShape),h=l-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(g=>`coords.${f[g+h]} = 0;`).join(`
`);let p="";return l<2&&a>0?p="coords":p=s.shapeInfo.logicalShape.map((g,m)=>`coords.${f[m+h]}`).join(", "),`
    float ${i}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${n}(${p});
    }
  `}function Ge(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function ty(s,t,e){const{newShape:n,keptDims:i}=wo(t),r=t.length,o=s&&r===3&&t[0]===1,a=o?t.slice(1):n,l=!s&&r>1&&!ke(t,e)&&n.length<r||o;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:i}}function wc(s,t){const e=JSON.parse(JSON.stringify(s));return e.shapeInfo.logicalShape=t,e}function _c(s,t){return t.map(e=>s[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HJ(s,t,e,n){const i=e.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),r=i.map(u=>u.shapeInfo),o={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=cJ(i,o,t),l=OZ(s.gl,a),c=s.createProgram(l);return at().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:r,outShapeInfo:o},pk(s,t,c))}function pk(s,t,e){const n={},i={},r={},o=[];let a,l,c,u=null,h=null;h=s.getUniformLocation(e,"NAN",!1),at().getNumber("WEBGL_VERSION")===1&&(u=s.getUniformLocation(e,"INFINITY",!1));const d=!1;for(let f=0;f<t.variableNames.length;f++){const p=t.variableNames[f];n[p]=s.getUniformLocation(e,p,d),n[`offset${p}`]=s.getUniformLocation(e,`offset${p}`,d),t.enableShapeUniforms&&(i[`${p}Shape`]=s.getUniformLocation(e,`${p}Shape`,d),r[`${p}TexShape`]=s.getUniformLocation(e,`${p}TexShape`,d))}return t.enableShapeUniforms&&(a=s.getUniformLocation(e,"outShape",d),c=s.getUniformLocation(e,"outShapeStrides",d),l=s.getUniformLocation(e,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((f,p)=>{o[p]=s.getUniformLocation(e,f.name,d)}),{uniformLocations:n,customUniformLocations:o,infLoc:u,nanLoc:h,inShapesLocations:i,inTexShapesLocations:r,outShapeLocation:a,outShapeStridesLocation:c,outTexShapeLocation:l}}function L_(s,t){if(s.length!==t.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${t.length} inputs`);s.forEach((e,n)=>{const i=e.logicalShape,r=t[n],o=r.shape;if(!ke(i,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${o} must match`);if(e.isUniform&&r.isUniform)return;const a=e.texShape,l=r.isUniform?null:r.texData.texShape;if(!ke(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function qJ(s,t,e,n,i){t.program.enableShapeUniforms||(L_(t.inShapeInfos,e),L_([t.outShapeInfo],[n]));const r=n.texData.texture,o=n.texData.texShape;n.texData.isPacked?s.setOutputPackedMatrixTexture(r.texture,o[0],o[1]):s.setOutputMatrixTexture(r.texture,o[0],o[1]),s.setProgram(t.webGLProgram),at().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&s.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&s.gl.uniform1f(t.nanLoc,NaN),e.forEach((l,c)=>{const u=t.program.variableNames[c],h=t.uniformLocations[u],d=t.uniformLocations[`offset${u}`],f=t.inShapesLocations[`${u}Shape`],p=t.inTexShapesLocations[`${u}TexShape`];if(f){const{uniformShape:g}=ty(t.program.packedInputs,l.shape,l.texData.texShape);switch(g.length){case 1:s.gl.uniform1iv(f,new Int32Array(g));break;case 2:s.gl.uniform2iv(f,new Int32Array(g));break;case 3:s.gl.uniform3iv(f,new Int32Array(g));break;case 4:s.gl.uniform4iv(f,new Int32Array(g));break}}if(p&&s.gl.uniform2i(p,l.texData.texShape[0],l.texData.texShape[1]),h!=null){if(l.isUniform){if(ht(l.shape)<2)s.gl.uniform1f(h,l.uniformValues[0]);else{let g=l.uniformValues;g instanceof Float32Array||(g=new Float32Array(g)),s.gl.uniform1fv(h,g)}return}l.texData.slice!=null&&d!=null&&s.gl.uniform1i(d,l.texData.slice.flatOffset),s.setInputMatrixTexture(l.texData.texture.texture,h,c)}});const a=t.outShapeLocation;if(a)switch(n.shape.length){case 1:s.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:s.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:s.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:s.gl.uniform4iv(a,new Int32Array(n.shape));break}if(t.outShapeStridesLocation){const l=Zt(n.shape);switch(n.shape.length){case 2:s.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:s.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:s.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}t.outTexShapeLocation&&s.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&i&&t.program.customUniforms.forEach((l,c)=>{const u=t.customUniformLocations[c],h=i[c];if(l.type==="float")s.gl.uniform1fv(u,h);else if(l.type==="vec2")s.gl.uniform2fv(u,h);else if(l.type==="vec3")s.gl.uniform3fv(u,h);else if(l.type==="vec4")s.gl.uniform4fv(u,h);else if(l.type==="int")s.gl.uniform1iv(u,h);else if(l.type==="ivec2")s.gl.uniform2iv(u,h);else if(l.type==="ivec3")s.gl.uniform3iv(u,h);else if(l.type==="ivec4")s.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}),s.executeProgram()}function XJ(s,t,e){let n="";t.concat(e).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=ty(s.packedInputs,o.shape,l);let d="",f="",p="";if(u.length===1&&s.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!s.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!s.packedInputs){const w=Zt(u);p=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const g=o.shape.length,m=u.length===2&&ke(o.shape,l),x=ht(o.shape)===1,v=jl(o.shape,e.shape),y=!s.packedInputs&&g===e.shape.length&&ke(l,e.texData.texShape),b=s.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${g}_${y}_${c?h:""}_${u.length}_${x}_${v}_${m}_${d}_${f}_${p}_${b}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;n+=`${o.shape}_${l}_${a}`}});const i=s.userCode;let r=s.constructor.name;return r+="_"+n+"_"+i+`${at().getNumber("WEBGL_VERSION")}`,r}function cs(s){return at().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jJ{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=mu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?wm(["r","c","d"],t):Va(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KJ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=mu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?wm(["r","c","d"],t):Va(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YJ{constructor(t){this.variableNames=["A"],this.outTexUsage=Ps.DOWNLOAD;const e=ls();this.outputShape=t,this.userCode=`
      ${uk}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZJ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ps.DOWNLOAD;const e=ls();this.outputShape=t,this.userCode=`
      ${uk}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JJ={R:0,G:1,B:2,A:3};class P_{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let o="";for(let a=0;a<n.length;a++){const l=n[a];o+=`
          if(offset == ${a}) {
            result = values[${JJ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Qb():Jb(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${i.texture2D}(A, uv);
          ${o}
        }
        ${i.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QJ{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ls();this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let i="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;i+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Qb():Jb(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${i}

          ${n.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tQ(s){const t=ls(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return PZ(s,e)}function eQ(s){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return VZ(s,t)}function nQ(s){const t=new Uint16Array([0,1,2,2,1,3]);return WZ(s,t)}function Gh(s,t,e,n,i,r){HZ(t,e);const o=GZ(s),a=s.TEXTURE_2D;return Ut(s,()=>s.bindTexture(a,o)),Ut(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),Ut(s,()=>s.texParameteri(a,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),Ut(s,()=>s.texParameteri(a,s.TEXTURE_MIN_FILTER,s.NEAREST)),Ut(s,()=>s.texParameteri(a,s.TEXTURE_MAG_FILTER,s.NEAREST)),at().getNumber("WEBGL_VERSION")===1?Ut(s,()=>s.texImage2D(a,0,n,t,e,0,i,r,null)):Ut(s,()=>s.texStorage2D(a,1,n,t,e)),Ut(s,()=>s.bindTexture(s.TEXTURE_2D,null)),{texture:o,texShape:[e,t]}}function mk(s){return s.internalFormatFloat}function sQ(s,t,e,n){const[i,r]=Vh(t,e);return Gh(s,i,r,mk(n),n.textureFormatFloat,s.FLOAT)}function gk(s){return s.internalFormatHalfFloat}function iQ(s,t,e,n){const[i,r]=Vh(t,e);return Gh(s,i,r,gk(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function xk(s){return s.downloadTextureFormat}function rQ(s,t,e,n){const[i,r]=Vh(t,e);return Gh(s,i,r,xk(n),s.RGBA,s.UNSIGNED_BYTE)}function vk(s){return s.internalFormatPackedFloat}function oQ(s,t,e,n){const[i,r]=vc(t,e);return Gh(s,i,r,vk(n),s.RGBA,s.FLOAT)}function bk(s){return s.internalFormatPackedHalfFloat}function aQ(s,t,e,n){const[i,r]=vc(t,e);return Gh(s,i,r,bk(n),s.RGBA,n.textureTypeHalfFloat)}function lQ(s,t,e){return Ut(s,()=>s.bindBuffer(s.ARRAY_BUFFER,e)),$_(s,t,"clipSpacePos",e,3,20,0)&&$_(s,t,"uv",e,2,20,12)}function cQ(s,t,e,n,i,r){Ut(s,()=>s.bindTexture(s.TEXTURE_2D,t));let o,a,l;i instanceof Uint8Array?(o=new Uint8Array(e*n*4),a=s.UNSIGNED_BYTE,l=s.RGBA):(o=new Float32Array(e*n*4),a=s.FLOAT,l=r.internalFormatPackedFloat),o.set(i),at().getNumber("WEBGL_VERSION")===2?Ut(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e,n,s.RGBA,a,o)):Ut(s,()=>s.texImage2D(s.TEXTURE_2D,0,l,e,n,0,s.RGBA,a,o)),Ut(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function uQ(s,t,e){Ut(s,()=>s.bindTexture(s.TEXTURE_2D,t)),e.data instanceof Uint8Array?at().getNumber("WEBGL_VERSION")===2?Ut(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,e.width,e.height,s.RGBA,s.UNSIGNED_BYTE,e.data)):Ut(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,e.width,e.height,0,s.RGBA,s.UNSIGNED_BYTE,e.data)):at().getNumber("WEBGL_VERSION")===2?Ut(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,s.RGBA,s.UNSIGNED_BYTE,e)):Ut(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,e)),Ut(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function hQ(s,t,e,n){const i=s.createBuffer();Ut(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,i));const a=4*4*t*e;return Ut(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,a,s.STREAM_READ)),Ut(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,0)),Ut(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),i}function dQ(s,t,e){const n=s,i=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,i),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),i}function fQ(s,t,e,n){const[i,r]=Vh(t,e),o=4,a=new Uint8Array(AZ(t*e,o));return Ut(s,()=>s.readPixels(0,0,i,r,n.downloadTextureFormat,s.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function pQ(s,t,e,n,i,r,o,a){const l=s,c=new Float32Array(NZ(r,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function mQ(s,t,e){const n=new Float32Array(t*e*4);return Ut(s,()=>s.readPixels(0,0,e,t,s.RGBA,s.FLOAT,n)),n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lg{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=at().getNumber("WEBGL_VERSION");t!=null?(this.gl=t,EZ(e,t)):this.gl=Hi(e);let n="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),at().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Pd(this.gl,r),ci(this.gl,o))this.textureHalfFloatExtension=Pd(this.gl,o);else if(at().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ci(this.gl,i))this.colorBufferHalfFloatExtension=Pd(this.gl,i);else if(at().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ci(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(ci(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=eQ(this.gl),this.indexBuffer=nQ(this.gl),this.framebuffer=qZ(this.gl),this.textureConfig=Zb(this.gl,this.textureHalfFloatExtension)}get debug(){return at().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Ut(t,()=>t.finish()),Ut(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ut(t,()=>t.deleteFramebuffer(this.framebuffer)),Ut(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ut(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ut(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),sQ(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),iQ(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),rQ(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),uQ(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,i){this.throwIfDisposed(),cQ(this.gl,t,e,n,i,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),aQ(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),oQ(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(D_(this.gl,this.framebuffer),this.outputTexture=null),Ut(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>fQ(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,i,r,o){return pQ(this.gl,t,e,n,i,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return dQ(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const i=hQ(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(at().getBool("WEBGL_FENCE_API_ENABLED")){const i=t,r=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const o=i.clientWaitSync(r,0,0);return o===i.ALREADY_SIGNALED||o===i.CONDITION_SATISFIED},e=r}else at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>mQ(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=tQ(e));const n=BZ(e);return Ut(e,()=>e.attachShader(n,this.vertexShader)),Ut(e,()=>e.attachShader(n,t)),UZ(e,n),this.debug&&Rg(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=lQ(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&Ut(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Rg(this.gl,this.program),Ut(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?jZ(this.gl,t,e):KZ(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ut(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),YZ(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[i,r]=vc(e,n);this.setOutputMatrixTextureDriver(t,i,r)}setOutputMatrixWriteRegion(t,e,n,i){this.setOutputMatrixWriteRegionDriver(n,t,i,e)}setOutputPackedMatrixWriteRegion(t,e,n,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Rg(this.gl,this.program),Od(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Ut(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ut(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Pd(this.gl,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(i.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y1(()=>this.disposed||this.isQueryAvailable(t,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{const n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const n=this.gl,i=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const n=this.getQueryTimerExtensionWebGL1(),i=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=gQ(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in at().platform&&(n=at().platform.setTimeoutCustom.bind(at().platform)),y1(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),$g(this.gl,t,this.framebuffer),this.debug&&Od(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?($g(this.gl,this.outputTexture,this.framebuffer),this.debug&&Od(this.gl)):D_(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const i=this.gl;$g(i,t,this.framebuffer),this.debug&&Od(i),this.outputTexture=t,Ut(i,()=>i.viewport(0,0,e,n)),Ut(i,()=>i.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,i){this.throwIfDisposed(),Ut(this.gl,()=>this.gl.scissor(t,e,n,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function gQ(s){let t=0;for(;t<s.length&&s[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:xQ,bincountImpl:yk,bincountReduceImpl:vQ,castImpl:bQ,ceilImpl:yQ,concatImpl:wQ,equalImpl:_Q,expImpl:SQ,expm1Impl:CQ,floorImpl:IQ,gatherNdImpl:TQ,gatherV2Impl:EQ,greaterImpl:MQ,greaterEqualImpl:kQ,lessImpl:AQ,lessEqualImpl:NQ,linSpaceImpl:RQ,logImpl:$Q,maxImpl:DQ,maximumImpl:FQ,minimumImpl:LQ,multiplyImpl:PQ,negImpl:OQ,notEqualImpl:zQ,prodImpl:BQ,raggedGatherImpl:UQ,raggedRangeImpl:VQ,raggedTensorToTensorImpl:WQ,rangeImpl:GQ,rsqrtImpl:HQ,scatterImpl:qQ,sigmoidImpl:XQ,simpleAbsImpl:wk,sliceImpl:jQ,sparseFillEmptyRowsImpl:KQ,sparseReshapeImpl:YQ,sparseSegmentReductionImpl:_k,sqrtImpl:ZQ,stridedSliceImpl:JQ,stringNGramsImpl:QQ,stringSplitImpl:ttt,stringToHashBucketFastImpl:ett,subImpl:ntt,tileImpl:stt,topKImpl:itt,transposeImpl:ey,uniqueImpl:rtt}=hj;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(s,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${s}.${e}`)}function rs(s,t){return t===1?[s]:Sk(s,t)}function ott(s,t){if(s===1)return"rc";let e="";for(let n=0;n<s;n++)e+=t[n],n<s-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class att{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=cs(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=rs("rc",this.rank),n=Ge(this.rank),i=this.getOutOfBoundsCondition(e),r=this.getSetup(e),o=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${i}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let i=0;i<=1;i++){let r=`${n===0?"r":"rp1"}, ${i===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)r=`${t[t.length-1-o]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],i=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${i};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ck{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);let n="";for(let i=0;i<4;i++){let r="thisRC = rc;";i%2===1&&(r+="thisRC.z += 1;"),i>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${i}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${i>0?"}":""}
      `}this.userCode=`
      ${ltt(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Qb():Jb(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}}function ltt(s,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?lJ(["r","c","d"],"inputShape"):Va(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ctt{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const i=z_(e,n),r=B_(t,i,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=O_(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[r].shift();return this.usedTextures[r].push(l),l}let a;return i===Un.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):i===Un.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):i===Un.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):i===Un.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):i===Un.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,e,n,i){if(this.freeTextures==null)return;const r=z_(n,i),o=B_(e,r,i);o in this.freeTextures||(this.freeTextures[o]=[]);const a=O_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,i),l=at().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],u=c.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function utt(s,t){const e=s;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===s.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function O_(s,t,e,n,i){const r=htt(t,n);let o;if(i){const[l,c]=vc(s[0],s[1]);o=l*c}else{const[l,c]=Vh(s[0],s[1]);o=l*c}const a=utt(e,r);return o*a}function htt(s,t){switch(s){case Un.PACKED_2X2_FLOAT32:return vk(t);case Un.PACKED_2X2_FLOAT16:return bk(t);case Un.UNPACKED_FLOAT32:return mk(t);case Un.UNPACKED_FLOAT16:return gk(t);case Un.PACKED_4X1_UNSIGNED_BYTE:return xk(t);default:throw new Error(`Unknown physical texture type ${s}`)}}function dtt(s){return at().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?Un.PACKED_2X2_FLOAT32:Un.UNPACKED_FLOAT32:s?Un.PACKED_2X2_FLOAT16:Un.UNPACKED_FLOAT16}function z_(s,t){if(s===Ps.UPLOAD)return Un.PACKED_2X2_FLOAT32;if(s===Ps.RENDER||s==null)return dtt(t);if(s===Ps.DOWNLOAD||s===Ps.PIXELS)return Un.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function B_(s,t,e){return`${s[0]}_${s[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fr{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const wi="if (isnan(x)) return x;",ftt="return x;",U_="return abs(x);",ptt="return (x >= 0.0) ? x : (exp(x) - 1.0);",mtt=wi+`
  return (x < 0.0) ? 0.0 : x;
`,gtt=wi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ml="return x;",xtt="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vtt="return x;",btt=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ytt=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wtt=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_tt="return 1.0 / (1.0 + exp(-1.0 * x));";class ia{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Stt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);const e=t.length,n=rs("rc",e),i=Ge(e),r=ott(e,n),o=n.slice(-2),a=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${i} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ctt=uT,Itt=1e-7,Ttt=1e-4,Ud={};function Ett(s){return s in Ud||(Ud[s]={}),Ud[s]}const Mtt=at().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),ktt=600;function Att(){return at().global.screen==null?1024:at().global.screen.height*at().global.screen.width*window.devicePixelRatio*ktt/1024/1024}class _m extends l0{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!at().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Lg)e=t;else{const n=Hi(at().getNumber("WEBGL_VERSION"),t);e=new Lg(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const n=Hi(at().getNumber("WEBGL_VERSION"));e=new Lg(n),this.binaryCache=Ett(at().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ctt(this.gpgpu),this.numMBBeforeWarning=Att(),this.texData=new IC(this,er())}nextDataId(){return _m.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,i,r,o){const a=this.makeTensorInfo(e,n),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[i,r]},l.texShape=[i,r];const c=zd(e),u=new P_(c,!1,o),h=this.runWebGLProgram(u,[a],n,[[i,r]]);return h.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,e,n){if((at().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||at().getBool("DEBUG"))&&this.checkNumericalProblems(t),n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:e,dtype:n,values:t,usage:Ps.UPLOAD,refCount:1}),i}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,n,i,r){if(at().getBool("DEBUG")&&this.checkNumericalProblems(e),i==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:i,values:e,usage:Ps.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:i,complexTensorInfos:r,slice:o,shape:a,isPacked:l}=e;if(o!=null){let d;l?d=new ia(a,ml):d=new Fr(a,ml);const f=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:i}],i),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(n!=null)return this.convertAndCacheOnCPU(t);if(i==="string")return n;const c=this.activeTimers!=null;let u;c&&(u=Kn());let h;if(i==="complex64"){const d=this.readSync(r.real.dataId),f=this.readSync(r.imag.dataId);h=Br(d,f)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=Kn()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const p=this.pendingRead.get(t);return new Promise(g=>p.push(g))}const e=this.texData.get(t),{values:n,shape:i,slice:r,dtype:o,complexTensorInfos:a,isPacked:l}=e;if(r!=null){let p;l?p=new ia(i,ml):p=new Fr(i,ml);const g=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:o}],o),m=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),m}if(n!=null)return this.convertAndCacheOnCPU(t);if(at().getBool("DEBUG")&&!at().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&at().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(o!=="complex64"&&at().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const p=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(p.texture.texture,...Ld(i))}this.pendingRead.set(t,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),g=p[0],m=p[1];h=Br(g,m)}else if(c==null)h=this.getValuesFromTexture(t);else{const p=ht(i);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const p=this.gpgpu.gl;Ut(p,()=>p.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(t,h),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(p=>p(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&er().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,e={}){const n=this.texData.get(t),{values:i,shape:r,slice:o,dtype:a,isPacked:l,texture:c}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let f;l?f=new ia(r,ml):f=new Fr(r,ml);const p=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:a}],a),g=this.readToGPU(p,e);return this.disposeIntermediateTensorInfo(p),g}if(c==null)throw i!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=er().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const n=e.map(i=>co(i));return fe(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return fe(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const n=t[e];if(!FZ(n))throw at().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:i}=this.texData.get(t),r=ht(e);if(at().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Ld(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),p}const o=at().getBool("WEBGL_PACK")&&i===!0,a=o?zd(e):e,l=o?new ZJ(a):new YJ(a),c=this.runWebGLProgram(l,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let i=!1;this.programTimersStack==null?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=Wl(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=Wl(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);a.kernelMs=zz(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Kn(),endMs:null}}endTimer(t){return at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Kn(),t)}async getQueryTime(t){if(at().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return n!=null&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:i,usage:r,isPacked:o,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(i,n),this.textureManager.releaseTexture(e,i,r,o)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=Mtt){return at().getBool("WEBGL_CPU_FORWARD")&&t.every(n=>this.texData.get(n.dataId).texture==null&&ht(n.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Ls("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Ctt(t.shape,e)}packedUnaryOp(t,e,n){const i=new ia(t.shape,e),r=this.compileAndRun(i,[t],n);return er().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const i=wk(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,i)}if(at().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,U_,t.dtype);const e=new Fr(t.shape,U_),n=this.compileAndRun(e,[t]);return er().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let i;if(e==="string"&&n!=null&&n.length>0&&Tu(n[0])){const r=n.map(o=>oo(o));i=this.write(r,t,e)}else i=this.write(n,t,e);return this.texData.get(i).usage=null,{dataId:i,shape:t,dtype:e}}makeOutput(t,e,n){return er().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){const e=new Stt(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new att(t.shape),n=!0;return this.runWebGLProgram(e,[t],t.dtype,null,n)}packedReshape(t,e){const n=[sc(t.shape),...ic(t.shape)],i={dtype:t.dtype,shape:n,dataId:t.dataId},r=[sc(e),...ic(e)],o=new Ck(r,n),a=!0,l=[n],c=this.runWebGLProgram(o,[i],t.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:i,shape:r,dtype:o}=n;if(e!=null){const d=ht(r),f=e[0]*e[1]*4;D(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=zd(r);let l;i?l=new KJ(a):l=new jJ(a);const c=!0,u=[e!=null?e:Ld(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],o,u,c,e);return{dtype:o,shape:r,dataId:h.dataId}}runWebGLProgram(t,e,n,i,r=!1,o){const a=this.makeTensorInfo(t.outputShape,n),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===mu.DENSE){const x=o!=null?o:Ld(t.outputShape);l.texShape=x.map(v=>v*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),ht(a.shape)===0)return l.values=Gn(a.dtype,0),a;const c=[],u=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let v=this.texData.get(x.dataId);if(v.texture==null){if(!t.packedInputs&&ht(x.shape)<=at().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:v.values};t.packedInputs&&(v.isPacked=!0,v.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!v.isPacked!=!!t.packedInputs)x=v.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),v=this.texData.get(x.dataId);else if(v.isPacked&&!Af(v.shape,x.shape)){const y=x,b=x.shape;x.shape=v.shape,x=this.packedReshape(x,b),c.push(x),v=this.texData.get(x.dataId),y.shape=b}return{shape:x.shape,texData:v,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=XJ(t,u,h),f=this.getAndSaveBinary(d,()=>HJ(this.gpgpu,t,u,h)),p=this.activeTimers!=null;let g;p&&(g=this.startTimer()),at().get("ENGINE_COMPILE_ONLY")||qJ(this.gpgpu,f,u,h,i),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),p&&(g=this.endTimer(g),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(g)}));const m=at().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const x=Kn();x-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!at().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,n,i,r=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,i,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(at().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=st(()=>{if(!at().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=at().getBool("DEBUG");at().set("DEBUG",!1);const e=this.abs(ie(1e-8)).dataSync()[0];if(at().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Itt:Ttt}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:i,values:r,texture:o,usage:a,isPacked:l}=e;if(o!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Kn());let h=e.texShape;if(h==null&&(h=QZ(n,l),e.texShape=h),r!=null){const d=zd(n);let f,p=h[1],g=h[0];const m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!m)&&([p,g]=vc(h[0],h[1])),l?f=new QJ(d,m):f=new P_(d,m);const x=m?[g,p]:h,v=this.makeTensorInfo(x,i),y=this.texData.get(v.dataId);m?y.usage=Ps.PIXELS:y.usage=Ps.UPLOAD,y.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),p,g,r);const b=[[g,p]],w=!0,S=this.runWebGLProgram(f,[v],i,b,w),C=this.texData.get(S.dataId);e.texShape=C.texShape,e.isPacked=C.isPacked,e.usage=C.usage,at().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(e.texture=C.texture,e.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(v),c&&(this.uploadWaitMs+=Kn()-u)}else{const d=this.acquireTexture(h,a,i,l);e.texture=d}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:i}=n;return this.releaseGPUData(t),e!=null&&(n.values=Ntt(e,i)),n.values}acquireTexture(t,e,n,i){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,i)}computeBytes(t,e){return t[0]*t[1]*sx(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const n=new Promise(i=>{try{this.checkCompletion_(e),i(!0)}catch(r){throw r}});t.push(n)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await pT(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(ck(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:n,infLoc:i,nanLoc:r,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:c,outTexShapeLocation:u}=pk(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=i,t.nanLoc=r,t.inShapesLocations=o,t.inTexShapesLocations=a,t.outShapeLocation=l,t.outShapeStridesLocation=c,t.outTexShapeLocation=u}}createTensorFromTexture(t,e,n){const{texture:i,height:r,width:o,channels:a}=t,l=er().backend;if(!l.gpgpu.gl.isTexture(i))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(i,e,n,r,o,a);return er().makeTensorFromDataId(c,e,n,l)}}_m.nextDataId=0;function Ntt(s,t){if(t==="float32"||t==="complex64")return s;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let n=0;n<e.length;++n)e[n]=Math.round(s[n]);return e}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oI()&&bI("webgl",()=>new _m,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ny=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class rc{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=ae(e,n),this.enableShapeUniforms=cs(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hh=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class qh{constructor(t,e,n,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ae(e,n);const r=this.outputShape.length;this.enableShapeUniforms=cs(r);let o="";if(i)if(r===0||ht(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${Ge(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=rs("coords",r);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(s){const{inputs:t,backend:e}=s,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const Rtt={kernelName:ju,backendName:"webgl",kernelFunc:As};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function No(s){const{inputs:t,backend:e}=s,{real:n,imag:i}=t,r=e.makeTensorInfo(n.shape,"complex64"),o=e.texData.get(r.dataId),a=As({inputs:{x:n},backend:e}),l=As({inputs:{x:i},backend:e});return o.complexTensorInfos={real:a,imag:l},r}const $tt={kernelName:b0,backendName:"webgl",kernelFunc:No};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ik="return (a < 0.) ? b * a : a;",Tk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Dtt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{alpha:r}=n,o=e.makeTensorInfo([],"float32",_o(r,"float32")),a=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qh(Tk,i.shape,o.shape):new rc(Ik,i.shape,o.shape),l=e.runWebGLProgram(a,[i,o],"float32");return e.disposeIntermediateTensorInfo(o),l}const Ftt={kernelName:fp,backendName:"webgl",kernelFunc:Dtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek="return (a < 0.) ? b * a : a;",Mk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Ltt(s){const{inputs:t,backend:e}=s,{x:n,alpha:i}=t,r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qh(Mk,n.shape,i.shape):new rc(Ek,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],"float32")}const Ptt={kernelName:Rp,backendName:"webgl",kernelFunc:Ltt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sc="if (isnan(x)) return x;";function Ie({opSnippet:s,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:i,backend:r})=>{const{x:o}=i,a=r,l=n||o.dtype;if(a.shouldExecuteOnCPU([o])&&e!=null){const h=a.texData.get(o.dataId),d=e(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const c=at().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new ia(o.shape,t):u=new Fr(o.shape,s),a.runWebGLProgram(u,[o],l)}}function jn({opSnippet:s,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:i,dtype:r}){return({inputs:o,backend:a})=>{const{a:l,b:c}=o,u=a;if(n&&l.dtype==="complex64"){const p=u.texData.get(l.dataId),g=u.texData.get(c.dataId),[m,x]=[[p.complexTensorInfos.real,g.complexTensorInfos.real],[p.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(y=>{const[b,w]=y,S={dataId:b.dataId,dtype:b.dtype,shape:l.shape},C={dataId:w.dataId,dtype:w.dtype,shape:c.shape},_=new rc(s,l.shape,c.shape);return u.runWebGLProgram(_,[S,C],Ts(b.dtype,w.dtype))}),v=No({inputs:{real:m,imag:x},backend:u});return u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(x),v}const h=r||Ts(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&i!=null){const p=u.texData.get(l.dataId).values,g=u.texData.get(c.dataId).values,m=l.dtype==="string"?Ea(p):p,x=l.dtype==="string"?Ea(g):g,[v,y]=i(l.shape,c.shape,m,x,h),b=u.makeTensorInfo(y,h),w=u.texData.get(b.dataId);return w.values=v,b}const d=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let f;return d?f=new qh(t,l.shape,c.shape,e):f=new rc(s,l.shape,c.shape),u.runWebGLProgram(f,[l,c],h)}}function gu(s,t=!1){if(s==="linear")return t?vtt:ftt;if(s==="relu")return t?ytt:mtt;if(s==="elu")return t?btt:ptt;if(s==="relu6")return t?wtt:gtt;if(s==="prelu")return t?Mk:Ek;if(s==="leakyrelu")return t?Tk:Ik;if(s==="sigmoid")return t?_tt:xtt;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kk{constructor(t,e,n,i=!1,r=!1,o=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=cs(this.outputShape.length);const u=i?t[1]:t[2],h=Math.ceil(u/2),d=i?"i * 2, rc.y":"rc.y, i * 2",f=r?"rc.z, i * 2":"i * 2, rc.z",p=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",x="";a&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:m=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const v=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(b=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${y};
          int batchB = ${b};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${g[0]});
          result += (${p[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${v}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V_={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class W_{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ae(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_="return a * b;";function sy(s){const{inputs:t,backend:e}=s,{a:n,b:i}=t,r=Ts(n.dtype,i.dtype);if(n.dtype==="complex64"){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),c=new W_(V_.REAL,n.shape,i.shape),u=new W_(V_.IMAG,n.shape,i.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:i.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:i.shape}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=No({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}if(e.shouldExecuteOnCPU([n,i])){const a=e.texData.get(n.dataId),l=e.texData.get(i.dataId),[c,u]=PQ(n.shape,i.shape,a.values,l.values,r),h=e.makeTensorInfo(u,r),d=e.texData.get(h.dataId);return d.values=c,h}let o;return at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new qh(G_,n.shape,i.shape):o=new rc(G_,n.shape,i.shape),e.runWebGLProgram(o,[n,i],r)}const Ott={kernelName:sh,backendName:"webgl",kernelFunc:sy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ztt(s,t,e){const n=[sc(s.shape),...ic(s.shape)],i={dtype:s.dtype,shape:n,dataId:s.dataId},r=[sc(t),...ic(t)],o=new Ck(r,n),a=!0,l=[n],c=e.runWebGLProgram(o,[i],s.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function At(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{shape:r}=n,o=e,a=ht(i.shape),l=EC(r,a),c=ht(l);D(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${i.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=o.texData.get(i.dataId);return u.isPacked&&!Af(i.shape,l)&&!(u.texture!==null&&Af(u.shape,l))?ztt(i,l,o):(o.incRef(i.dataId),{dataId:i.dataId,shape:l,dtype:i.dtype})}const Btt={kernelName:Dp,backendName:"webgl",kernelFunc:At};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H_{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];const a=Math.floor(n/4)*4,l=n%4;let c="sumValue += dot(values, ones);";if(e!=null){const h=1/e;c=`sumValue += dot(values * ${Gl(h)?h.toPrecision(2):h}, ones);`}let u="";r%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Utt{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:r,outSize:o}=t;this.outputShape=[i,o];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(n/4)*4,h=n%4;let d=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vtt(s){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:s[1],n=rm(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function Ga(s,t,e,n){const i=Vtt(s.shape);let r=s;for(let o=0;o<i.length;o++){const{inSize:a,windowSize:l,outSize:c}=i[o];let u,h;e==="mean"?u=o===0?new H_({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},a):new H_({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c}):u=new Utt({windowSize:l,inSize:a,batchSize:s.shape[0],outSize:c},e),h=r,r=n.runWebGLProgram(u,[r],t),h.dataId!==s.dataId&&n.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wtt{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const i=Ge(this.rank),r=Gtt(e);this.userCode=`
    void main() {
      ${i} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function Gtt(s){const t=s.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let i=0;i<s.length;i++)n[s[i]]=e[i];return n.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Htt{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=Ge(this.rank),r=Sk("rc",this.rank),o=new Array(this.rank);for(let u=0;u<e.length;u++)o[e[u]]=r[u];const a=`vec2(${o.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${i} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sm(s,t,e){const n=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Htt(s.shape,t):new Wtt(s.shape,t);return e.runWebGLProgram(n,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qtt(s,t,e,n){const i=t,r=s.shape.length,o=pe(i,s.shape);let a=o;const l=sn(a,r),c=l!=null;let u=s;c&&(u=Sm(s,l,n),a=dn(a.length,r)),Xn("sum",a,r);const[h,d]=Pn(u.shape,a);let f=h;e&&(f=hn(h,o));const p=ht(d),m=ht(s.shape)/p,x=At({inputs:{x:u},attrs:{shape:[m,p]},backend:n}),v=rv(s.dtype),y=Ga(x,v,"sum",n),b=At({inputs:{x:y},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(y),c&&n.disposeIntermediateTensorInfo(u),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cm(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n;return qtt(i,r,o,e)}const Xtt={kernelName:Bp,backendName:"webgl",kernelFunc:Cm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function as(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{perm:r}=n,o=e,a=i.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=i.shape[r[u]];let c;if(o.shouldExecuteOnCPU([i])){const h=o.texData.get(i.dataId).values,d=ey(h,i.shape,i.dtype,r,l);c=o.makeTensorInfo(l,i.dtype);const f=o.texData.get(c.dataId);f.values=d}else c=Sm(i,r,o);return c}const jtt={kernelName:Nl,backendName:"webgl",kernelFunc:as};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ak=1e3;function Nf({a:s,b:t,transposeA:e,transposeB:n,backend:i,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=s.shape.length,u=t.shape.length,h=e?s.shape[c-2]:s.shape[c-1],d=n?t.shape[u-1]:t.shape[u-2],f=e?s.shape[c-1]:s.shape[c-2],p=n?t.shape[u-2]:t.shape[u-1],g=s.shape.slice(0,-2),m=t.shape.slice(0,-2),x=ht(g),v=ht(m),b=ae(s.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,p]);D(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${s.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);const w=e?[x,h,f]:[x,f,h],S=n?[v,p,d]:[v,d,p],C=At({inputs:{x:s},backend:i,attrs:{shape:w}}),_=At({inputs:{x:t},backend:i,attrs:{shape:S}}),I=[C,_],T=Math.max(x,v),N=e?C.shape[1]:C.shape[2],P=r!=null,E=o!=null,M=l==="leakyrelu",A=l!=null?gu(l,!0):null,R=P||E||M||A!=null;let V;if((f===1||p===1)&&N>Ak&&R===!1){let $=C,U=_;e&&($=as({inputs:{x:C},backend:i,attrs:{perm:[0,2,1]}}),I.push($)),n&&(U=as({inputs:{x:_},backend:i,attrs:{perm:[0,2,1]}}),I.push(U));const H=p!==1,W=p===1;let Z=$;H&&(Z=At({inputs:{x:$},backend:i,attrs:{shape:[T,N,1]}}),I.push(Z));const it=p===1?2:1;let lt=U;W&&(lt=At({inputs:{x:U},backend:i,attrs:{shape:[T,1,N]}}),I.push(lt));const J=sy({inputs:{a:Z,b:lt},backend:i});V=Cm({inputs:{x:J},backend:i,attrs:{axis:it,keepDims:!0}}),I.push(J)}else{const $=Ts(s.dtype,t.dtype),U=new kk(w,S,[T,f,p],e,n,P,A,E,M),H=[C,_];if(r!=null&&H.push(r),E&&H.push(o),M){const W=i.makeTensorInfo([],"float32",_o(a,"float32"));H.push(W),I.push(W)}V=i.runWebGLProgram(U,H,$)}const L=At({inputs:{x:V},backend:i,attrs:{shape:b}});I.push(V);for(const $ of I)i.disposeIntermediateTensorInfo($);return L}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ktt(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r,bias:o,preluActivationWeights:a}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=n;return Nf({a:i,b:r,transposeA:l,transposeB:c,backend:e,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const Ytt={kernelName:rf,backendName:"webgl",kernelFunc:Ktt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_="return abs(x);";function Ztt(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){const r=e.texData.get(n.dataId),o=wk(r.values);return e.makeTensorInfo(n.shape,n.dtype,o)}let i;return at().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new ia(n.shape,q_):i=new Fr(n.shape,q_),e.runWebGLProgram(i,[n],n.dtype)}const Jtt={kernelName:Xf,backendName:"webgl",kernelFunc:Ztt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qtt=wi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,tet=Ie({opSnippet:Qtt}),eet={kernelName:Mu,backendName:"webgl",kernelFunc:tet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const net=wi+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,set=Ie({opSnippet:net}),iet={kernelName:ku,backendName:"webgl",kernelFunc:set};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X_="return a + b;",oet=jn({opSnippet:X_,packedOpSnippet:X_,supportsComplex:!0,cpuKernelImpl:xQ}),aet={kernelName:hc,backendName:"webgl",kernelFunc:oet};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cet{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uet{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,o)=>`T${o}`);const n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});const i=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zd(s){const{inputs:t,backend:e}=s,n=t;if(n.length===1)return As({inputs:{x:n[0]},backend:e});if(n.length>at().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),c=Zd({inputs:n.slice(0,l),backend:e}),u=Zd({inputs:n.slice(l),backend:e});return Zd({inputs:[c,u],backend:e})}const i=n.map(l=>l.dtype).reduce((l,c)=>Ts(l,c)),r=n.map(l=>l.shape),a=at().getBool("WEBGL_PACK")?new uet(n[0].shape,r):new cet(n[0].shape,r);return e.runWebGLProgram(a,n,i)}const het={kernelName:f0,backendName:"webgl",kernelFunc:Zd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function det(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=pe(r,i.shape);let c=l;const u=sn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=dn(c.length,a)),Xn("all",c,a);const[d,f]=Pn(h.shape,c),p=ht(f),g=At({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Ga(g,g.dtype,"all",e);let x;if(o){const v=hn(d,l);x=At({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=At({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const fet={kernelName:p0,backendName:"webgl",kernelFunc:det};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=pe(r,i.shape);let c=l;const u=sn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=dn(c.length,a)),Xn("any",c,a);const[d,f]=Pn(h.shape,c),p=ht(f),g=At({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Ga(g,g.dtype,"any",e);let x;if(o){const v=hn(d,l);x=At({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=At({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const met={kernelName:m0,backendName:"webgl",kernelFunc:pet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class get{constructor(t,e,n){this.variableNames=["A"];const{windowSize:i,batchSize:r,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const a=e==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${i};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${i}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xet{constructor(t,e,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],o=Math.ceil(r/e);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=Ge(l),u=rs("coords",l);let h,d;if(o===1){d=l+1;const _=Ge(d);h=`
        ${_} sourceLocR = ${_}(${u.join()}, 0);
        ++${u[l-1]};
        ${_} sourceLocG = ${_}(${u.join()}, 0);
        ++${u[l-2]};
        ${_} sourceLocA = ${_}(${u.join()}, 0);
        --${u[l-1]};
        ${_} sourceLocB = ${_}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],g=f.map(_=>"int "+_),m=rs("sourceLocR",d-1).concat("inIdx.r"),x=rs("sourceLocG",d-1).concat("inIdx.g"),v=rs("sourceLocB",d-1).concat("inIdx.b"),y=rs("sourceLocA",d-1).concat("inIdx.a"),b=n==="max"?"greaterThan":"lessThan",w=i?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${y.join()})));`,S=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${v.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,C=i?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${S};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${S};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nk(s,t,e,n=null){let i=t.shape[0],r=t.shape[1];n!=null&&(i=n.shape[0],r=n.shape[1]);const o=rm(r),a={windowSize:o,inSize:r,batchSize:i,outSize:Math.ceil(r/o)},l=new get(a,e,n==null),c=[t];n!=null&&c.push(n);const u=s.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=Nk(s,t,e,u);return s.disposeIntermediateTensorInfo(u),h}function Rk(s,t,e,n=null){const i=n!=null?n.shape:t.shape,r=i[i.length-1],o=rm(r),a=new xet(i,o,e,n==null),l=n==null?[t]:[t,n],c=s.runWebGLProgram(a,l,"int32");if(c.shape.length===t.shape.length){const u=Rk(s,t,e,c);return s.disposeIntermediateTensorInfo(c),u}return c}function $k(s,t,e,n){const i=[e];if(Xn("arg"+n.charAt(0).toUpperCase()+n.slice(1),i,t.shape.length),!at().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],o=s.texData.get(t.dataId),a=o!==null&&o.isPacked;let l=t;a&&(l=s.unpackTensor(t),r.push(l));const[c,u]=Pn(l.shape,i),h=ht(u),d=At({inputs:{x:l},backend:s,attrs:{shape:[-1,h]}});r.push(d);const f=Nk(s,d,n);r.push(f);const p=At({inputs:{x:f},backend:s,attrs:{shape:c}});return r.forEach(g=>s.disposeIntermediateTensorInfo(g)),p}return Rk(s,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=pe(r,i.shape);const a=sn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=as({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=dn(o.length,l.shape.length)),Xn("argMax",[o[0]],l.shape.length);const u=$k(e,l,o[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const bet={kernelName:jf,backendName:"webgl",kernelFunc:vet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r}=n;let o=pe(r,i.shape);const a=sn(o,i.shape.length);let l=i;const c=[];a!=null&&(l=as({inputs:{x:i},backend:e,attrs:{perm:a}}),c.push(l),o=dn(o.length,l.shape.length)),Xn("argMin",[o[0]],l.shape.length);const u=$k(e,l,o[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),u}const wet={kernelName:Kf,backendName:"webgl",kernelFunc:yet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _et=wi+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Cet=Ie({opSnippet:_et}),Iet={kernelName:Au,backendName:"webgl",kernelFunc:Cet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tet=wi+"return log(x + sqrt(x * x + 1.0));",Eet=Ie({opSnippet:Tet}),Met={kernelName:Nu,backendName:"webgl",kernelFunc:Eet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ket=wi+`
  return atan(x);
`,Aet=Ie({opSnippet:ket}),Net={kernelName:Ru,backendName:"webgl",kernelFunc:Aet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ret=ny+`
  return atan(a, b);
`,$et=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Hh+`
  return result;
`,Det=jn({opSnippet:Ret,packedOpSnippet:$et}),Fet={kernelName:Du,backendName:"webgl",kernelFunc:Det};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Let=wi+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Pet=Ie({opSnippet:Let}),Oet={kernelName:$u,backendName:"webgl",kernelFunc:Pet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xu{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const g=e==="avg",m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let v="0.0";if(g||(v="-1.0 / 1e-20"),n){const _=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${_} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${i?r?m:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const y="max";let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(b="avgValue / count");const w=Math.floor(o/4)*4,S=o%4,C=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${w};
          if (${S===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${S===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${S===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${b});
      }
    `}}class iy{constructor(t,e,n,i=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,f=t.effectiveFilterDepth,p=t.effectiveFilterHeight,g=t.effectiveFilterWidth,m=t.padInfo.front,x=t.padInfo.top,v=t.padInfo.left;this.outputShape=t.outShape;const y=e==="avg";let b="0.0";if(y||(b="-1.0 / 1e-20"),n){const T=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${m}, ${x}, ${v});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${T} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${i?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let S=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(S="avgValue / count");const C=Math.floor(o/4)*4,_=o%4,I=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${m}, ${x}, ${v});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${I}
            }

            int xC = xCCorner + ${C};
            if (${_===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${I}
            } else if (${_===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${I}
            } else if (${_===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${I}
            }
          }
          setOutput(${S});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Wh(i,"avgPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;D(ts(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=bi(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&ke(u.inShape,u.outShape))return As({inputs:{x:i},backend:e});const h=new xu(u,"avg",!1);return e.runWebGLProgram(h,[i],"float32")}const Bet={kernelName:Yf,backendName:"webgl",kernelFunc:zet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uet(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=n,u=[1,1,1],h=Vr(i.shape,r,o,u,a,l,c),d=new iy(h,"avg",!1);return e.runWebGLProgram(d,[i],"float32")}const Vet={kernelName:Zf,backendName:"webgl",kernelFunc:Uet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wet{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,h=c-1-t.padInfo.left,d=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Get{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=h-1-t.padInfo.front,g=d-1-t.padInfo.top,m=f-1-t.padInfo.left,x=1/(e*n*i);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${g}, ${m});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Het(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=Vr(o.shape,a,l,h,c,u),f=new Get(d);return e.runWebGLProgram(f,[i],o.dtype)}const qet={kernelName:x0,backendName:"webgl",kernelFunc:Het};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xet(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r;Wh([i,r],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=n,u=bi(o.shape,a,l,1,c),h=new Wet(u);return e.runWebGLProgram(h,[i],o.dtype)}const jet={kernelName:g0,backendName:"webgl",kernelFunc:Xet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ket(s){const{inputs:t,backend:e,attrs:n}=s,{a:i,b:r}=t,{transposeA:o,transposeB:a}=n;return Nf({a:i,b:r,transposeA:o,transposeB:a,backend:e})}const Yet={kernelName:Jf,backendName:"webgl",kernelFunc:Ket};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zet{constructor(t,e,n,i,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],ae(t,e),ae(t,n);let a="0.0";i!=null&&(ae(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";r!=null&&(ae(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jet{constructor(t,e,n,i,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ae(t,e),ae(t,n);let a="vec4(0.0)";i!=null&&(ae(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(ae(t,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qet=({inputs:s,backend:t,attrs:e})=>{const{x:n,mean:i,variance:r,offset:o,scale:a}=s;D(i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[n,i,r];let u=null;o!=null&&(u=o.shape,c.push(o));let h=null;a!=null&&(h=a.shape,c.push(a));const d=at().getBool("WEBGL_PACK_NORMALIZATION")?new Jet(n.shape,i.shape,r.shape,u,h,l):new Zet(n.shape,i.shape,r.shape,u,h,l);return t.runWebGLProgram(d,c,c[0].dtype)},tnt={kernelName:up,backendName:"webgl",kernelFunc:Qet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ent{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Ge(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=nnt(this.rank);let i;const r=t.map((o,a)=>`sourceLoc.${Ux[a]} = start[${a}] + coords.${Ux[a]};`);i=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${i}
        setOutput(getSource(${n}));
      }
    `}}const Ux=["x","y","z","w","u","v"];function nnt(s){if(s===1)return"sourceLoc";if(s<=6)return Ux.slice(0,s).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class snt{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Ge(this.rank),n=rs("coords",this.rank),i=rs("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${i.slice(-2).join()})`,o=`getChannel(getSource(${i.join()}), ${r})`,a=`
      result.x = ${o};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${i[this.rank-1]};
        result.y = ${o};
        --${i[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${i[this.rank-2]};
        result.z = ${o};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${i[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,h)=>`start[${h}]`).join()});`:t.map((u,h)=>`${i[h]} = ${n[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function int(s,t,e,n){const i=n.texData.get(s.dataId),r=n.makeTensorInfo(e,s.dtype),o=n.texData.get(r.dataId);Object.assign(o,i),o.refCount=1,o.shape=e,o.dtype=s.dtype;let a=mv(t,Zt(s.shape));i.slice&&(a+=i.slice.flatOffset),o.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||s.dataId};const l=n.dataRefCount.get(o.slice.origDataId)||1;return n.dataRefCount.set(o.slice.origDataId,l+1),r}function Cc(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,size:o}=n,[a,l]=Zp(i,r,o);if(dv(i,a,l),ht(l)===0)return e.makeTensorInfo(l,i.dtype,[]);if(e.shouldExecuteOnCPU([i])||i.dtype==="string"){const h=e.texData.get(i.dataId),d=jQ(h.values,a,l,i.shape,i.dtype);return e.makeTensorInfo(l,i.dtype,d)}const{isPacked:c}=e.texData.get(i.dataId),u=pv(i.shape,a,l);if(c||!u){const h=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new snt(l):new ent(l),d=[a];return e.runWebGLProgram(h,[i],i.dtype,d)}return e.uploadToGPU(i.dataId),int(i,a,l,e)}const rnt={kernelName:zp,backendName:"webgl",kernelFunc:Cc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ont=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,crops:o}=n;D(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((v,y)=>v*y),l=Ah(i.shape,r,a),c=Nh(l.length,r.length),u=Rh(i.shape,r,a),h=eb(o,r.length),d=nb(u,o,r.length),f=[],p=At({inputs:{x:i},backend:e,attrs:{shape:l}}),g=as({inputs:{x:p},backend:e,attrs:{perm:c}}),m=At({inputs:{x:g},backend:e,attrs:{shape:u}}),x=Cc({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return f.push(p),f.push(g),f.push(m),f.forEach(v=>e.disposeIntermediateTensorInfo(v)),x},ant={kernelName:Qf,backendName:"webgl",kernelFunc:ont};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o}=n,a=e.readSync(i.dataId),l=e.readSync(r.dataId),c=yk(a,l,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,c)}const cnt={kernelName:v0,backendName:"webgl",kernelFunc:lnt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unt(s){const{inputs:t,backend:e}=s,{s0:n,s1:i}=t,r=e.readSync(n.dataId),o=e.readSync(i.dataId),a=ae(Array.from(r),Array.from(o));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const hnt={kernelName:DC,backendName:"webgl",kernelFunc:unt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dnt="return float(a != b);",Dk=jn({opSnippet:dnt,cpuKernelImpl:zQ,dtype:"bool"}),fnt={kernelName:Ep,backendName:"webgl",kernelFunc:Dk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xh(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return As({inputs:{x:i.complexTensorInfos.real},backend:e})}const pnt={kernelName:V0,backendName:"webgl",kernelFunc:Xh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mnt="return float(int(x));";function gnt(s,t){const e=new Fr(s.shape,mnt),n=t.runWebGLProgram(e,[s],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vx(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dtype:r}=n;if(r==="complex64"){if(i.dtype==="complex64")return As({inputs:{x:i},backend:e});const o=$n(i.shape),a=Vx({inputs:{x:i},backend:e,attrs:{dtype:"float32"}}),l=No({inputs:{real:a,imag:o},backend:e});return o.dispose(),e.disposeIntermediateTensorInfo(a),l}if(i.dtype==="complex64"){const o=Xh({inputs:{input:i},backend:e}),a=Vx({inputs:{x:o},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(o),a}if(!MC(i.dtype,r)){const o=As({inputs:{x:i},backend:e});return{dataId:o.dataId,shape:o.shape,dtype:r}}if(e.shouldExecuteOnCPU([i])){const o=e.texData.get(i.dataId).values,[a,l,c]=bQ(o,i.shape,i.dtype,r);return e.makeTensorInfo(a,l,c)}if(r==="int32")return gnt(i,e);if(r==="bool"){const o=e.makeTensorInfo([],"bool",Gn("bool",1)),l=Dk({inputs:{a:i,b:o},backend:e});return e.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${r}`)}const xnt={kernelName:Fu,backendName:"webgl",kernelFunc:Vx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j_="return ceil(x);",vnt=Ie({opSnippet:j_,packedOpSnippet:j_,cpuKernelImpl:yQ}),bnt={kernelName:Lu,backendName:"webgl",kernelFunc:vnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ynt{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wnt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _nt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{clipValueMin:r,clipValueMax:o}=n;let a;at().getBool("WEBGL_PACK_CLIP")?a=new wnt(i.shape):a=new ynt(i.shape);const l=[[r],[o]];return e.runWebGLProgram(a,[i],i.dtype,l)}const Snt={kernelName:Pu,backendName:"webgl",kernelFunc:_nt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cnt{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(s,t){return{dataId:t.dataId,dtype:t.dtype,shape:s.shape}}function Int(s){const{inputs:t,backend:e}=s,{x:n}=t,i=e.texData.get(n.dataId),r=new Cnt(n.shape),o=[K_(n,i.complexTensorInfos.real),K_(n,i.complexTensorInfos.imag)];return e.runWebGLProgram(r,o,o[0].dtype)}const Tnt={kernelName:tp,backendName:"webgl",kernelFunc:Int};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ent{constructor(t){this.outputShape=[],this.outputShape=hr(t,1),this.variableNames=t.map((o,a)=>`T${a}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let o=1;o<e.length;o++)e[o]=e[o-1]+t[o][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<e.length;o++){const a=e[o-1];n.push(`else if (yC < ${e[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const i=e.length,r=e[e.length-1];n.push(`else setOutput(getT${i}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mnt{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=hr(t,e);const n=this.outputShape,i=n.length,r=Ge(i),o=rs("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=t.map((g,m)=>`T${m}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];const c=a[e],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let g=1;g<l.length;g++){const m=l[g-1];d+=`
        if (${c} < ${l[g]}  && ${c} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${Vd(a,c,m)}),
            vec2(${Vd(u,c,m)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${Vd(a,c,p)}),
          vec2(${Vd(u,c,p)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[i-1]} = ${o[i-1]} + 1;
        if (${o[i-1]} < ${n[i-1]}) {
          result.g = getValue(${o});
        }

        ${o[i-2]} = ${o[i-2]} + 1;
        if (${o[i-2]} < ${n[i-2]}) {
          result.a = getValue(${o});
        }

        ${o[i-1]} = ${o[i-1]} - 1;
        if (${o[i-2]} < ${n[i-2]} &&
            ${o[i-1]} < ${n[i-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function Vd(s,t,e){const n=s.indexOf(t);return s.map((r,o)=>o===n?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Im(s){const{inputs:t,backend:e}=s,{input:n}=t,i=e.texData.get(n.dataId);return As({inputs:{x:i.complexTensorInfos.imag},backend:e})}const knt={kernelName:D0,backendName:"webgl",kernelFunc:Im};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qc(s,t,e){const n=s[0].dtype;if(n==="complex64"){const h=s.map(m=>Xh({inputs:{input:m},backend:e})),d=s.map(m=>Im({inputs:{input:m},backend:e})),f=qc(h,t,e),p=qc(d,t,e),g=No({inputs:{real:f,imag:p},backend:e});return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),d.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),g}let i=e.shouldExecuteOnCPU(s);if(n==="string"&&(i=!0),i){const h=s.map(v=>{const b=[-1,ht(v.shape.slice(t))];return At({inputs:{x:v},backend:e,attrs:{shape:b}})}),d=h.map(v=>({vals:e.readSync(v.dataId),shape:v.shape})),f=hr(h.map(v=>v.shape),1),p=h[0].shape[0]===1,g=wQ(d,f,n,p),m=hr(s.map(v=>v.shape),t),x=e.makeTensorInfo(m,n,g);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),x}const r=at().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>r){const h=[];for(let f=0;f<s.length;f+=r){const p=s.slice(f,f+r);h.push(qc(p,t,e))}const d=qc(h,t,e);for(const f of h)e.disposeIntermediateTensorInfo(f);return d}if(at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1){const h=new Mnt(s.map(d=>d.shape),t);return e.runWebGLProgram(h,s,n)}const{tensors2D:o,outShape:a}=Ant(s,t,e),l=new Ent(o.map(h=>h.shape)),c=e.runWebGLProgram(l,o,n);o.forEach(h=>e.disposeIntermediateTensorInfo(h));const u=At({inputs:{x:c},attrs:{shape:a},backend:e});return e.disposeIntermediateTensorInfo(c),u}function Ant(s,t,e){const n=hr(s.map(r=>r.shape),t);return{tensors2D:s.map(r=>At({inputs:{x:r},attrs:{shape:[-1,ht(r.shape.slice(t))]},backend:e})),outShape:n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n,r=pe(i,t[0].shape)[0],o=t.map(c=>c.shape);Jv(o,r);const a=hr(t.map(c=>c.shape),r);if(ht(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);const l=t.filter(c=>ht(c.shape)>0);return l.length===1?As({inputs:{x:l[0]},backend:e}):qc(l,r,e)}const Nnt={kernelName:ep,backendName:"webgl",kernelFunc:Fk};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,m=t.dataFormat==="channelsLast",x=m?1:2,v=m?2:3,y=m?3:1;let b="",w="";n&&(i?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:b=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");const S=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${v}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${S}
        ${w}
        setOutput(result);
      }
    `}}class Rnt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,i=t.padInfo.left,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,f=t.filterWidth,p=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${o}, ${a});
      const ivec3 pads = ivec3(${e}, ${n}, ${i});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(h+1)/2;m++){const x=m*2;if(d+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const v=o%2===0?c0(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${v};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):v===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${v};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";n&&(i?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $nt{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=cs(this.outputShape.length);const{dataFormat:n}=e,i=ls(),r=n==="channelsLast",o=r?1:2,a=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${i.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rf(s,t){const e=s.length;return e>=3?t?[...s.slice(0,-3),s[e-3]*s[e-2],s[e-1]]:[...s.slice(0,-3),s[e-3],s[e-2]*s[e-1]]:!t&&e===1&&s[0]>1?[s[0],1]:null}function Ok({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const l=s.shape,c=n.texData.get(s.dataId),u=e.inChannels,h=l[0]*l[1]*l[2],d=e.outChannels,f=e.dataFormat==="channelsLast",p=!1,g=!1;let m;const x=[];if(r!=null){const b=Rf(r.shape,f);b!=null&&(r=At({inputs:{x:r},backend:n,attrs:{shape:b}}),x.push(r))}if(i!=null){const b=Rf(i.shape,f);b!=null&&(i=At({inputs:{x:i},backend:n,attrs:{shape:b}}),x.push(i))}if(!((h===1||d===1)&&u>Ak)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&ke(c.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),w={dataId:s.dataId,shape:[1,b,e.inChannels],dtype:s.dtype},S=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,D(Af(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const C=At({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(C);const _=Nf({a:w,b:C,backend:n,transposeA:p,transposeB:g,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o}),I=n.texData.get(_.dataId);D(I.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=S,I.shape=e.outShape,m=As({inputs:{x:_},backend:n}),m.shape=e.outShape,x.push(_)}else{const b=e.outHeight*e.outWidth,w=At({inputs:{x:s},backend:n,attrs:{shape:f?[e.batchSize,b,e.inChannels]:[e.batchSize,e.inChannels,b]}}),S=At({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),C=Nf({a:f?w:S,b:f?S:w,transposeA:!f,transposeB:g,backend:n,bias:i,activation:a,preluActivationWeights:r,leakyreluAlpha:o});m=At({inputs:{x:C},backend:n,attrs:{shape:e.outShape}}),x.push(w),x.push(S),x.push(C)}for(const b of x)n.disposeIntermediateTensorInfo(b);return m}function zk({x:s,filter:t,convInfo:e,backend:n,bias:i=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:f}=e,p=f==="channelsLast",g=l*c*u,m=d*h,x=[e.batchSize,g,m],v=!0,y=!1,b=[];if(r!=null){const L=Rf(r.shape,p);L!=null&&(r=At({inputs:{x:r},backend:n,attrs:{shape:L}}),b.push(r))}if(i!=null){const L=Rf(i.shape,p);L!=null&&(i=At({inputs:{x:i},backend:n,attrs:{shape:L}}),b.push(i))}const w=At({inputs:{x:t},backend:n,attrs:{shape:[1,g,ht(t.shape)/g]}});b.push(w);const S=new $nt(x,e),C=[s.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],_=n.runWebGLProgram(S,[s],"float32",C),I=At({inputs:{x:_},backend:n,attrs:{shape:x}});b.push(_),b.push(I);const T=i!=null,N=r!=null,P=a==="leakyrelu",E=a?gu(a,!0):null,M=new kk(p?I.shape:w.shape,p?w.shape:I.shape,p?[e.batchSize,m,e.outChannels]:[e.batchSize,e.outChannels,m],v,y,T,E,N,P),A=p?[I,w]:[w,I];if(i&&A.push(i),N&&A.push(r),P){const L=n.makeTensorInfo([],"float32",_o(o,"float32"));A.push(L),b.push(L)}const R=n.runWebGLProgram(M,A,"float32"),V=At({inputs:{x:R},backend:n,attrs:{shape:e.outShape}});b.push(R);for(const L of b)n.disposeIntermediateTensorInfo(L);return V}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=n,h=Wr(l),d=qn(i.shape,r.shape,o,c,a,u,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=Ok({x:i,filter:r,convInfo:d,backend:e});else if(d.strideWidth<=2&&h==="channelsLast"&&at().getBool("WEBGL_EXP_CONV")){const g=new Pk(d),m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=e.runWebGLProgram(g,[i,r],"float32",m)}else if(at().getBool("WEBGL_CONV_IM2COL"))f=zk({x:i,filter:r,convInfo:d,backend:e});else{const g=new Lk(d);f=e.runWebGLProgram(g,[i,r],"float32")}const p=At({inputs:{x:f},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(f),p}const Fnt={kernelName:np,backendName:"webgl",kernelFunc:Dnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lnt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${o}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Pnt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=n-1-t.padInfo.left,c=o?1:2,u=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ont{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${o};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${i} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class znt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,i=t.filterWidth,r=t.strideDepth,o=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,c=n-1-t.padInfo.top,u=i-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${i}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${i} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=n,h=Wr(l),d=qn(i.shape,u,o,1,a,c,!1,h),f=new Lnt(d);return e.runWebGLProgram(f,[i,r],"float32")}const Unt={kernelName:y0,backendName:"webgl",kernelFunc:Bnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vnt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=n,h=Wr(c),d=qn(o,r.shape,a,1,l,u,!1,h),f=new Pnt(d);return e.runWebGLProgram(f,[i,r],"float32")}const Wnt={kernelName:sp,backendName:"webgl",kernelFunc:Vnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=So(i.shape,r.shape,o,l,a),u=new Rnt(c);return e.runWebGLProgram(u,[i,r],"float32")}const Hnt={kernelName:ip,backendName:"webgl",kernelFunc:Gnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qnt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,pad:a,filterShape:l}=n,c=So(i.shape,l,o,1,a),u=new Ont(c);return e.runWebGLProgram(u,[i,r],"float32")}const Xnt={kernelName:w0,backendName:"webgl",kernelFunc:qnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jnt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{pad:o,strides:a,inputShape:l}=n,c=So(l,r.shape,a,1,o),u=new znt(c);return e.runWebGLProgram(u,[i,r],"float32")}const Knt={kernelName:_0,backendName:"webgl",kernelFunc:jnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ynt=Sc+`
  return cos(x);
`,Znt=Ie({opSnippet:Ynt}),Jnt={kernelName:Ou,backendName:"webgl",kernelFunc:Znt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qnt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,tst=Ie({opSnippet:Qnt}),est={kernelName:zu,backendName:"webgl",kernelFunc:tst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nst{constructor(t,e,n,i,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,c]=t,[u]=e,[h,d]=n;this.outputShape=[u,h,d,c];const f=i==="bilinear"?1:0,[p,g]=[`${a-1}.0`,`${l-1}.0`],[m,x,v]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,b,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${b};

        float in_y = ${v};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sst=s=>{const{inputs:t,backend:e,attrs:n}=s,{image:i,boxes:r,boxInd:o}=t,{cropSize:a,method:l,extrapolationValue:c}=n,u=new nst(i.shape,r.shape,a,l,c);return e.runWebGLProgram(u,[i,r,o],"float32")},ist={kernelName:C0,backendName:"webgl",kernelFunc:sst};var vu;(function(s){s.Prod="*",s.Sum="+"})(vu||(vu={}));class Y_{constructor(t,e,n,i){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===vu.Prod?"1.0":"0.0",a=n?o:`getX(${Z_(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";n?(c=i?`end != ${l-1}`:"end != 0",u=i?"end + 1":"end - 1"):(c=i?`end + pow2 < ${l}`:"end >= pow2",u=i?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ge(r)} coords = getOutputCoords();
        int end = ${J_(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${J_(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${Z_(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Z_(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.x, ${t}.y`;if(s===3)return`${t}.x, ${t}.y, ${t}.z`;if(s===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}function J_(s,t,e){if(s===1)return`${t}`;if(s===2)return`${t}.y`;if(s===3)return`${t}.z`;if(s===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(s,t,e,n,i,r){const o=t.shape.length,a=sn([n],o);let l=t;a!=null&&(l=as({inputs:{x:t},backend:e,attrs:{perm:a}}));const c=dn(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);const u=l.shape[c];let h=As({inputs:{x:l},backend:e});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new Y_(s,l.shape,!1,r),p=[[d]],g=h;h=e.runWebGLProgram(f,[h],h.dtype,p),e.disposeIntermediateTensorInfo(g)}if(i){const d=new Y_(s,l.shape,i,r),f=h;h=e.runWebGLProgram(d,[h],h.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){const d=Co(a),f=as({inputs:{x:h},backend:e,attrs:{perm:d}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return Bk(vu.Prod,i,e,r,o,a)}const ost={kernelName:S0,backendName:"webgl",kernelFunc:rst};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ast(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,exclusive:o,reverse:a}=n;return Bk(vu.Sum,i,e,r,o,a)}const lst={kernelName:rp,backendName:"webgl",kernelFunc:ast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,weights:r}=t,{size:o,binaryOutput:a}=n;if(i.shape.length===1){const l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=yk(l,c,r.dtype,r.shape,o);return e.makeTensorInfo([o],r.dtype,u)}else if(i.shape.length===2){const l=e.bufferSync(i),c=e.bufferSync(r),u=vQ(l,c,o,a);return e.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}const ust={kernelName:I0,backendName:"webgl",kernelFunc:cst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hst{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockSize:r,dataFormat:o}=n,a=i.shape[0],l=o==="NHWC"?i.shape[1]:i.shape[2],c=o==="NHWC"?i.shape[2]:i.shape[3],u=o==="NHWC"?i.shape[3]:i.shape[1],h=l*r,d=c*r,f=u/(r*r),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],g=new hst(p,r,o);return e.runWebGLProgram(g,[i],i.dtype)}const fst={kernelName:T0,backendName:"webgl",kernelFunc:dst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels;let c="",u="";n&&(i?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vk{constructor(t,e=!1,n=null,i=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=cs(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const v=x*2;if(f+=`
          xC = xCCorner + ${v*c};
          `,l===1){if(v<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }
              `,c===1&&v>0?f+=`
                xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                  } else {
                    xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xC${v} = xTexelC${v};
                `,v+1<h)){const y=a%2===0?c0(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                    xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${v+1}.zw = vec2(0.0);
                    }
                    xTexelC${v+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                    } else {
                     xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                    }
                    `:f+=`
                    xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                    `):y===1?f+=`
                    xC${v+1} = xTexelC${v};
                    `:f+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                      xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${v+1}.zw = vec2(0.0);
                      }
                      xTexelC${v+1}Ready = 1;
                    }

                    xC${v+1} = xTexelC${v+1};
                    `}}else v<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.0);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
              `,v+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(
                  xTexelC${v}.xy, xTexelC${v+1}.xy);
              `,v+1<h&&(f+=`
                  xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                `)));v<h&&(f+=`
            wTexel = getW(r, ${v}, d1, q);
            dotProd += xC${v} * vec4(wTexel.xz, wTexel.xz);
          `,v+1<h&&(f+=`
              wTexel = getW(r, ${v+1}, d1, q);
              dotProd += xC${v+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",g="";n&&(i?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,g="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=n;let u=l;u==null&&(u=[1,1]),D(ts(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=qn(i.shape,r.shape,o,u,a,c,!0);let d;at().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new Vk(h):d=new Uk(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return e.runWebGLProgram(d,[i,r],"float32",f)}const mst={kernelName:op,backendName:"webgl",kernelFunc:pst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gst{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,i=t.padInfo.top,r=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${i};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xst{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,i=t.strideHeight,r=t.strideWidth,o=e-1-t.padInfo.top,a=n-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${i}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,dy:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=n,h=qn(i.shape,u,o,a,l,c,!0),d=new gst(h);return e.runWebGLProgram(d,[i,r],"float32")}const bst={kernelName:E0,backendName:"webgl",kernelFunc:vst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yst(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,filter:r}=t,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=n,h=qn(u,r.shape,o,a,l,c,!0),d=new xst(h);return e.runWebGLProgram(d,[i,r],"float32")}const wst={kernelName:M0,backendName:"webgl",kernelFunc:yst};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _st{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sst(s){const{inputs:t,backend:e}=s,{x:n}=t,i=[...n.shape,...n.shape],r=ht(n.shape),o=At({inputs:{x:n},backend:e,attrs:{shape:[r]}}),a=new _st(r),l=e.runWebGLProgram(a,[o],o.dtype),c=At({inputs:{x:l},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(l),c}const Cst={kernelName:FC,backendName:"webgl",kernelFunc:Sst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ist{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:i,strideHeight:r,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:h,left:d}=i;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tst(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r}=t,{strides:o,pad:a,dilations:l}=n,c=Ch(i.shape,r.shape,o,a,"NHWC",l);let u;const h=new Ist(c);u=e.runWebGLProgram(h,[i,r],"float32");const d=At({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),d}const Est={kernelName:ap,backendName:"webgl",kernelFunc:Tst};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mst(s){const{inputs:t,backend:e,attrs:n}=s,{equation:i}=n,r=t,{allDims:o,summedDims:a,idDims:l}=ub(i,r.length);db(o.length,l,r);const{path:c,steps:u}=fb(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let g=0;g<h;++g){for(const m of u[g]){const{permutationIndices:x,expandDims:v}=hb(f,l[m]);let y;pb(x)?y=r[m]:(y=as({inputs:{x:r[m]},backend:e,attrs:{perm:x}}),p.push(y));const b=y.shape.slice();for(let w=0;w<v.length;++w)b.splice(v[w],0,1);ke(y.shape,b)||(y=At({inputs:{x:y},backend:e,attrs:{shape:b}}),p.push(y)),d===null?d=y:(d=sy({inputs:{a:y,b:d},backend:e}),p.push(d))}g<h-1&&(c[g]>=0&&(d=Cm({inputs:{x:d},backend:e,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const g of p)g!==d&&e.disposeIntermediateTensorInfo(g);return d}const kst={kernelName:LC,backendName:"webgl",kernelFunc:Mst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ast="return (x >= 0.0) ? x : (exp(x) - 1.0);",Nst=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Rst=Ie({opSnippet:Ast,packedOpSnippet:Nst}),$st={kernelName:Uu,backendName:"webgl",kernelFunc:Rst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dst="return (b >= 1.0) ? a : a * (b + 1.0);",Fst=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Lst=s=>{const{inputs:t,backend:e}=s,{dy:n,y:i}=t,r=at().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qh(Fst,n.shape,i.shape):new rc(Dst,n.shape,i.shape);return e.runWebGLProgram(r,[n,i],n.dtype)},Pst={kernelName:k0,backendName:"webgl",kernelFunc:Lst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ost=`
  return vec4(equal(a, b));
`,zst="return float(a == b);",Bst=jn({opSnippet:zst,packedOpSnippet:Ost,dtype:"bool",cpuKernelImpl:_Q}),Ust={kernelName:lp,backendName:"webgl",kernelFunc:Bst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vst=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${sb};
  float a1 = ${ib};
  float a2 = ${rb};
  float a3 = ${ob};
  float a4 = ${ab};
  float a5 = ${lb};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Wst=Ie({opSnippet:Vst}),Gst={kernelName:Vu,backendName:"webgl",kernelFunc:Wst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hst=Sc+`
  return exp(x);
`,qst=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Wk=Ie({opSnippet:Hst,packedOpSnippet:qst,cpuKernelImpl:SQ,dtype:"float32"}),Xst={kernelName:Wu,backendName:"webgl",kernelFunc:Wk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wx(s){const{inputs:t,attrs:e,backend:n}=s,{dim:i}=e,{input:r}=t,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(D(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),At({inputs:{x:r},backend:n,attrs:{shape:a}})}const jst={kernelName:cp,backendName:"webgl",kernelFunc:Wx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_="return exp(x) - 1.0;",Kst=Ie({opSnippet:Q_,packedOpSnippet:Q_,cpuKernelImpl:CQ}),Yst={kernelName:Gu,backendName:"webgl",kernelFunc:Kst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tS{constructor(t,e,n){this.variableNames=["real","imag"];const i=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${i}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${i});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${i}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(s,t,e){const n=e.texData.get(s.dataId),i=ht(s.shape),r=s.shape[s.shape.length-1],o=i/r,a=At({inputs:{x:s},backend:e,attrs:{shape:[o,r]}}),l=a.shape,c=new tS("real",l,t),u=new tS("imag",l,t),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(c,h,"float32"),f=e.runWebGLProgram(u,h,"float32"),p=No({inputs:{real:d,imag:f},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f);const g=At({inputs:{x:p},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(p),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zst(s){const{inputs:t,backend:e}=s,{input:n}=t;return Gk(n,!1,e)}const Jst={kernelName:A0,backendName:"webgl",kernelFunc:Zst};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qst{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jh(s){const{backend:t,attrs:e}=s,{shape:n,value:i}=e;let{dtype:r}=e;if(r=r||Eu(i),r==="string"){const o=gn(r,ht(n));return o.fill(i),t.makeTensorInfo(n,r,o)}else{const o=new Qst(n,i),a=[[i]];return t.runWebGLProgram(o,[],r,a)}}const tit={kernelName:N0,backendName:"webgl",kernelFunc:jh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eit{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nit={kernelName:R0,backendName:"webgl",kernelFunc:({inputs:s,backend:t})=>{const{image:e}=s,n=t,i=new eit(e.shape);return n.runWebGLProgram(i,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS="return floor(x);",sit=Ie({opSnippet:eS,packedOpSnippet:eS,cpuKernelImpl:IQ}),iit={kernelName:Hu,backendName:"webgl",kernelFunc:sit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rit=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,oit=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,ait=jn({opSnippet:rit,packedOpSnippet:oit,dtype:"int32"}),lit={kernelName:qu,backendName:"webgl",kernelFunc:ait};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cit{constructor(t){this.variableNames=["A"];const e=ls(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uit{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=ls(),[n,i]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${i}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hit={kernelName:Jz,backendName:"webgl",kernelFunc:dit};let gl,Pg=at().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function dit(s){const{inputs:t,backend:e,attrs:n}=s;let{pixels:i}=t;const{numChannels:r}=n,o=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[l,c]=o?[i.videoWidth,i.videoHeight]:[i.width,i.height],u=[c,l],h=[c,l,r];if(a||o){const g=at().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(gl==null||g!==Pg)&&(Pg=g,gl=document.createElement("canvas").getContext("2d",{willReadFrequently:Pg})),gl.canvas.width=l,gl.canvas.height=c,gl.drawImage(i,0,0,l,c),i=gl.canvas}const d=e.makeTensorInfo(u,"int32");e.texData.get(d.dataId).usage=Ps.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(d.dataId),i);const f=at().getBool("WEBGL_PACK")?new uit(h):new cit(h),p=e.runWebGLProgram(f,[d],"int32");return e.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=n,g=Wr(u),m=qn(i.shape,r.shape,l,h,c,d,!1,g);let x;const v=[],y=o!=null,b=a!=null,w=f==="leakyrelu",S=()=>{const _=[i,r],I=(T,N)=>{if(N==="NCHW"&&T.shape.length===1&&T.shape[0]!==1){const P=At({inputs:{x:T},backend:e,attrs:{shape:[T.shape[0],1,1]}});return v.push(P),P}return T};if(y&&_.push(I(o,u)),b&&_.push(I(a,u)),w){const T=e.makeTensorInfo([],"float32",_o(p,"float32"));_.push(T),v.push(T)}return _};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))x=Ok({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(m.strideWidth<=2&&g==="channelsLast"&&at().getBool("WEBGL_EXP_CONV")){const _=f?gu(f,!0):null,I=new Pk(m,y,_,b,w),T=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],N=S();x=e.runWebGLProgram(I,N,"float32",T)}else if(at().getBool("WEBGL_CONV_IM2COL"))x=zk({x:i,filter:r,convInfo:m,backend:e,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const _=f?gu(f,!1):null,I=new Lk(m,y,_,b,w),T=S();x=e.runWebGLProgram(I,T,"float32")}const C=At({inputs:{x},backend:e,attrs:{shape:m.outShape}});return v.push(x),v.forEach(_=>e.disposeIntermediateTensorInfo(_)),C}const pit={kernelName:of,backendName:"webgl",kernelFunc:fit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mit(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,filter:r,bias:o,preluActivationWeights:a}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=n,p=[];let g=u;g==null&&(g=[1,1]),D(ts(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const m=qn(i.shape,r.shape,l,g,c,h,!0),x=at().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,v=d?gu(d,x):null,y=[i,r],b=o!=null,w=a!=null,S=d==="leakyrelu";if(b&&y.push(o),w&&y.push(a),S){const T=e.makeTensorInfo([],"float32",_o(f,"float32"));y.push(T),p.push(T)}let C;x?C=new Vk(m,b,v,w,S):C=new Uk(m,b,v,w,S);const _=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],I=e.runWebGLProgram(C,y,"float32",_);return p.forEach(T=>e.disposeIntermediateTensorInfo(T)),I}const git={kernelName:XC,backendName:"webgl",kernelFunc:mit};class xit{constructor(t,e,n,i){this.sliceDim=t,this.strides=e,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=n;const r=Ge(n.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vit(s){const{inputs:t,backend:e}=s,{params:n,indices:i}=t,r=i.shape,o=r[r.length-1],a=ht(n.shape),[l,c,u,h]=hv(n,i),d=At({inputs:{x:i},backend:e,attrs:{shape:[c,o]}}),f=At({inputs:{x:n},backend:e,attrs:{shape:[ht(n.shape)/u,u]}});if(e.shouldExecuteOnCPU([n,i])||n.dtype==="string"){const x=e.readSync(i.dataId),v=e.bufferSync(n),y=TQ(x,v,n.dtype,c,o,u,h,n.shape,a);return e.makeTensorInfo(l,n.dtype,y.values)}const p=new xit(o,h,[c,u],n.shape),g=e.runWebGLProgram(p,[f,d],f.dtype),m=At({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),m}const bit={kernelName:PC,backendName:"webgl",kernelFunc:vit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yit{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Ge(this.rank),i=wit(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${i}));
      }
    `}}function wit(s,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let i=0;i<s.length;i++)i===2?n.push("index"):n.push(`${e[i]}`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,indices:r}=t,{axis:o,batchDims:a}=n,l=pe(o,i.shape)[0];if(at().get("DEBUG")){const v=e.readSync(r.dataId),y=i.shape[l];for(let b=0;b<v.length;++b){const w=v[b];D(w<=y-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${y-1}]`)}}const c=gb(i,r,l,a),u=ht(r.shape),h=[],d=At({inputs:{x:i},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=At({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(f);const p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([i,r])||i.dtype==="string"){const v=e.bufferSync(f),y=e.bufferSync(d),b=EQ(y,v,p);return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(c.outputShape,b.dtype,b.values)}const g=new yit(d.shape,p),m=e.runWebGLProgram(g,[d,f],d.dtype);h.push(m);const x=At({inputs:{x:m},backend:e,attrs:{shape:c.outputShape}});return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),x}const _it={kernelName:hp,backendName:"webgl",kernelFunc:Hk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sit="return float(a > b);",Cit=`
  return vec4(greaterThan(a, b));
`,Iit=jn({opSnippet:Sit,packedOpSnippet:Cit,cpuKernelImpl:MQ,dtype:"bool"}),Tit={kernelName:dp,backendName:"webgl",kernelFunc:Iit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eit="return float(a >= b);",Mit=`
  return vec4(greaterThanEqual(a, b));
`,kit=jn({opSnippet:Eit,packedOpSnippet:Mit,dtype:"bool",cpuKernelImpl:kQ}),Ait={kernelName:Xu,backendName:"webgl",kernelFunc:kit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nit(s){const{inputs:t,backend:e}=s,{input:n}=t;return Gk(n,!0,e)}const Rit={kernelName:$0,backendName:"webgl",kernelFunc:Nit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $it="return float(!isnan(x) && !isinf(x));",Dit=Ie({opSnippet:$it,dtype:"bool"}),Fit={kernelName:Ku,backendName:"webgl",kernelFunc:Dit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lit="return float(isinf(x));",Pit=Ie({opSnippet:Lit,dtype:"bool"}),Oit={kernelName:Yu,backendName:"webgl",kernelFunc:Pit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zit="return float(isnan(x));",Bit=Ie({opSnippet:zit,dtype:"bool"}),Uit={kernelName:Zu,backendName:"webgl",kernelFunc:Bit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vit="return float(a < b);",Wit=`
  return vec4(lessThan(a, b));
`,Git=jn({opSnippet:Vit,packedOpSnippet:Wit,cpuKernelImpl:AQ,dtype:"bool"}),Hit={kernelName:pp,backendName:"webgl",kernelFunc:Git};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qit="return float(a <= b);",Xit=`
  return vec4(lessThanEqual(a, b));
`,jit=jn({opSnippet:qit,packedOpSnippet:Xit,cpuKernelImpl:NQ,dtype:"bool"}),Kit={kernelName:mp,backendName:"webgl",kernelFunc:jit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yit(s){const{backend:t,attrs:e}=s,{start:n,stop:i,num:r}=e,o=RQ(n,i,r);return t.makeTensorInfo([o.length],"float32",o)}const Zit={kernelName:OC,backendName:"webgl",kernelFunc:Yit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jit=Sc+`
  return x < 0.0 ? 0./0. : log(x);
`,Qit=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,trt=Ie({opSnippet:Jit,packedOpSnippet:Qit,cpuKernelImpl:$Q}),ert={kernelName:Ju,backendName:"webgl",kernelFunc:trt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nrt=Sc+`
  return log(1.0 + x);
`,srt=Ie({opSnippet:nrt}),irt={kernelName:Qu,backendName:"webgl",kernelFunc:srt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rrt="return float(a >= 1.0 && b >= 1.0);",ort=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,art=jn({opSnippet:rrt,packedOpSnippet:ort,dtype:"bool"}),lrt={kernelName:gp,backendName:"webgl",kernelFunc:art};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const crt="return float(!(x >= 1.0));",urt=Ie({opSnippet:crt}),hrt={kernelName:xp,backendName:"webgl",kernelFunc:urt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const drt="return float(a >= 1.0 || b >= 1.0);",frt=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,prt=jn({opSnippet:drt,packedOpSnippet:frt,dtype:"bool"}),mrt={kernelName:vp,backendName:"webgl",kernelFunc:prt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class grt{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[];const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xrt{constructor(t,e,n,i,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,a=t[3]-1;this.outputShape=t;let l;const c=`float(${n}) + float(${i}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vrt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{depthRadius:r,bias:o,alpha:a,beta:l}=n,c=at().getBool("WEBGL_PACK_NORMALIZATION")?new xrt(i.shape,r,o,a,l):new grt(i.shape,r,o,a,l);return e.runWebGLProgram(c,[i],i.dtype)},brt={kernelName:bp,backendName:"webgl",kernelFunc:vrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yrt{constructor(t,e,n,i,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=i,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${i}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${i})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wrt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i,y:r,dy:o}=t,{depthRadius:a,bias:l,alpha:c,beta:u}=n,h=new yrt(i.shape,a,l,c,u);return e.runWebGLProgram(h,[i,r,o],i.dtype)},_rt={kernelName:F0,backendName:"webgl",kernelFunc:wrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Srt(s,t,e,n){const i=ht(t),o=ht(s.shape)/i,a=At({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=Ga(a,s.dtype,"max",n),c=At({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reductionIndices:r,keepDims:o}=n,a=i.shape.length,l=pe(r,i.shape);let c=l;const u=sn(c,a),h=u!=null,d=e.shouldExecuteOnCPU([i]);let f=i;if(h){if(d){const y=e.texData.get(f.dataId).values,b=new Array(a);for(let C=0;C<b.length;C++)b[C]=i.shape[u[C]];const w=ey(y,i.shape,i.dtype,u,b);f=e.makeTensorInfo(b,i.dtype);const S=e.texData.get(f.dataId);S.values=w}else f=Sm(i,u,e);c=dn(c.length,a)}Xn("max",c,a);const[p,g]=Pn(f.shape,c);let m=p;o&&(m=hn(p,l));let x;if(d){const y=e.texData.get(f.dataId).values,b=DQ(y,ht(g),m,i.dtype);x=e.makeTensorInfo(m,i.dtype);const w=e.texData.get(x.dataId);w.values=b}else x=Srt(f,g,m,e);return h&&e.disposeIntermediateTensorInfo(f),x}const Crt={kernelName:yp,backendName:"webgl",kernelFunc:qk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Irt=ny+`
  return max(a, b);
`,Trt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Hh+`
  return result;
`,Ert=jn({opSnippet:Irt,packedOpSnippet:Trt,cpuKernelImpl:FQ}),Mrt={kernelName:th,backendName:"webgl",kernelFunc:Ert};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function krt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t;Wh(i,"maxPool");const{filterSize:r,strides:o,pad:a,dimRoundingMode:l}=n,c=1;D(ts(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=bi(i.shape,r,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&ke(u.inShape,u.outShape))return As({inputs:{x:i},backend:e});const h=new xu(u,"max",!1);return e.runWebGLProgram(h,[i],i.dtype)}const Art={kernelName:wp,backendName:"webgl",kernelFunc:krt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{filterSize:r,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=n,u=[1,1,1],h=Vr(i.shape,r,o,u,a,c,l),d=new iy(h,"max",!1);return e.runWebGLProgram(d,[i],i.dtype)}const Rrt={kernelName:_p,backendName:"webgl",kernelFunc:Nrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $rt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,i=t.dilationHeight,r=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=r-1-t.padInfo.top,l=o-1-t.padInfo.left,c=r*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Drt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,i=t.strideWidth,r=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=l-1-t.padInfo.front,d=c-1-t.padInfo.top,f=u-1-t.padInfo.left,p=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Frt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r}=t,o=r,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=n,h=[1,1,1],d=Vr(o.shape,a,l,h,c,u),f=new iy(d,"max",!0),p=e.runWebGLProgram(f,[o],o.dtype),g=new Drt(d),m=e.runWebGLProgram(g,[i,p],o.dtype);return e.disposeIntermediateTensorInfo(p),m}const Lrt={kernelName:P0,backendName:"webgl",kernelFunc:Frt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Prt(s){const{inputs:t,backend:e,attrs:n}=s,{dy:i,input:r,output:o}=t,a=r;Wh([r,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=n,d=bi(a.shape,l,c,1,u,h),f=!0,p=new xu(d,"max",f),g=e.runWebGLProgram(p,[a],a.dtype),m=new $rt(d),x=e.runWebGLProgram(m,[i,g],a.dtype);return e.disposeIntermediateTensorInfo(g),x}const Ort={kernelName:L0,backendName:"webgl",kernelFunc:Prt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zrt(s,t,e,n){let i=new xu(e,"max",!1);const r=n.runWebGLProgram(i,[s],"float32");i=new xu(e,"max",!0,!0,t);const o=n.runWebGLProgram(i,[s],"float32");return[r,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Brt={kernelName:zC,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{filterSize:i,strides:r,pad:o,includeBatchInIndex:a}=t,l=e;D(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);const c=[1,1];D(ts(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const u=bi(n.shape,i,r,c,o),[h,d]=zrt(n,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Urt(s,t,e,n){const i=ht(t),o=ht(s.shape)/i,a=At({inputs:{x:s},attrs:{shape:[o,i]},backend:n}),l=Ga(a,"float32","mean",n),c=At({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vrt={kernelName:Sp,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{x:n}=s,{keepDims:i,axis:r}=t,o=e,a=n.shape.length,l=pe(r,n.shape);let c=l;const u=sn(c,a),h=u!=null,d=o.shouldExecuteOnCPU([n]),f=[];let p=n;if(h){if(d){const b=o.texData.get(p.dataId).values,w=new Array(a);for(let _=0;_<w.length;_++)w[_]=n.shape[u[_]];const S=ey(b,n.shape,n.dtype,u,w);p=o.makeTensorInfo(w,n.dtype);const C=o.texData.get(p.dataId);C.values=S}else p=Sm(n,u,o);f.push(p),c=dn(c.length,a)}Xn("sum",c,a);const[g,m]=Pn(p.shape,c);let x=g;i&&(x=hn(g,l));const v=Urt(p,m,x,o);for(const y of f)o.disposeIntermediateTensorInfo(y);return v}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wrt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=pe(r,i.shape);let c=l;const u=sn(c,a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),c=dn(c.length,i.shape.length)),Xn("min",c,a);const[d,f]=Pn(h.shape,c),p=ht(f),g=At({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}}),m=Ga(g,g.dtype,"min",e);let x;if(o){const v=hn(d,l);x=At({inputs:{x:m},backend:e,attrs:{shape:v}})}else x=At({inputs:{x:m},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(m),u!=null&&e.disposeIntermediateTensorInfo(h),x}const Grt={kernelName:Cp,backendName:"webgl",kernelFunc:Wrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hrt=ny+`
  return min(a, b);
`,qrt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Hh+`
  return result;
`,Xrt=jn({opSnippet:Hrt,packedOpSnippet:qrt,cpuKernelImpl:LQ}),jrt={kernelName:eh,backendName:"webgl",kernelFunc:Xrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Krt{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((u,h)=>u[0]+t[h]+u[1]);const i=t.length,r=Ge(i),o=e.map(u=>u[0]).join(","),a=e.map((u,h)=>u[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),c=n==="reflect"?0:1;if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${i}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yrt{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((p,g)=>p[0]+t[g]+p[1]);const i=t.length,r=Ge(i),o=e.map(p=>p[0]).join(","),a=e.map((p,g)=>p[0]+t[g]).join(","),l=rs("rc",i),c=rs("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=n==="reflect"?0:1;let f="";if(i===1){const p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[i-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[i-2]} += 1;
        if(${l[i-2]} < ${this.outputShape[i-2]}) {
          ${p}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[i-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zrt=({inputs:s,backend:t,attrs:e})=>{const{x:n}=s,{paddings:i,mode:r}=e,o=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yrt(n.shape,i,r):new Krt(n.shape,i,r);return t.runWebGLProgram(o,[n],n.dtype)},Jrt={kernelName:Ip,backendName:"webgl",kernelFunc:Zrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qrt=`if (b == 0.0) return NAN;
  return mod(a, b);`,tot=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Hh+`
  return result;
`,eot=jn({opSnippet:Qrt,packedOpSnippet:tot}),not={kernelName:nh,backendName:"webgl",kernelFunc:eot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sot{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iot=`
if (a == b) {
  return 1.0;
};
return a / b;`,rot=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Xk=jn({opSnippet:iot,packedOpSnippet:rot,checkOutOfBounds:!0}),oot={kernelName:Bu,backendName:"webgl",kernelFunc:Xk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nS="return a - b;",jk=jn({opSnippet:nS,packedOpSnippet:nS,supportsComplex:!0,cpuKernelImpl:ntt}),aot={kernelName:vh,backendName:"webgl",kernelFunc:jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{dim:r}=n,o=pe([r],i.shape),a=qk({inputs:{x:i},backend:e,attrs:{reductionIndices:o,keepDims:!1}}),l=hn(a.shape,o),c=At({inputs:{x:a},backend:e,attrs:{shape:l}}),u=jk({inputs:{a:i,b:c},backend:e}),h=Wk({inputs:{x:u},backend:e}),d=Cm({inputs:{x:h},backend:e,attrs:{axis:o,keepDims:!1}}),f=At({inputs:{x:d},backend:e,attrs:{shape:l}}),p=Xk({inputs:{a:h,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),p}const lot={kernelName:Wp,backendName:"webgl",kernelFunc:Kk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cot(s){const{inputs:t,backend:e,attrs:n}=s,{logits:i}=t,{numSamples:r,seed:o,normalized:a}=n,l=a?i:Kk({inputs:{logits:i},backend:e,attrs:{dim:i.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new sot(c,u,r),d=[[o]],f=e.runWebGLProgram(h,[l],"int32",d);return a||e.disposeIntermediateTensorInfo(l),f}const uot={kernelName:BC,backendName:"webgl",kernelFunc:cot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hot=wi+`
  return -x;
`,dot=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function fot(s){const{inputs:t,backend:e}=s,{x:n}=t;if(e.shouldExecuteOnCPU([n])){const r=e.texData.get(n.dataId),[o,a]=OQ(r.values,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,o)}let i;return at().getBool("WEBGL_PACK_UNARY_OPERATIONS")?i=new ia(n.shape,dot):i=new Fr(n.shape,hot),e.runWebGLProgram(i,[n],n.dtype)}const pot={kernelName:Tp,backendName:"webgl",kernelFunc:fot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mot=Vv;function got(s){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),{selectedIndices:h}=mot(c,u,o,a,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}const xot={kernelName:O0,backendName:"webgl",kernelFunc:got};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vot=Wv;function bot(s){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),{selectedIndices:d,validOutputs:f}=vot(u,h,o,a,l,c);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}const yot={kernelName:z0,backendName:"webgl",kernelFunc:bot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wot=Gv;function _ot(s){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:n}=s,{boxes:i,scores:r}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=n,u=e.readSync(i.dataId),h=e.readSync(r.dataId),d=o,f=a,p=l,g=c,{selectedIndices:m,selectedScores:x}=wot(u,h,d,f,p,g);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const Sot={kernelName:B0,backendName:"webgl",kernelFunc:_ot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cot{constructor(t,e,n,i){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${i}), float(${n}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iot=s=>{const{inputs:t,backend:e,attrs:n}=s,{indices:i}=t,{dtype:r,depth:o,onValue:a,offValue:l}=n,c=ht(i.shape),u=new Cot(c,o,a,l),h=At({inputs:{x:i},backend:e,attrs:{shape:[c]}}),d=e.runWebGLProgram(u,[h],r);e.disposeIntermediateTensorInfo(h);const f=[...i.shape,o],p=At({inputs:{x:d},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(d),p},Tot={kernelName:kp,backendName:"webgl",kernelFunc:Iot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $f(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="complex64"){const i=Xh({inputs:{input:n},backend:e}),r=$f({inputs:{x:i},backend:e}),o=Im({inputs:{input:n},backend:e}),a=$f({inputs:{x:o},backend:e}),l=No({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return jh({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}const Eot={kernelName:qp,backendName:"webgl",kernelFunc:$f};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yk(s){const{inputs:t,backend:e}=s,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){const i=Xh({inputs:{input:n},backend:e}),r=Yk({inputs:{x:i},backend:e}),o=Im({inputs:{input:n},backend:e}),a=$f({inputs:{x:o},backend:e}),l=No({inputs:{real:r,imag:a},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),l}else return jh({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}const Mot={kernelName:Mp,backendName:"webgl",kernelFunc:Yk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kot(s){const{inputs:t,backend:e,attrs:n}=s,{axis:i}=n;if(t.length===1)return Wx({inputs:{input:t[0]},backend:e,attrs:{dim:i}});const r=t[0].shape,o=t[0].dtype;t.forEach(u=>{vi(r,u.shape,"All tensors passed to stack must have matching shapes"),D(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=t.map(u=>{const h=Wx({inputs:{input:u},backend:e,attrs:{dim:i}});return a.push(h),h}),c=Fk({inputs:l,backend:e,attrs:{axis:i}});return a.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const Aot={kernelName:Ap,backendName:"webgl",kernelFunc:kot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Not{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const i=t.length,r=Ge(i),o=e.map(c=>c[0]).join(","),a=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);if(i===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${o});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rot{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,m)=>g[0]+t[m]+g[1]);const i=t.length,r=Ge(i),o=e.map(g=>g[0]).join(","),a=e.map((g,m)=>g[0]+t[m]).join(","),l=rs("rc",i),c=rs("source",i),u=`${l[i-1]} < ${this.outputShape[i-1]}`,h=i===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${l[i-1]} += 1;
       if(${u}) {
      `,i===1?"":`}
       rc = outputLoc;
       ${l[i-2]} += 1;
       if(${l[i-2]} < ${this.outputShape[i-2]}) {`,i===1?"":`  ${l[i-1]} += 1;
         if(${u}) {`],f=i===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let g=0,m=i===1?2:4;g<m;g++)p+=`
        ${d[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${h});
        }
      `;p+=i===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${o});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zk=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{paddings:r,constantValue:o}=n;if(ht(i.shape)===0){const c=r.map((u,h)=>u[0]+i.shape[h]+u[1]);return jh({backend:e,attrs:{shape:c,value:o,dtype:i.dtype}})}const a=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rot(i.shape,r,o):new Not(i.shape,r,o),l=[[o]];return e.runWebGLProgram(a,[i],i.dtype,l)},$ot={kernelName:Np,backendName:"webgl",kernelFunc:Zk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dot=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Fot=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Hh+`
  return result;
`,Lot=jn({opSnippet:Dot,packedOpSnippet:Fot}),Pot={kernelName:ih,backendName:"webgl",kernelFunc:Lot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oot(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{axis:r,keepDims:o}=n,a=i.shape.length,l=[],c=pe(r,i.shape);let u=c;const h=sn(u,a);let d=i;h!=null&&(d=as({inputs:{x:i},backend:e,attrs:{perm:h}}),u=dn(u.length,a),l.push(d)),Xn("prod",u,a);let f;if(e.shouldExecuteOnCPU([d])){const p=e.texData.get(d.dataId).values,{outVals:g,outShape:m,outDtype:x}=BQ(d.shape,d.dtype,p,u);f=e.makeTensorInfo(m,x,g)}else{const[p,g]=Pn(d.shape,u),m=ht(g),x=At({inputs:{x:d},backend:e,attrs:{shape:[-1,m]}}),v=rv(i.dtype),y=Ga(x,v,"prod",e);f=At({inputs:{x:y},backend:e,attrs:{shape:p}}),l.push(x),l.push(y)}if(o){l.push(f);const p=hn(f.shape,c);f=At({inputs:{x:f},backend:e,attrs:{shape:p}})}return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const zot={kernelName:$p,backendName:"webgl",kernelFunc:Oot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bot(s){const{inputs:t,backend:e,attrs:n}=s,{paramsNestedSplits:i,paramsDenseValues:r,indices:o}=t,{outputRaggedRank:a}=n,l=i.map(x=>e.readSync(x.dataId)),c=i.map(x=>x.shape),u=e.readSync(r.dataId),h=e.readSync(o.dataId),[d,f,p]=UQ(l,c,u,r.shape,r.dtype,h,o.shape,a),g=d.map(x=>e.makeTensorInfo([x.length],"int32",x)),m=e.makeTensorInfo(p,r.dtype,f);return g.concat([m])}const Uot={kernelName:UC,backendName:"webgl",kernelFunc:Bot};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vot(s){const{inputs:t,backend:e}=s,{starts:n,limits:i,deltas:r}=t,o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=VQ(o,n.shape,n.dtype,a,i.shape,l,r.shape),h=e.makeTensorInfo([c.length],"int32",c),d=e.makeTensorInfo([u.length],n.dtype,u);return[h,d]}const Wot={kernelName:VC,backendName:"webgl",kernelFunc:Vot};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Got(s){const{inputs:t,backend:e,attrs:n}=s,{shape:i,values:r,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,c=e.readSync(i.dataId),u=e.readSync(r.dataId),h=e.readSync(o.dataId),d=a.map(m=>e.readSync(m.dataId)),f=a.map(m=>m.shape),[p,g]=WQ(c,i.shape,u,r.shape,r.dtype,h,o.shape,d,f,l);return e.makeTensorInfo(p,r.dtype,g)}const Hot={kernelName:WC,backendName:"webgl",kernelFunc:Got};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jk=s=>{const{backend:t,attrs:e}=s,{start:n,stop:i,step:r,dtype:o}=e,a=GQ(n,i,r,o);return t.makeTensorInfo([a.length],o,a)},qot={kernelName:U0,backendName:"webgl",kernelFunc:Jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xot="return 1.0 / x;",jot=Ie({opSnippet:Xot}),Kot={kernelName:rh,backendName:"webgl",kernelFunc:jot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yot=wi+`
  return (x < 0.0) ? 0.0 : x;
`,Zot=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Jot=Ie({opSnippet:Yot,packedOpSnippet:Zot}),Qot={kernelName:oh,backendName:"webgl",kernelFunc:Jot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tat=wi+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,eat=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nat=Ie({opSnippet:tat,packedOpSnippet:eat}),sat={kernelName:ah,backendName:"webgl",kernelFunc:nat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iat{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rat{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=at().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new rat(i.shape,l,c,r,o):new iat(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],"float32")}const aat={kernelName:Lp,backendName:"webgl",kernelFunc:oat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lat{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new lat(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const uat={kernelName:G0,backendName:"webgl",kernelFunc:cat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hat{constructor(t,e,n,i,r){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dat{constructor(t,e,n,i,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=t;this.outputShape=[o,e,n,c];const u=[i&&e>1?a-1:a,i&&n>1?l-1:l],h=[i&&e>1?e-1:e,i&&n>1?n-1:n],d=i?"0.5":"0.0";let f;r?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i}=t,{alignCorners:r,halfPixelCenters:o,size:a}=n,[l,c]=a,u=at().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new dat(i.shape,l,c,r,o):new hat(i.shape,l,c,r,o);return e.runWebGLProgram(u,[i],i.dtype)}const pat={kernelName:Fp,backendName:"webgl",kernelFunc:fat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mat{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,i,r]=e,[,o,a]=t,l=[n&&o>1?i-1:i,n&&a>1?r-1:r],c=[n&&o>1?o-1:o,n&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${i}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gat(s){const{inputs:t,backend:e,attrs:n}=s,{images:i,dy:r}=t,{alignCorners:o}=n,a=new mat(r.shape,i.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const xat={kernelName:W0,backendName:"webgl",kernelFunc:gat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vat{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const i=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,r=t.map((a,l)=>i(l)).join(","),o=Ge(n);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bat{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const i=rs("rc",n),r=`${i[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${i[n-2]} + 1 < ${this.outputShape[n-2]}`,a=Ge(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(i.slice())};
          if(${r}){
            result.g = ${c(i.slice())};
          }
          if(${o}) {
            result.b = ${u(i.slice())};
            if(${r}) {
              result.a = ${h(i.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function c(p){return p[n-1]="("+p[n-1]+" + 1)",d(p)}function u(p){return p[n-2]="("+p[n-2]+" + 1)",d(p)}function h(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",d(p)}function d(p){const g=t.map((v,y)=>f(y,p)),m=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${x}))`}function f(p,g){return e.indexOf(p)!==-1&&t[p]!==1?`${t[p]} - ${g[p]} - 1`:`${g[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yat(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{dims:r}=n,o=i.shape.length,a=pe(r,i.shape);if(o===0)return As({inputs:{x:i},backend:e});const l=at().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bat(i.shape,a):new vat(i.shape,a);return e.runWebGLProgram(l,[i],i.dtype)}const wat={kernelName:Pp,backendName:"webgl",kernelFunc:yat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _at{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],i=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sat={kernelName:sv,backendName:"webgl",kernelFunc:({inputs:s,attrs:t,backend:e})=>{const{image:n}=s,{radians:i,fillValue:r,center:o}=t,a=e,l=new _at(n.shape,r),[c,u]=tb(o,n.shape[1],n.shape[2]),h=[[c,u,Math.sin(i),Math.cos(i)]];return a.runWebGLProgram(l,[n],n.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cat=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Iat=Ie({opSnippet:Cat}),Tat={kernelName:lh,backendName:"webgl",kernelFunc:Iat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eat="return inversesqrt(x);",Mat=Ie({opSnippet:Eat,cpuKernelImpl:HQ}),kat={kernelName:ch,backendName:"webgl",kernelFunc:Mat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qk{constructor(t,e,n,i,r,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const l=Ge(r.length),c=Ge(o.length);let u="";n===1?u="i":n===2&&(u="i, j");const h=`getIndices(${u})`;let d="";i===1?d="i":i===2&&(d="i, coords[1]");const f=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aat(s){const{inputs:t,backend:e,attrs:n}=s,{indices:i,updates:r}=t,{shape:o}=n,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=Sh(r,i,o),d=[h/c,c];if(h===0)return e.makeTensorInfo(o,i.dtype);const f=At({inputs:{x:i},backend:e,attrs:{shape:[l,a]}}),p=At({inputs:{x:r},backend:e,attrs:{shape:[l,c]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),m=new Qk(l,a,f.shape.length,p.shape.length,u,d),x=e.runWebGLProgram(m,[p,f,g],p.dtype),v=At({inputs:{x},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),v}const Nat={kernelName:GC,backendName:"webgl",kernelFunc:Aat};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rat{constructor(t,e,n,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];const r="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=at().getNumber("WEBGL_VERSION")===2?r:o,l=i==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $at(s){const{inputs:t,backend:e,attrs:n}=s,{sortedSequence:i,values:r}=t,{side:o}=n,a=new Rat(i.shape[0],i.shape[1],r.shape[1],o),l=[[i.shape[1]]];return e.runWebGLProgram(a,[i,r],"int32",l)}const Dat={kernelName:HC,backendName:"webgl",kernelFunc:$at};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fat{constructor(t,e,n){this.variableNames=["c","a","b"],this.outputShape=e;let i,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",i="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${a[u]}`),u<t&&l.push(`${a[u]}`);i=l.join(),r=c.join()}const o=Ge(n);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${i});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lat(s){const{inputs:t,backend:e}=s,{condition:n,t:i,e:r}=t,o=new Fat(n.shape.length,i.shape,i.shape.length);return e.runWebGLProgram(o,[n,i,r],Ts(i.dtype,r.dtype))}const Pat={kernelName:Op,backendName:"webgl",kernelFunc:Lat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oat=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${om};
  float scale = ${am};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,zat=Ie({opSnippet:Oat}),Bat={kernelName:uh,backendName:"webgl",kernelFunc:zat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uat=Sc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Vat=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Wat=Ie({opSnippet:Uat,packedOpSnippet:Vat,cpuKernelImpl:XQ}),Gat={kernelName:ph,backendName:"webgl",kernelFunc:Wat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hat=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,qat=Ie({opSnippet:Hat}),Xat={kernelName:fh,backendName:"webgl",kernelFunc:qat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jat=Sc+`
  return sin(x);
`,Kat=Ie({opSnippet:jat}),Yat={kernelName:hh,backendName:"webgl",kernelFunc:Kat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zat=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Jat=Ie({opSnippet:Zat}),Qat={kernelName:dh,backendName:"webgl",kernelFunc:Jat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tlt=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,elt=Ie({opSnippet:tlt}),nlt={kernelName:mh,backendName:"webgl",kernelFunc:elt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const slt=s=>{const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{blockShape:r,paddings:o}=n;D(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,v)=>x*v),l=[[0,0]];l.push(...o);for(let x=1+r.length;x<i.shape.length;++x)l.push([0,0]);const c=[],u=Zk({inputs:{x:i},backend:e,attrs:{paddings:l,constantValue:0}}),h=Ah(u.shape,r,a,!1),d=Nh(h.length,r.length,!1),f=Rh(u.shape,r,a,!1),p=At({inputs:{x:u},backend:e,attrs:{shape:h}}),g=as({inputs:{x:p},backend:e,attrs:{perm:d}}),m=At({inputs:{x:g},backend:e,attrs:{shape:f}});return c.push(u),c.push(p),c.push(g),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),m},ilt={kernelName:Up,backendName:"webgl",kernelFunc:slt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rlt(s){const{inputs:t,backend:e}=s,{indices:n,values:i,denseShape:r,defaultValue:o}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(i.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${i.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=e.readSync(n.dataId),l=e.readSync(i.dataId),c=e.readSync(r.dataId),u=e.readSync(o.dataId)[0],[h,d,f,p,g]=KQ(a,n.shape,n.dtype,l,i.dtype,c,u);return[e.makeTensorInfo(d,n.dtype,h),e.makeTensorInfo([d[0]],i.dtype,f),e.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const olt={kernelName:H0,backendName:"webgl",kernelFunc:rlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function alt(s){const{inputs:t,backend:e}=s,{inputIndices:n,inputShape:i,newShape:r}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(i.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const o=Array.from(e.readSync(i.dataId)),a=e.readSync(n.dataId),l=Array.from(e.readSync(r.dataId)),[c,u,h]=YQ(a,n.shape,n.dtype,o,l);return[e.makeTensorInfo(u,n.dtype,c),e.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const llt={kernelName:q0,backendName:"webgl",kernelFunc:alt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clt(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=_k(o,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(u,n.dtype,c)}const ult={kernelName:X0,backendName:"webgl",kernelFunc:clt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hlt(s){const{inputs:t,backend:e}=s,{data:n,indices:i,segmentIds:r}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(i.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${i.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const o=e.readSync(n.dataId),a=e.readSync(i.dataId),l=e.readSync(r.dataId),[c,u]=_k(o,n.shape,n.dtype,a,l);return e.makeTensorInfo(u,n.dtype,c)}const dlt={kernelName:j0,backendName:"webgl",kernelFunc:hlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function flt(s){const{inputs:t,backend:e,attrs:n}=s,{sparseIndices:i,sparseValues:r,defaultValue:o}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=Sh(r,i,a),f=!1;if(r.dtype==="string"){const x=e.bufferSync(i),v=e.bufferSync(r),y=co(e.readSync(o.dataId)[0]),b=qQ(x,v,a,d,u,c,l,h,y,f);return e.makeTensorInfo(a,b.dtype,b.values)}const p=new Qk(c,l,i.shape.length,r.shape.length,h,[d,1],f),g=e.runWebGLProgram(p,[r,i,o],r.dtype),m=At({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),m}const plt={kernelName:qC,backendName:"webgl",kernelFunc:flt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mlt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{numOrSizeSplits:r,axis:o}=n,a=pe(o,i.shape)[0],l=mb(i,r,a),c=i.shape.length,u=new Array(c).fill(0),h=i.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=Cc({inputs:{x:i},backend:e,attrs:{begin:u,size:f}});return u[a]+=d,p})}const glt={kernelName:Vp,backendName:"webgl",kernelFunc:mlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sS="return sqrt(x);",xlt=Ie({opSnippet:sS,packedOpSnippet:sS,cpuKernelImpl:ZQ}),vlt={kernelName:gh,backendName:"webgl",kernelFunc:xlt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const blt="return x * x;",ylt=Ie({opSnippet:blt}),wlt={kernelName:K0,backendName:"webgl",kernelFunc:ylt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iS="return (a - b) * (a - b);",_lt=jn({opSnippet:iS,packedOpSnippet:iS}),Slt={kernelName:xh,backendName:"webgl",kernelFunc:_lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Clt({inputs:s,attrs:t,backend:e}){const{x:n}=s,i=wi+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new Fr(n.shape,i);return e.runWebGLProgram(r,[n],n.dtype)}const Ilt={kernelName:_h,backendName:"webgl",kernelFunc:Clt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tlt{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const i=n.length,r=Ge(n.length),o=Ge(n.length);let a="";if(i===1)a="coords * strides + begin";else{let l=0;a=n.map((c,u)=>(l++,n.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Elt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{begin:r,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=n,{finalShapeSparse:f,finalShape:p,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:v,end:y,strides:b}=gv(i.shape,r,o,a,l,c,u,h,d);let w;if(g)w=At({inputs:{x:i},backend:e,attrs:{shape:p}});else if(m||x){D(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const C=fv(v,y,b),_=Cc({inputs:{x:i},backend:e,attrs:{begin:v,size:C}});w=At({inputs:{x:_},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(_)}else if(e.shouldExecuteOnCPU([i])){const _=e.readSync(i.dataId),I=fe(i.shape,i.dtype,_),T=JQ(f,I,b,v);w=e.makeTensorInfo(p,i.dtype,T.values)}else{const _=new Tlt(v,b,f);w=e.runWebGLProgram(_,[i],i.dtype)}const S=At({inputs:{x:w},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(w),S}const Mlt={kernelName:Y0,backendName:"webgl",kernelFunc:Elt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function klt(s){const{inputs:t,backend:e,attrs:n}=s,{separator:i,nGramWidths:r,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=n,{data:u,dataSplits:h}=t,d=e.readSync(u.dataId),f=e.readSync(h.dataId),[p,g]=QQ(d,f,i,r,o,a,l,c);return[e.makeTensorInfo([p.length],"string",p),e.makeTensorInfo(h.shape,"int32",g)]}const Alt={kernelName:Z0,backendName:"webgl",kernelFunc:klt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nlt(s){const{inputs:t,backend:e,attrs:n}=s,{skipEmpty:i}=n,{input:r,delimiter:o}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=e.readSync(r.dataId),l=e.readSync(o.dataId)[0],[c,u,h]=ttt(a,l,i),d=u.length;return[e.makeTensorInfo([d,2],"int32",c),e.makeTensorInfo([d],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(h))]}const Rlt={kernelName:J0,backendName:"webgl",kernelFunc:Nlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $lt(s){const{inputs:t,backend:e,attrs:n}=s,{numBuckets:i}=n,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const o=e.readSync(r.dataId),a=ett(o,i);return e.makeTensorInfo(r.shape,"int32",a)}const Dlt={kernelName:Q0,backendName:"webgl",kernelFunc:$lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Flt="return tan(x);",Llt=Ie({opSnippet:Flt}),Plt={kernelName:bh,backendName:"webgl",kernelFunc:Llt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Olt=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,zlt=Ie({opSnippet:Olt}),Blt={kernelName:yh,backendName:"webgl",kernelFunc:zlt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ult{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const i=Ge(this.rank),r=Vlt(t);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function Vlt(s){const t=s.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${s[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let i=0;i<s.length;i++)n.push(`imod(${e[i]}, ${s[i]})`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{reps:r}=n;if(i.dtype==="string"||i.shape.length>5){const l=e.readSync(i.dataId),c=i.dtype==="string"?l.map(d=>co(d)):l,u=fe(i.shape,i.dtype,c),h=stt(u,r);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new Ult(i.shape,r);return e.runWebGLProgram(o,[i],i.dtype)}const Wlt={kernelName:wh,backendName:"webgl",kernelFunc:tA};class Glt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Hlt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(s,t){t!==null&&s.disposeIntermediateTensorInfo(t)}function rS(s){let t=1;for(;t<s;)t*=2;return t}function qlt(s){const{inputs:t,backend:e,attrs:n}=s,{x:i}=t,{k:r,sorted:o}=n,a=at().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=at().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=i.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([i])||u<a||r>l){const T=e.readSync(i.dataId),[N,P]=itt(T,c,i.dtype,r,o);return[e.makeTensorInfo(N.shape,N.dtype,N.values),e.makeTensorInfo(P.shape,P.dtype,P.values)]}if(r===0)return c[c.length-1]=0,[e.makeTensorInfo(c,i.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[i,jh({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const h=e.texData.get(i.dataId),d=h!==null&&h.isPacked,f=d?e.unpackTensor(i):i,g=ht(c)/u,m=At({inputs:{x:f},attrs:{shape:[g,u]},backend:e});d&&Uo(e,f);const x=rS(r),v=rS(u);let y=null;const b=()=>y===null?[m,m]:[m,y],w=(T,N,P)=>{const E=b(),M=new Glt(P),R=[[u],[y===null?1:0],[Number.NEGATIVE_INFINITY],[T],[N]],V=y;y=e.runWebGLProgram(M,E,"int32",R),Uo(e,V)};for(let T=1;T<x;T*=2){const N=T*2;for(let P=T;P>=1;P/=2)w(N,P,[g,v])}for(let T=v;T>x;T/=2){const N=b(),P=new Hlt([g,T/2]),M=[[u],[y===null?1:0],[x]],A=y;y=e.runWebGLProgram(P,N,"int32",M),Uo(e,A);const R=x/2,V=R*2;for(let L=R;L>=1;L/=2)w(V,L,y.shape)}let S=y;y=Cc({inputs:{x:y},backend:e,attrs:{begin:0,size:[g,r]}}),Uo(e,S);let C=Hk({inputs:{x:m,indices:y},backend:e,attrs:{axis:1,batchDims:1}});Uo(e,m);const _=c.slice(0,-1);_.push(r),S=y,y=At({inputs:{x:y},attrs:{shape:_},backend:e}),Uo(e,S);const I=C;return C=At({inputs:{x:C},attrs:{shape:_},backend:e}),Uo(e,I),[C,y]}const Xlt={kernelName:tv,backendName:"webgl",kernelFunc:qlt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jlt{constructor(t,e,n,i,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=n==="nearest"?1:2;let l;switch(i){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Klt(s){const{inputs:t,backend:e,attrs:n}=s,{image:i,transforms:r}=t,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=n,[u,h,d,f]=i.shape,[p,g]=c!=null?c:[h,d],m=[u,p,g,f],x=new jlt(h,d,o,a,l,m);return e.runWebGLProgram(x,[i,r],"float32")}const Ylt={kernelName:ev,backendName:"webgl",kernelFunc:Klt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zlt(s){const{inputs:t,attrs:e,backend:n}=s,{axis:i}=e,{x:r}=t;Wh(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=n.readSync(r.dataId),{outputValues:a,outputShape:l,indices:c}=rtt(o,i,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,a),n.makeTensorInfo([c.length],"int32",c)]}const Jlt={kernelName:nv,backendName:"webgl",kernelFunc:Zlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qlt(s){const{inputs:t,backend:e,attrs:n}=s,{value:i}=t;let{axis:r}=n;r<0&&(r+=i.shape.length);const o=i,a=o.shape.length,l=i.shape[r],c=new Array(a-1);let u=0;for(let g=0;g<a;g++)g!==r&&(c[u++]=o.shape[g]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[r]=1;const p=new Array(l);for(let g=0;g<p.length;g++){d[r]=g;const m=Cc({inputs:{x:o},backend:e,attrs:{begin:d,size:f}}),x=At({inputs:{x:m},backend:e,attrs:{shape:c}});p[g]=x,h.push(m)}return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),p}const tct={kernelName:Gp,backendName:"webgl",kernelFunc:Qlt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ect{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,i=t.batchSize,r=t.inSize,o=t.numSegments,a=o*Math.ceil(r/n);this.outputShape=[i,a];const l="0.0",c="sumValue",u=Math.floor(n/4)*4,h=n%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";r%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nct(s){const{inputs:t,backend:e,attrs:n}=s,{x:i,segmentIds:r}=t,{numSegments:o}=n,a=i.shape.length,l=[];let c=0;const u=sn([c],a);let h=i;u!=null&&(h=as({inputs:{x:i},backend:e,attrs:{perm:u}}),l.push(h),c=dn(1,a)[0]);const d=PT(h.shape,c,o),f=ht([h.shape[c]]),p=At({inputs:{x:h},backend:e,attrs:{shape:[-1,f]}});l.push(p);const g=rv(i.dtype),m=(b,w,S,C,_)=>{const I=b.shape[0],T=b.shape[1],N=LT(T,_),P={windowSize:N,inSize:T,batchSize:I,numSegments:_},E=new ect(P,w),M=e.compileAndRun(E,[b,S],C);if(l.push(M),M.shape[1]===_)return M;const A=Jk({backend:e,attrs:{start:0,stop:_,step:1,dtype:"float32"}}),R=tA({inputs:{x:A},backend:e,attrs:{reps:[T/N]}});return l.push(A),l.push(R),m(M,w,R,C,_)},x=m(p,"unsortedSegmentSum",r,g,o),v=At({inputs:{x},backend:e,attrs:{shape:d}});let y=v;if(u!=null){l.push(v);const b=Co(u);y=as({inputs:{x:y},backend:e,attrs:{perm:b}})}return l.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const sct={kernelName:Hp,backendName:"webgl",kernelFunc:nct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ict=[Ytt,Jtt,eet,iet,aet,het,fet,met,bet,wet,Iet,Met,Net,Fet,Oet,Bet,Vet,qet,jet,Yet,tnt,ant,cnt,hnt,xnt,bnt,Snt,$tt,Tnt,Nnt,Fnt,Unt,Wnt,Hnt,Xnt,Knt,Jnt,est,ist,ost,lst,ust,fst,mst,bst,wst,Cst,Est,kst,$st,Pst,Ust,Gst,Xst,jst,Yst,Jst,tit,nit,iit,lit,hit,pit,git,bit,_it,Tit,Ait,Rtt,Rit,knt,Fit,Oit,Uit,Ftt,Hit,Kit,Zit,ert,irt,lrt,hrt,mrt,brt,_rt,Crt,Mrt,Art,Rrt,Lrt,Ort,Brt,Vrt,Grt,jrt,Jrt,not,uot,Ott,pot,xot,yot,Sot,fnt,Tot,Mot,Aot,$ot,Pot,Ptt,zot,Uot,Wot,Hot,qot,pnt,oot,Kot,Qot,sat,Btt,aat,uat,pat,xat,wat,Sat,Tat,kat,Nat,Dat,Pat,Bat,Gat,Xat,Yat,Qat,rnt,lot,nlt,ilt,olt,llt,ult,dlt,plt,glt,vlt,wlt,Slt,Ilt,Mlt,Alt,Rlt,Dlt,aot,Xtt,Plt,Blt,Wlt,Xlt,Ylt,jtt,Jlt,tct,sct,Eot];for(const s of ict)jC(s);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */l4("cpu");var fs=(s=>(s[s.Teach=0]="Teach",s[s.Demonstrate=1]="Demonstrate",s[s.None=2]="None",s))(fs||{});const rct=SC,oct=5;class act extends CC{constructor(e){super(e);te(this,"inputSize");te(this,"model");te(this,"_state",2);te(this,"previousState",2);te(this,"recording",[]);te(this,"storedRecording",[]);te(this,"isCurrentlyFitting",!1);te(this,"currentLoss",0);te(this,"epochsDone",0);te(this,"_numberOfEpochs",40);te(this,"_batchSize",32);te(this,"_hiddenLayerSize",10);this.inputSize=rct.sensorNumber+1,this.generateNetwork()}generateNetwork(){this.model=v8({layers:[__({inputShape:[this.inputSize],units:this.hiddenLayerSize,activation:"tanh"}),__({units:oct,activation:"softmax"})]}),this.model.compile({optimizer:"adam",loss:"binaryCrossentropy"})}recordButtonPressed(){this.respawnCar(),this.state=0,this.recording=[],this.rerenderTeachPanel()}discardButtonPressed(){this.state=2,this.recording=[],this.removeCar(),this.gameWorld.controls.reset(),this.rerenderTeachPanel()}startAIDemonstration(){this.state=1,this.recording=[],this.respawnCar(),this.rerenderTeachPanel()}stopAIDemonstration(){this.state=2,this.removeCar(),this.gameWorld.controls.reset(),this.rerenderTeachPanel()}storeRecording(){this.storedRecording.push(...this.recording),this.recording=[],this.rerenderTeachPanel()}async trainFromStored(){const e=this.storedRecording.map(a=>[...a.sensordDistances,a.forwardVelocity]),n=this.storedRecording.map(a=>a.action),i=T_(e),r=T_(n),o=nX({xs:i,ys:r}).batch(this.batchSize).shuffle(this.batchSize);this.isCurrentlyFitting=!0,await this.model.fitDataset(o,{epochs:this.numberOfEpochs,callbacks:{onEpochEnd:(a,l)=>{this.currentLoss=l.loss,this.epochsDone=a+1,this.rerenderTeachPanel()},onTrainEnd:()=>{this.isCurrentlyFitting=!1,this.rerenderTeachPanel()}}})}update(e){if(super.update(e),this.state===0&&this.car){const n=this.car.getPosition();this.gameWorld.raceTrack.isFinished(n.x,n.z)?(this.state=2,this.removeCar(),this.rerenderTeachPanel(),this.gameWorld.controls.reset()):(this.recording.push({sensordDistances:this.sensorData.map(i=>i.distance),forwardVelocity:this.car.getForwardVelocity(),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}if(this.state===1&&this.car){const n=[[...this.sensorData.map(o=>o.distance),this.car.getForwardVelocity()]],r=this.model.predict(av(n)).arraySync()[0].map(o=>o>=.5);this.car.applyInput(...r),(this.W||this.A||this.S||this.D||this.SPACE)&&(this.car.applyInput(this.W,this.A,this.S,this.D,this.SPACE),this.recording.push({sensordDistances:this.sensorData.map(o=>o.distance),forwardVelocity:this.car.getForwardVelocity(),action:[+this.W,+this.A,+this.S,+this.D,+this.SPACE]}),document.getElementById("recorded-count-span").innerText=this.recording.length.toString())}}removeCar(){super.removeCar()}respawnCar(){super.respawnCar()}activate(){super.activate(),this.removeCar()}deactivate(){super.deactivate(),this.removeCar(),this.state=2,this.recording=[]}get numberOfEpochs(){return this._numberOfEpochs}set numberOfEpochs(e){e==null||e<1||(this._numberOfEpochs=Math.floor(e))}get batchSize(){return this._batchSize}set batchSize(e){e==null||e<1||(this._batchSize=Math.floor(e))}get hiddenLayerSize(){return this._hiddenLayerSize}set hiddenLayerSize(e){e==null||e<1||(this._hiddenLayerSize=Math.floor(e),this.generateNetwork())}get state(){return this._state}set state(e){e!==this._state&&(this.previousState=this._state,this._state=e)}rerenderTeachPanel(){window.rerenderTeachPanel()}}function oS(s){let t,e,n,i=s[0].recording.length+"",r,o,a=s[0].state===fs.Teach||s[0].previousState===fs.Teach?"inputs recorded":"corrections recorded",l;return{c(){t=jt("div"),e=jt("span"),n=jt("span"),r=Ke(i),o=Ke(`
            \xA0`),l=Ke(a),wt(n,"id","recorded-count-span"),wt(e,"class","text-base font-medium text-blue-700 dark:text-white"),Fl(t,"display","hidden"),wt(t,"class","flex mt-4 mb-1")},m(c,u){Ht(c,t,u),Bt(t,e),Bt(e,n),Bt(n,r),Bt(t,o),Bt(t,l)},p(c,u){u&1&&i!==(i=c[0].recording.length+"")&&ui(r,i),u&1&&a!==(a=c[0].state===fs.Teach||c[0].previousState===fs.Teach?"inputs recorded":"corrections recorded")&&ui(l,a)},d(c){c&&Gt(t)}}}function aS(s){let t,e,n;return{c(){t=jt("button"),t.innerHTML='<span class="relative py-1 px-2 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">Store recording</span>',wt(t,"class","inline-flex items-center text-center justify-center p-0.5 mb-2 overflow-hidden text-xs font-medium text-gray-900 rounded-lg group bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 group-hover:from-pink-300 group-hover:via-purple-300 group-hover:to-indigo-400 dark:text-white dark:hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-red-100 dark:focus:ring-red-400 block mx-auto")},m(i,r){Ht(i,t,r),e||(n=Yn(t,"click",s[4]),e=!0)},p:en,d(i){i&&Gt(t),e=!1,n()}}}function lS(s){let t,e,n;return{c(){t=jt("button"),t.textContent="Train from stored inputs",wt(t,"type","button"),wt(t,"class","block text-red-700 hover:text-white mx-auto border border-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-xs px-2 py-1 text-center mb-0 dark:border-red-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-900")},m(i,r){Ht(i,t,r),e||(n=Yn(t,"click",s[5]),e=!0)},p:en,d(i){i&&Gt(t),e=!1,n()}}}function cS(s){let t,e,n,i=s[0].currentLoss.toFixed(4)+"",r,o,a,l=s[0].epochsDone+"",c,u,h=s[0].numberOfEpochs+"",d,f,p,g,m;return{c(){t=jt("div"),e=jt("span"),n=Ke("Loss: "),r=Ke(i),o=he(),a=jt("span"),c=Ke(l),u=Ke(" / "),d=Ke(h),f=Ke(" epochs"),p=he(),g=jt("div"),m=jt("div"),wt(e,"class","text-sm font-light text-blue-700 dark:text-white"),wt(a,"class","text-sm font-medium text-blue-700 dark:text-white"),wt(t,"class","flex justify-between mb-1"),wt(m,"class","bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 h-2.5 rounded-full"),Fl(m,"width",s[0].epochsDone/s[0].numberOfEpochs*100+"%"),wt(g,"class","w-full bg-gray-700 rounded-full h-2.5")},m(x,v){Ht(x,t,v),Bt(t,e),Bt(e,n),Bt(e,r),Bt(t,o),Bt(t,a),Bt(a,c),Bt(a,u),Bt(a,d),Bt(a,f),Ht(x,p,v),Ht(x,g,v),Bt(g,m)},p(x,v){v&1&&i!==(i=x[0].currentLoss.toFixed(4)+"")&&ui(r,i),v&1&&l!==(l=x[0].epochsDone+"")&&ui(c,l),v&1&&h!==(h=x[0].numberOfEpochs+"")&&ui(d,h),v&1&&Fl(m,"width",x[0].epochsDone/x[0].numberOfEpochs*100+"%")},d(x){x&&Gt(t),x&&Gt(p),x&&Gt(g)}}}function uS(s){let t,e,n=s[0].state==fs.None?"New recording":"Discard",i,r,o,a,l,c,u,h,d,f,p=s[0].storedRecording.length+"",g,m,x,v,y,b,w,S,C,_,I,T,N,P,E,M,A,R,V,L,$,U,H,W,Z,it,lt,J,vt=(s[0].state!=fs.None||s[0].recording.length>0)&&oS(s),mt=s[0].state==fs.None&&s[0].recording.length>0&&aS(s),xt=s[0].storedRecording.length>0&&!s[0].isCurrentlyFitting&&lS(s),dt=s[0].isCurrentlyFitting&&cS(s);return $=new _C({props:{mode:s[0]}}),H=new wC({props:{mode:s[0]}}),Z=new yC({props:{gameWorld:s[0].gameWorld}}),{c(){t=jt("div"),e=jt("button"),i=Ke(n),r=he(),o=jt("button"),o.textContent="Test AI car",a=he(),vt&&vt.c(),l=he(),mt&&mt.c(),c=he(),u=jt("hr"),h=he(),d=jt("div"),f=jt("span"),g=Ke(p),m=Ke(" inputs stored."),x=he(),xt&&xt.c(),v=he(),dt&&dt.c(),y=he(),b=jt("ul"),w=jt("li"),w.textContent="Epochs",S=he(),C=jt("input"),_=he(),I=jt("li"),I.textContent="Batch size",T=he(),N=jt("input"),P=he(),E=jt("li"),E.textContent="Hidden layer units",M=he(),A=jt("input"),R=he(),V=jt("hr"),L=he(),lr($.$$.fragment),U=he(),lr(H.$$.fragment),W=he(),lr(Z.$$.fragment),wt(e,"type","button"),wt(e,"class","focus:outline-none text-white grow flex-1 transition py-1 px-2 text-sm focus:ring-red-300 font-bold rounded-l-lg border border-gray-200 focus:z-10 focus:ring-1 bg-red-600 border-gray-600 text-white hover:text-white hover:bg-red-700"),wt(o,"type","button"),wt(o,"class","text-purple-700 hover:text-white grow flex-1 transition border border-purple-700 hover:bg-purple-800 focus:ring-4 focus:outline-none focus:ring-purple-300 font-bold rounded-r-lg text-sm px-2 py-1 text-center dark:border-purple-400 dark:text-purple-400 dark:hover:text-white dark:hover:bg-purple-500 dark:focus:ring-purple-900"),wt(t,"class","flex rounded-md shadow-sm"),wt(t,"role","group"),wt(u,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700"),wt(f,"class","text-base font-medium text-blue-700 dark:text-white"),Fl(d,"display","hidden"),wt(d,"class","flex justify-between mt-4 mb-1"),wt(w,"class","col-span-2 py-2 px-2 rounded-tl-xl border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),wt(C,"type","number"),wt(C,"min","1"),wt(C,"max","1000000"),wt(C,"step","1"),wt(C,"pattern","\\d+"),wt(C,"class","col-span-1 p-1 text-gray-900 bg-gray-50 rounded-tr-xl border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),wt(I,"class","col-span-2 py-2 px-2 border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),wt(N,"type","number"),wt(N,"min","1"),wt(N,"max","256"),wt(N,"step","1"),wt(N,"pattern","\\d+"),wt(N,"class","col-span-1 p-1 text-gray-900 bg-gray-50 border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),wt(E,"class","col-span-2 py-2 px-2 rounded-bl-xl border-b border-gray-600 text-gray-900 bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400"),wt(A,"type","number"),wt(A,"min","1"),wt(A,"max","1024"),wt(A,"step","1"),wt(A,"pattern","\\d+"),wt(A,"class","col-span-1 p-1 text-gray-900 bg-gray-50 rounded-br-xl border border-gradient-to-r from-pink-300 via-purple-300 to-indigo-400 sm:text-xs focus:ring-gray-500 focus:border-gray-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-900 dark:focus:bg-gray-900"),wt(b,"class","w-100 mt-4 grid grid-cols-3 flex-row flex-wrap text-sm font-bold rounded-xl border border-gray-600"),wt(V,"class","my-4 mx-auto w-48 h-1 bg-gray-100 rounded border-0 dark:bg-gray-700")},m(rt,yt){Ht(rt,t,yt),Bt(t,e),Bt(e,i),Bt(t,r),Bt(t,o),Ht(rt,a,yt),vt&&vt.m(rt,yt),Ht(rt,l,yt),mt&&mt.m(rt,yt),Ht(rt,c,yt),Ht(rt,u,yt),Ht(rt,h,yt),Ht(rt,d,yt),Bt(d,f),Bt(f,g),Bt(f,m),Ht(rt,x,yt),xt&&xt.m(rt,yt),Ht(rt,v,yt),dt&&dt.m(rt,yt),Ht(rt,y,yt),Ht(rt,b,yt),Bt(b,w),Bt(b,S),Bt(b,C),Qs(C,s[0].numberOfEpochs),Bt(b,_),Bt(b,I),Bt(b,T),Bt(b,N),Qs(N,s[0].batchSize),Bt(b,P),Bt(b,E),Bt(b,M),Bt(b,A),Qs(A,s[0].hiddenLayerSize),Ht(rt,R,yt),Ht(rt,V,yt),Ht(rt,L,yt),Fi($,rt,yt),Ht(rt,U,yt),Fi(H,rt,yt),Ht(rt,W,yt),Fi(Z,rt,yt),it=!0,lt||(J=[Yn(e,"click",s[2]),Yn(o,"click",s[3]),Yn(C,"input",s[6]),Yn(N,"input",s[7]),Yn(A,"input",s[8])],lt=!0)},p(rt,yt){(!it||yt&1)&&n!==(n=rt[0].state==fs.None?"New recording":"Discard")&&ui(i,n),rt[0].state!=fs.None||rt[0].recording.length>0?vt?vt.p(rt,yt):(vt=oS(rt),vt.c(),vt.m(l.parentNode,l)):vt&&(vt.d(1),vt=null),rt[0].state==fs.None&&rt[0].recording.length>0?mt?mt.p(rt,yt):(mt=aS(rt),mt.c(),mt.m(c.parentNode,c)):mt&&(mt.d(1),mt=null),(!it||yt&1)&&p!==(p=rt[0].storedRecording.length+"")&&ui(g,p),rt[0].storedRecording.length>0&&!rt[0].isCurrentlyFitting?xt?xt.p(rt,yt):(xt=lS(rt),xt.c(),xt.m(v.parentNode,v)):xt&&(xt.d(1),xt=null),rt[0].isCurrentlyFitting?dt?dt.p(rt,yt):(dt=cS(rt),dt.c(),dt.m(y.parentNode,y)):dt&&(dt.d(1),dt=null),yt&1&&Lr(C.value)!==rt[0].numberOfEpochs&&Qs(C,rt[0].numberOfEpochs),yt&1&&Lr(N.value)!==rt[0].batchSize&&Qs(N,rt[0].batchSize),yt&1&&Lr(A.value)!==rt[0].hiddenLayerSize&&Qs(A,rt[0].hiddenLayerSize);const Tt={};yt&1&&(Tt.mode=rt[0]),$.$set(Tt);const ne={};yt&1&&(ne.mode=rt[0]),H.$set(ne);const re={};yt&1&&(re.gameWorld=rt[0].gameWorld),Z.$set(re)},i(rt){it||(Os($.$$.fragment,rt),Os(H.$$.fragment,rt),Os(Z.$$.fragment,rt),it=!0)},o(rt){hi($.$$.fragment,rt),hi(H.$$.fragment,rt),hi(Z.$$.fragment,rt),it=!1},d(rt){rt&&Gt(t),rt&&Gt(a),vt&&vt.d(rt),rt&&Gt(l),mt&&mt.d(rt),rt&&Gt(c),rt&&Gt(u),rt&&Gt(h),rt&&Gt(d),rt&&Gt(x),xt&&xt.d(rt),rt&&Gt(v),dt&&dt.d(rt),rt&&Gt(y),rt&&Gt(b),rt&&Gt(R),rt&&Gt(V),rt&&Gt(L),Li($,rt),rt&&Gt(U),Li(H,rt),rt&&Gt(W),Li(Z,rt),lt=!1,Ur(J)}}}function lct(s){let t=s[1],e,n,i=uS(s);return{c(){i.c(),e=Gx()},m(r,o){i.m(r,o),Ht(r,e,o),n=!0},p(r,[o]){o&2&&gi(t,t=r[1])?(xS(),hi(i,1,1,en),vS(),i=uS(r),i.c(),Os(i,1),i.m(e.parentNode,e)):i.p(r,o)},i(r){n||(Os(i),n=!0)},o(r){hi(i),n=!1},d(r){r&&Gt(e),i.d(r)}}}function cct(s,t,e){let{mode:n}=t,i=!1;const r=()=>{e(1,i=!i)};window.rerenderTeachPanel=r;const o=()=>{n.state==fs.None?n.recordButtonPressed():n.state==fs.Teach&&n.discardButtonPressed()},a=()=>{n.state==fs.None?n.startAIDemonstration():n.state==fs.Demonstrate&&n.stopAIDemonstration()},l=()=>{n.storeRecording()},c=()=>{n.trainFromStored()};function u(){n.numberOfEpochs=Lr(this.value),e(0,n)}function h(){n.batchSize=Lr(this.value),e(0,n)}function d(){n.hiddenLayerSize=Lr(this.value),e(0,n)}return s.$$set=f=>{"mode"in f&&e(0,n=f.mode)},[n,i,o,a,l,c,u,h,d]}class uct extends xr{constructor(t){super(),gr(this,t,cct,lct,gi,{mode:0})}}const Jd=new Qx(.45,.5,32,1);Jd.rotateX(Math.PI/2);const ry=new Ra({color:0,side:si});ry.depthTest=!1;ry.depthWrite=!1;const oy=new Ra({color:16753920,side:si});oy.depthTest=!1;oy.depthWrite=!1;const eA=new Ra({color:65280,side:si});eA.depthTest=!1;eA.depthWrite=!1;const ay=new Ra({color:255,side:si});ay.depthTest=!1;ay.depthWrite=!1;class hct{constructor(t){te(this,"gameWorld");te(this,"raycaster");te(this,"pointer");te(this,"ring");te(this,"brushSize",1);te(this,"onPointerMove");te(this,"onMouseUp");te(this,"onMouseDown");te(this,"mouseDown");te(this,"rings");te(this,"road");te(this,"roadPoints");this.gameWorld=t,this.roadPoints=[new K(4,0,4),new K(-4,0,4),new K(-4,0,0),new K(4,0,0),new K(4,0,-4),new K(-4,0,-4)],this.road=new p1(this.roadPoints,1),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road,this.raycaster=new JS,this.pointer=new $t(0,0),this.onPointerMove=e=>{this.pointer.x=e.offsetX/this.gameWorld.canvas.offsetWidth*2-1,this.pointer.y=-(e.offsetY/this.gameWorld.canvas.offsetHeight)*2+1},this.ring=new rn(Jd,ry),this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.ring.castShadow=!1,this.ring.receiveShadow=!1,this.ring.renderOrder=999,this.rings=[],this.mouseDown=!1,this.onMouseUp=e=>{e.button===0&&this.endDrawing(),document.removeEventListener("mouseup",this.onMouseUp)},this.onMouseDown=e=>{e.button===0&&(this.startDrawing(),document.addEventListener("mouseup",this.onMouseUp))}}startDrawing(){this.mouseDown=!0;const t=new rn(Jd,oy);t.scale.set(this.brushSize,this.brushSize,this.brushSize),t.castShadow=!1,t.receiveShadow=!1,t.renderOrder=999,t.position.copy(this.ring.position),this.rings=[t],this.gameWorld.scene.add(t)}addDrawing(){if(this.rings.some(n=>this.ring.position.distanceTo(n.position)<this.brushSize))return;const e=new rn(Jd,ay);e.scale.set(this.brushSize,this.brushSize,this.brushSize),e.castShadow=!1,e.receiveShadow=!1,e.renderOrder=999,e.position.copy(this.ring.position),this.rings.push(e),this.gameWorld.scene.add(e)}endDrawing(){this.mouseDown=!1,this.rings.length>3&&(this.gameWorld.removeGameObject(this.road),this.roadPoints=this.rings.map(t=>t.position),this.road=new p1(this.roadPoints,this.brushSize),this.gameWorld.addGameObject(this.road),this.gameWorld.raceTrack=this.road),this.rings.forEach(t=>{this.gameWorld.scene.remove(t)}),this.rings=[]}update(t){this.raycaster.setFromCamera(this.pointer,this.gameWorld.camera);const e=this.raycaster.intersectObjects([this.gameWorld.ground.mesh]);if(e.length>0){const n=e[0].point;this.ring.position.set(n.x,n.y,n.z),this.ring.visible=!0}else this.ring.visible=!1;this.ring.scale.set(this.brushSize,this.brushSize,this.brushSize),this.mouseDown&&this.addDrawing(),this.gameWorld.controls.target.set(0,0,0)}activate(){this.gameWorld.controls.maxPolarAngle=0,this.gameWorld.controls.minAzimuthAngle=0,this.gameWorld.controls.maxAzimuthAngle=0,this.gameWorld.controls.minDistance=8,this.gameWorld.controls.maxDistance=8,this.gameWorld.controls.target.set(0,0,0),this.ring.visible=!1,this.gameWorld.scene.add(this.ring),this.gameWorld.canvas.addEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.addEventListener("mousedown",this.onMouseDown)}deactivate(){this.gameWorld.controls.maxPolarAngle=Math.PI,this.gameWorld.controls.minAzimuthAngle=1/0,this.gameWorld.controls.maxAzimuthAngle=1/0,this.gameWorld.controls.minDistance=0,this.gameWorld.controls.maxDistance=50,this.gameWorld.controls.reset(),this.gameWorld.scene.remove(this.ring),this.gameWorld.canvas.removeEventListener("pointermove",this.onPointerMove),this.gameWorld.canvas.removeEventListener("mousedown",this.onMouseDown)}}class dct{constructor(t){te(this,"gameWorld");this.gameWorld=t}update(t){}activate(){this.gameWorld.controls.reset()}deactivate(){}}function hS(s,t,e){const n=s.slice();return n[7]=t[e],n[9]=e,n}function dS(s){let t,e=s[7]+"",n,i,r,o,a;function l(){return s[5](s[9])}return{c(){t=jt("button"),n=Ke(e),i=he(),wt(t,"type","button"),wt(t,"class",r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")},m(c,u){Ht(c,t,u),Bt(t,n),Bt(t,i),o||(a=Yn(t,"click",l),o=!0)},p(c,u){s=c,u&1&&r!==(r="transition-all grow py-2 px-4 text-md "+(s[9]===0?"rounded-bl-2xl":"")+" "+(s[9]===s[1].length-1?"rounded-br-2xl":"")+" "+(s[9]===s[0]?"font-bold text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800":"font-medium border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-700 dark:border-gray-600 dark:text-white dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-blue-500 dark:focus:text-white text-gray-900 bg-white")+" focus:z-10")&&wt(t,"class",r)},d(c){c&&Gt(t),o=!1,a()}}}function fct(s){let t,e,n,i,r,o=s[1],a=[];for(let u=0;u<o.length;u+=1)a[u]=dS(hS(s,o,u));var l=s[2][s[0]];function c(u){return{props:{mode:u[3][u[0]]}}}return l&&(i=hy(l,c(s))),{c(){t=jt("div");for(let u=0;u<a.length;u+=1)a[u].c();e=he(),n=jt("div"),i&&lr(i.$$.fragment),wt(t,"class","sticky top-0 z-50 inline-flex rounded-md shadow-sm w-full"),wt(t,"role","group"),wt(n,"class","p-4")},m(u,h){Ht(u,t,h);for(let d=0;d<a.length;d+=1)a[d].m(t,null);Ht(u,e,h),Ht(u,n,h),i&&Fi(i,n,null),r=!0},p(u,[h]){if(h&19){o=u[1];let f;for(f=0;f<o.length;f+=1){const p=hS(u,o,f);a[f]?a[f].p(p,h):(a[f]=dS(p),a[f].c(),a[f].m(t,null))}for(;f<a.length;f+=1)a[f].d(1);a.length=o.length}const d={};if(h&1&&(d.mode=u[3][u[0]]),l!==(l=u[2][u[0]])){if(i){xS();const f=i;hi(f.$$.fragment,1,0,()=>{Li(f,1)}),vS()}l?(i=hy(l,c(u)),lr(i.$$.fragment),Os(i.$$.fragment,1),Fi(i,n,null)):i=null}else l&&i.$set(d)},i(u){r||(i&&Os(i.$$.fragment,u),r=!0)},o(u){i&&hi(i.$$.fragment,u),r=!1},d(u){u&&Gt(t),mS(a,u),u&&Gt(e),u&&Gt(n),i&&Li(i)}}}const pct=2;function mct(s,t,e){const n=["Draw","Play","Train","Teach"],i=[wz,Az,$z,uct],r=[];let o=-1,a;bC.subscribe(u=>{u&&(a=u,r.push(new hct(a)),r.push(new CC(a)),r.push(new dct(a)),r.push(new act(a)),l(pct))});function l(u){o!==u&&(o!==-1&&r[o].deactivate(),e(0,o=u),r[o].activate(),a.requestCallbackBeforeRender(r[o].update.bind(r[o])))}return[o,n,i,r,l,u=>l(u)]}class gct extends xr{constructor(t){super(),gr(this,t,mct,fct,gi,{})}}function xct(s){let t,e,n,i,r,o,a;return n=new vz({}),o=new gct({}),{c(){t=jt("main"),e=jt("div"),lr(n.$$.fragment),i=he(),r=jt("div"),lr(o.$$.fragment),wt(e,"id","canvas-pane"),wt(e,"class","svelte-k4hl9j"),wt(r,"id","menu-pane"),wt(r,"class","overflow-y-scroll svelte-k4hl9j"),wt(t,"class","svelte-k4hl9j")},m(l,c){Ht(l,t,c),Bt(t,e),Fi(n,e,null),Bt(t,i),Bt(t,r),Fi(o,r,null),a=!0},p:en,i(l){a||(Os(n.$$.fragment,l),Os(o.$$.fragment,l),a=!0)},o(l){hi(n.$$.fragment,l),hi(o.$$.fragment,l),a=!1},d(l){l&&Gt(t),Li(n),Li(o)}}}class vct extends xr{constructor(t){super(),gr(this,t,null,xct,gi,{})}}new vct({target:document.getElementById("app")});
